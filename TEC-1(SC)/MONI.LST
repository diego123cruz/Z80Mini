0001   0000             ;--------------------------------------------
0002   0000             ; S O U T H E R N   C R O S S   M O N I T O R
0003   0000             ;--------------------------------------------
0004   0000             ;
0005   0000             ; COMPILAÇÃO:
0006   0000             ;	DOSBOX: (mount f: /users/diego/Z80Mini/..... )
0007   0000             ;		tasm -80 -fff -c MONI.ASM moni.bin
0008   0000             ; 
0009   0000             ; GRAVAÇÃO:
0010   0000             ;	minipro -p AT28C64B -w moni.bin -s	
0011   0000             ;
0012   0000             ;
0013   0000             ; SERIAL MAC:
0014   0000             ; 	SerialTools(Terminal comandos) e WCHSerialPort(Enviar intel hex)
0015   0000             ;
0016   0000             ;
0017   0000             ;
0018   0000             ;
0019   0000             ; WRITTEN BY CRAIG R. S. JONES
0020   0000             ; MELBOURNE, AUSTRALIA.
0021   0000             ; 
0022   0000             ;
0023   0000             ; VERSION : 1.2  01/93
0024   0000             ; VERSION : 1.21  7/93
0025   0000             ; Version 1.3  02/2003  ADDED SOFTWARE SCANNED KEYBOARD (UNRELEASED)
0026   0000             ; Version 1.4  03/2021  MADE INTELH A SYSTEM CALL, REMOVED CANCEL FUNCTIONALITY FROM RXDATA
0027   0000             ;
0028   0000             ; Version 1.5  06/2021  ADDED SBUG SERIAL MONITOR
0029   0000             ;                       ADDED HELP FOR SBUG COMMANDS
0030   0000             ;                       ADDED SBUG ROUTINES TO SYSTEM CALLS
0031   0000             ;                       MOVED THE STACK DOWN TO 3E00H TO RESERVE SOME MORE ROOM FOR MONITOR VARIABLES  
0032   0000             ;                       ADDED INITIALISATION CODE FOR KEYTIM
0033   0000             ; VERSION 1.6  09/2021  CONDITIONAL ASSEMBLY ALLOWS FOR TARGET TO BE TEC-1F OR SOUTHERN CROSS
0034   0000             ;
0035   0000             ; VERSION 1.7  09/2022  AJUSTE PARA Z80Mini (32k ROM, 32k RAM, 4Mhz), Ajustes memory map and Ports IO
0036   0000             ;						Onboad step hardware (Port 60H)
0037   0000             ;
0038   0000             ;THE TARGET IS THE SOUTHERN CROSS
0039   0000             #DEFINE TEC-1F
0040   0000             ;
0041   0000             ;#IFDEF TEC-1F
0042   0000             ;#DEFINE DA_ACTIVE_LOW
0043   0000             ;#ENDIF
0044   0000             ;-----------------
0045   0000             ; SYSTEM VARIABLES
0046   0000             ;-----------------
0047   0000             RAMSRT:	.EQU	8000H	;START OF USER RAM
0048   0000             RAMEND:	.EQU	0FBFFH	;END OF USER RAM
0049   0000             SYSTEM:	.EQU 	0FE00H	;INITIAL STACK POINTER
0050   0000             ;
0051   0000             ; BAUD RATE CONSTANTS
0052   0000             ;
0053   0000             B300:	.EQU	0220H	;300 BAUD
0054   0000             B1200:	.EQU	0080H	;1200 BAUD
0055   0000             B2400:	.EQU	003FH	;2400 BAUD
0056   0000             B4800:	.EQU	001BH	;4800 BAUD
0057   0000             B9600:	.EQU	000BH	;9600 BAUD
0058   0000             ;
0059   0000             ; I/O PORT ADDRESS
0060   0000             ;
0061   0000             #IFDEF TEC-1F
0062   0000             KEYBUF:      .EQU 40H             ;MM74C923N KEYBOARD ENCODER
0063   0000             SCAN:        .EQU 70H             ;DISPLAY SCAN LATCH
0064   0000             DISPLY:      .EQU 40H             ;DISPLAY LATCH
0065   0000             PORTC0:      .EQU 0C0H             ;ST3 (8X8), STROBE (RELAY BOARD) DATLATCH (DAT BOARD)
0066   0000             PORT4:       .EQU 04H             ;ST4 (8X8), LCD 'E' (DAT BOARD)
0067   0000             PORT5:       .EQU 05H
0068   0000             PORT6:       .EQU 06H
0069   0000             PORT60:      .EQU 60H             ;ENABLE/DISABLE SINGLE STEPPER (IF INSTALLED)
0070   0000~            #ELSE
0071   0000~            IO0:         .EQU 80H             ;IO PORT 0
0072   0000~            IO1:         .EQU 81H             ;IO PORT 1
0073   0000~            IO2:         .EQU 82H             ;IO PORT 2
0074   0000~            IO3:         .EQU 83H             ;IO PORT 3
0075   0000~            DISPLY:      .EQU 84H             ;DISPLAY LATCH
0076   0000~            SCAN:        .EQU 85H             ;DISPLAY SCAN LATCH
0077   0000~            KEYBUF:      .EQU 86H             ;KEYBOARD BUFFER
0078   0000~            IO7:         .EQU 87H             ;ENABLE/DISABLE SINGLE STEPPER (IF INSTALLED)
0079   0000             #ENDIF
0080   0000             ;-------------------------
0081   0000             ; MONITOR GLOBAL VARIABLES
0082   0000             ;-------------------------
0083   0000             ;
0084   0000             ; SERIAL MONITOR VARIABLES
0085   0000             ;
0086   0000             MSGBUF:  .EQU 0FE00H   ;STRING HANDLING AREA
0087   0000             ;
0088   0000             PUTCH:   .EQU 0FFAAH   ;OUTPUT A CHARACTER TO SERIAL
0089   0000             GETCH:   .EQU 0FFACH   ;WAIT FOR A CHARACTER FROM SERIAL
0090   0000             ISTACK:  .EQU 0FFAEH   ;SAVE THE INITIAL STACK POINTER    
0091   0000             ADDR:    .EQU 0FFB0H   ;THE ADDRESS  
0092   0000             DATA:    .EQU 0FFB2H   ;THE DATA
0093   0000             ;
0094   0000             SYSFLG:	.EQU	0FFB3H	;SYSTEM FLAGS  BIT 0=KEYBOARD FLAG
0095   0000             FUNTBL:	.EQU	0FFB4H	;FN TABLE ADDRESS
0096   0000             ;
0097   0000             ; DALLAS SMARTWATCH REGISTERS
0098   0000             ;
0099   0000             CALMDE:	.EQU	0FFB6H	;CALENDAR MODE
0100   0000             SWREG0:	.EQU	0FFB8H	;10THS, 100THS
0101   0000             SWREG1:	.EQU	0FFB9H	;SECONDS
0102   0000             SWREG2:	.EQU	0FFBAH	;MINUTES
0103   0000             SWREG3:	.EQU	0FFBBH	;HOURS
0104   0000             SWREG4:	.EQU	0FFBCH	;DAY
0105   0000             SWREG5:	.EQU	0FFBDH	;DATE
0106   0000             SWREG6:	.EQU	0FFBEH	;MONTH
0107   0000             SWREG7:	.EQU	0FFBFH	;YEAR
0108   0000             ;
0109   0000             BAUD:	.EQU	0FFC0H	;BAUD RATE
0110   0000             KEYTIM:	.EQU	0FFC2H	;BEEP DELAY
0111   0000             SPTEMP:	.EQU	0FFC4H	;TEMP SYSTEM CALL SP
0112   0000             ;
0113   0000             ; BLOCK FUNCTIONS
0114   0000             ;
0115   0000             COUNT:	.EQU	0FFC6H	;NUMBER OF BYTES TO MOVE
0116   0000             BLKSRT:	.EQU	0FFC8H	;BLOCK START ADDRESS
0117   0000             BLKEND:	.EQU	0FFCAH	;BLOCK END ADDRESS
0118   0000             BLKDST:	.EQU	0FFCCH	;DESTINATION ADDRESS
0119   0000             ;
0120   0000             FUNJMP:	.EQU	0FFCEH	;FN FN KEY JUMP ADDRESS
0121   0000             ;
0122   0000             ; DISPLAY SCAN REGISTERS
0123   0000             ;
0124   0000             DISBUF:	.EQU	0FFD0H	;DISPLAY BUFFER
0125   0000             ONTIM:	.EQU	0FFD6H	;DISPLAY SCAN ON TIME
0126   0000             OFTIM:	.EQU	0FFD7H	;DISPLAY SCAN OFF TIME
0127   0000             ;
0128   0000             ; MONITOR VARIABLES
0129   0000             ;
0130   0000             MODE:	.EQU	0FFD8H	;DISPLAY MODE
0131   0000             ADRESS:	.EQU	0FFDAH	;USER ADDRESS
0132   0000             KEYDEL:	.EQU	0FFDCH	;AUTO INCREMENT DELAY
0133   0000             ;
0134   0000             ; TEMPORARY REGISTER STORAGE
0135   0000             ;
0136   0000             REGPNT:	.EQU	0FFDEH	;REGISTER POINTER
0137   0000             TMPPC:	.EQU	0FFE0H	;PROGRAM COUNTER
0138   0000             TMPAF:	.EQU	0FFE2H	;ACCUMULATOR,FLAG
0139   0000             TMPBC:	.EQU	0FFE4H	;BC REGISTER PAIR
0140   0000             TMPDE:	.EQU	0FFE6H	;DE REGISTER PAIR
0141   0000             TMPHL:	.EQU	0FFE8H	;HL REGISTER PAIR
0142   0000             TMPIX:	.EQU	0FFEAH	;INDEX REGISTER X
0143   0000             TMPIY:	.EQU	0FFECH	;INDEX REGISTER Y
0144   0000             TMPSP:	.EQU	0FFEEH	;STACK POINTER
0145   0000             ;
0146   0000             ; RESTART JUMP TABLE AND HARWARE TEST
0147   0000             ;
0148   0000             RST08:	.EQU	0FFF0H	;RESTART 08H JUMP
0149   0000             RST10:	.EQU	0FFF2H	;RESTART 10H JUMP
0150   0000             RST18:	.EQU	0FFF4H	;RESTART 18H JUMP
0151   0000             RST20:	.EQU	0FFF6H	;RESTART 20H JUMP
0152   0000             RST28:	.EQU	0FFF8H	;RESTART 28H JUMP
0153   0000             RST38:	.EQU	0FFFAH	;INT INTERRUPT JUMP
0154   0000             RST66:	.EQU	0FFFCH	;NMI INTERRUPT JUMP
0155   0000             RAMSUM:	.EQU	0FFFEH	;USER RAM CHECKSUM
0156   0000             DALLAS:	.EQU	0FFFFH	;RAM TEST LOCATION
0157   0000             ;----------------
0158   0000             ; RESTART VECTORS
0159   0000             ;----------------
0160   0000             ;
0161   0000             ;  RESTART 00H - RST 0
0162   0000             ;WHEN POWER IS APPLIED TO THE SOUTHERN CROSS
0163   0000             ;THE Z80 STARTS EXECUTING INSTRUCTIONS FROM HERE
0164   0000             ;
0165   0000             	.ORG	0000H
0166   0000 C3 00 02    RSTVEC:	JP	RESET
0167   0003             ;
0168   0003             ; RESTART 08H - RST 1
0169   0003             ;
0170   0008             	.ORG	0008H
0171   0008 E5          	PUSH	HL
0172   0009 2A F0 FF    	LD	HL,(RST08)
0173   000C E9          	JP	(HL)
0174   000D             ;
0175   000D             ; RESTART 10H - RST 2
0176   000D             ;
0177   0010             	.ORG	0010H
0178   0010 E5          	PUSH	HL
0179   0011 2A F2 FF    	LD	HL,(RST10)
0180   0014 E9          	JP	(HL)
0181   0015             ;
0182   0015             ; RESTART 18H - RST 3
0183   0015             ;
0184   0018             	.ORG	0018H
0185   0018 E5          	PUSH	HL
0186   0019 2A F4 FF    	LD	HL,(RST18)
0187   001C E9          	JP	(HL)
0188   001D             ;
0189   001D             ; RESTART 20H - RST 4
0190   001D             ;
0191   0020             	.ORG	0020H
0192   0020 E5          	PUSH	HL
0193   0021 2A F6 FF    	LD	HL,(RST20)
0194   0024 E9          	JP	(HL)
0195   0025             ;
0196   0025             ; RESTART 28H - RST 5
0197   0025             ;
0198   0028             	.ORG	0028H
0199   0028 E5          	PUSH	HL
0200   0029 2A F8 FF    	LD	HL,(RST28)
0201   002C E9          	JP	(HL)
0202   002D             ;
0203   002D             ; RESTART 30H - RST 6 - MONITOR ROUTINES ENTRY POINT
0204   002D             ;
0205   0030             	.ORG	0030H
0206   0030 C3 68 00    RST30:	JP	SYSCALL
0207   0033             ;
0208   0033             ; RESTART 38H - RST 7     BREAKPOINT HANDLER
0209   0033             ;IF INTERRUPTS ARE ENABLED,AND AN
0210   0033             ;INT OCCURS- FURTHER INTERRUPTS
0211   0033             ;ARE DISABLED, THE PROGRAM COUNTER
0212   0033             ;IS PUSHED ONTO THE STACK, AND EXECUTION
0213   0033             ;STARTS HERE
0214   0033             ;
0215   0038             	.ORG	0038H
0216   0038 E5          	PUSH	HL
0217   0039 2A FA FF    	LD	HL,(RST38)
0218   003C E9          	JP	(HL)
0219   003D             ;
0220   003D             ; RESTART 66H NMI VECTOR
0221   003D             ; SAME AS ABOVE BUT NMI CANNOT BE DISABLED.
0222   003D             ;
0223   0066             	.ORG	0066H
0224   0066                 
0225   0066             #IFDEF TEC-1F
0226   0066 ED 4D           RETI
0227   0068~            #ELSE
0228   0068~            	PUSH	HL
0229   0068~            	LD	HL,(RST66)
0230   0068~            	JP	(HL)
0231   0068             #ENDIF
0232   0068             ;--------------------
0233   0068             ; SYSTEM CALL HANDLER
0234   0068             ;--------------------
0235   0068             ;CALLS TO BASIC I/O AND OTHER ROUTINES
0236   0068             ;WITHIN THE MONITOR HAVE BEEN ASSIGNED
0237   0068             ;SYSTEM CALL NUMBERS TO AVOID RE-WRITING
0238   0068             ;USER SOFTWARE IF MONITOR ABSOLUTE ADDRESSES
0239   0068             ;CHANGE IN SUBSEQUENT MONITORS
0240   0068             ;
0241   0068             ;ENTRY : C = CALL NUMBER
0242   0068             ;SEE ROUTINES FOR ENTRY AND EXIT
0243   0068             ;PARAMETERS
0244   0068             ;
0245   0068 3B          SYSCALL:	DEC	SP
0246   0069 3B          	DEC	SP	;LEAVE SPACE FOR SYSCALL
0247   006A ED 73 C4 FF 	LD	(SPTEMP),SP	;POINTS TO SYSCALL LO
0248   006E F5          	PUSH	AF
0249   006F D5          	PUSH	DE
0250   0070 E5          	PUSH	HL	;SAVE REGISTERS
0251   0071 79          	LD	A,C	;GET CALL NUMBER
0252   0072 E6 7F       	AND	127	;ENSURE IN LIMITS
0253   0074 CB 27       	SLA	A	;MULTIPLY BY TWO
0254   0076 26 01       	LD	H,1	;LOAD JUMP TABLE HIGH BYTE
0255   0078 6F          	LD	L,A	;LOAD INDEX
0256   0079 7E          	LD	A,(HL)
0257   007A 23          	INC	HL
0258   007B 56          	LD	D,(HL)	;GET JUMP ADDRESS
0259   007C 2A C4 FF    	LD	HL,(SPTEMP)	;POINT TO SYSCALL LO
0260   007F 77          	LD	(HL),A	;PUT SYSCALL LO ON STACK
0261   0080 23          	INC	HL
0262   0081 7A          	LD	A,D
0263   0082 77          	LD	(HL),A	;PUT SYSCALL HI ON STACK
0264   0083 E1          	POP	HL
0265   0084 D1          	POP	DE
0266   0085 F1          	POP	AF	;RESTORE REGISTERS
0267   0086 C9          	RET		;JUMPS TO SYSTEM CALL
0268   0087             ;-----------------------
0269   0087             ; SYSTEM CALL JUMP TABLE
0270   0087             ;-----------------------
0271   0100             	.ORG	0100H
0272   0100 9B 02 AB 03 SYSJMP:	.DW	MAIN,VERS
0273   0104 AF03C4032804	.DW	DISADD,DISBYT,CLRBUF,SCAND
0273   010A FD03
0274   010C CD03DA03DE03	.DW	CONBYT,CONVHI,CONVLO
0275   0112 83048F049B04	.DW	SKEYIN,SKEYRL,KEYIN,KEYREL
0275   0118 A404
0276   011A AD 04 D0 04 	.DW	MENU,CHKSUM
0277   011E 08 05 F0 04 	.DW	MUL16,RAND
0278   0122 E0 04 E7 04 	.DW	INDEXB,INDEXW
0279   0126 1F059C05BC05	.DW	MUSIC,TONE,BEEP
0280   012C F4 0C       	.DW	SKATE
0281   012E 5D0888085408	.DW	TXDATA,RXDATA,ASCHEX
0282   0134 160F8C0E760F	.DW	WWATCH,RWATCH,ONESEC
0283   013A 1C0C4A0C3704	.DW	RLSTEP,DELONE,SCANKEY
0284   0140 CC 07 F4 0B     .DW INTELH,SPLIT
0285   0144 C1 11 AC 11     .DW SNDMSG,BITASC
0286   0148 93119811A111    .DW WRDASC,BYTASC,NYBASC
0287   014E             ;------------------------------
0288   014E             ; POWER UP RESET / MANUAL RESET
0289   014E             ;------------------------------
0290   0200             	.ORG	0200H
0291   0200             ;
0292   0200             ; WAIT FOR SMART SOCKET
0293   0200             ; TO RECOVER FROM POWER DOWN
0294   0200             ;
0295   0200 3E 55       RESET:	LD	A,55H
0296   0202 32 FF FF    	LD	(DALLAS),A	;WRITE TO RAM
0297   0205 AF          	XOR	A
0298   0206 D3 40       	OUT	(DISPLY),A	;WRITE NOTHING TO
0299   0208 D3 70       	OUT	(SCAN),A	;ON BOARD I/O
0300   020A DB 40       	IN	A,(KEYBUF)	;TO HELP DEBUGGING
0301   020C 3A FF FF    	LD	A,(DALLAS)	;READ FROM RAM
0302   020F FE 55       	CP	55H	;IS IT READY?
0303   0211 C2 00 02    	JP	NZ,RESET	;KEEP TRYING
0304   0214             ;
0305   0214             ; LOAD STACK POINTER
0306   0214             ;
0307   0214 31 00 FE    RESET1:	LD	SP,SYSTEM
0308   0217             ;
0309   0217             ; SET UP RESTART VECTORS
0310   0217             ;
0311   0217 21 14 02    	LD	HL,RESET1
0312   021A 22 F0 FF    	LD	(RST08),HL
0313   021D 22 F2 FF    	LD	(RST10),HL
0314   0220 22 F4 FF    	LD	(RST18),HL
0315   0223 22 F6 FF    	LD	(RST20),HL
0316   0226 22 F8 FF    	LD	(RST28),HL
0317   0229 22 FC FF    	LD	(RST66),HL	;NMI INTERRUPT
0318   022C 21 E6 05    	LD	HL,SSTEP
0319   022F 22 FA FF    	LD	(RST38),HL	;SINGLE STEPPER
0320   0232             ;
0321   0232             ; SET INTERRUPT MODE 1 - USE THE AUTOMATED INTERRUPT
0322   0232             ;
0323   0232 ED 56       	IM	1
0324   0234             ;
0325   0234 FB          	EI		;ENABLE INTERRUPTS
0326   0235             ;
0327   0235             ; PERFORM CHECKSUM ON USER RAM
0328   0235             ;
0329   0235 21 00 80    	LD	HL,RAMSRT	;START OF USER RAM
0330   0238 11 FF FB    	LD	DE,RAMEND	;END OF USER RAM
0331   023B CD D0 04    	CALL	CHKSUM
0332   023E 32 FE FF    	LD	(RAMSUM),A	;RAM CHECKSUM
0333   0241             ;
0334   0241             ; SET UP DEFAULT VARIABLES
0335   0241             ;
0336   0241 21 7A 07    	LD	HL,FUNLST
0337   0244 22 B4 FF    	LD	(FUNTBL),HL	;FUNCTION KEY TABLE
0338   0247             
0339   0247             ;
0340   0247             ; SET UP function table 2 if pressed shift
0341   0247             ;
0342   0247 DB 40       	IN  A, (KEYBUF)
0343   0249 CB 6F       	BIT 5, A
0344   024B C2 54 02    	JP NZ, TBL2_SKP
0345   024E 21 3B 07    	LD  HL, FUNLST2
0346   0251 22 B4 FF    	LD  (FUNTBL), HL
0347   0254             TBL2_SKP:
0348   0254             
0349   0254             ;
0350   0254             ; PRESS THE FUNCTION KEY TWICE TO JUMP INTO THE SERIAL MONITOR
0351   0254             ;
0352   0254 21 8C 0F        LD  HL,SCBUG    ;JUMP TO SERIAL MONITOR 
0353   0257 22 CE FF    	LD	(FUNJMP),HL	;FN FN JUMP
0354   025A             
0355   025A 3E 00       	LD	A,00H
0356   025C 32 DE FF    	LD	(REGPNT),A	;INIT SINGLE STEPPER
0357   025F 21 1B 00    	LD	HL,B4800
0358   0262 22 C0 FF    	LD	(BAUD),HL	;DEFAULT SERIAL=4800 BAUD
0359   0265 21 00 02    	LD	HL,0200H
0360   0268 22 DC FF    	LD	(KEYDEL),HL	;AUTO-INC/DEC DELAY
0361   026B 21 00 10        LD  HL,1000H
0362   026E 22 C2 FF        LD  (KEYTIM),HL ;DELAY TIME INSTEAD OF A BEEP
0363   0271 3E 0A       	LD	A,0AH
0364   0273 32 D7 FF    	LD	(OFTIM),A	;DISPLAY OFF TIME
0365   0276 CD BC 05    	CALL	BEEP
0366   0279 CD BC 05    	CALL	BEEP
0367   027C             ;
0368   027C             ; SOFTWARE KEYBOARD ENCODER
0369   027C             ;
0370   027C 3E 00       	LD	A,00H
0371   027E CB C7       	SET	0,A		        ;SOFTWARE SCANNED
0372   0280 32 B3 FF    	LD	(SYSFLG),A
0373   0283             #IFDEF TEC-1F
0374   0283 3E 08       	LD	A,08H
0375   0285 32 D6 FF    	LD	(ONTIM),A	    ;DISPLAY ON TIME FOR SOFTWARE KEYBOARD    
0376   0288~            #ELSE    
0377   0288~            	LD	A,20H
0378   0288~            	LD	(ONTIM),A	    ;DISPLAY ON TIME FOR SOFTWARE KEYBOARD
0379   0288             #ENDIF
0380   0288             
0381   0288             #IFDEF TEC-1F    
0382   0288 DB 40       	IN  A,(KEYBUF)      ;READ KEY BUFFER
0383   028A CB 77       	BIT	6,A		        ;DA LOW? MUST BE SOFTWARE SCANNING
0384   028C 20 0D       	JR	NZ,MAIN    
0385   028E~            #ELSE    
0386   028E~            	IN  A,(KEYBUF)      ;READ KEY BUFFER
0387   028E~            	BIT	5,A		        ;DA HIGH? MUST BE SOFTWARE SCANNING
0388   028E~            	JR	NZ,MAIN
0389   028E             #ENDIF
0390   028E             ;
0391   028E             ; HARDWARE KEYBOARD ENCODER
0392   028E             ;
0393   028E 3A B3 FF    	LD	A,(SYSFLG)	    ;GET SYSTEM FLAGS
0394   0291 CB 87       	RES	0,A		        ;HARDWARE ENCODER
0395   0293 32 B3 FF    	LD	(SYSFLG),A
0396   0296             #IFDEF TEC-1F
0397   0296 3E 08       	LD	A,08H
0398   0298~            #ELSE
0399   0298~            	LD	A,20H
0400   0298             #ENDIF
0401   0298                 
0402   0298 32 D6 FF    	LD	(ONTIM),A	;DISPLAY ON TIME FOR KEYBOARD ENCODER
0403   029B              
0404   029B             ;-----------------
0405   029B             ; SET UP MAIN LOOP
0406   029B             ;-----------------
0407   029B 31 00 FE    MAIN:	LD	SP,SYSTEM	;SET STACK
0408   029E 21 00 80    	LD	HL,RAMSRT
0409   02A1 22 DA FF    	LD	(ADRESS),HL	;DEFAULT ADDRESS
0410   02A4 3A D8 FF    	LD	A,(MODE)
0411   02A7 F6 80       	OR	80H	;START OFF IN DATA MODE
0412   02A9 32 D8 FF    	LD	(MODE),A 
0413   02AC             ;
0414   02AC             ; SCAN THE DISPLAYS UNTIL A KEY IS PRESSED
0415   02AC             ;
0416   02AC CD 86 03    MAIN1:	CALL	UPDATE
0417   02AF CD 83 04    MAIN2:	CALL	SKEYIN	;WAIT FOR A KEY
0418   02B2 21 C1 02    	LD	HL,MENLST	;USE THE MENU HANDLER
0419   02B5 CD AD 04    	CALL	MENU	;ROUTINE FOR EACH KEY
0420   02B8 CD 86 03    	CALL	UPDATE	;UPDATE BUFFER AND
0421   02BB CD 8F 04    	CALL	SKEYRL	;WAIT FOR KEY RELEASE
0422   02BE C3 AF 02    	JP	MAIN2
0423   02C1             ;
0424   02C1             ; MAIN MENU KEY TABLE
0425   02C1             ;
0426   02C1 14          MENLST:      .DB 20
0427   02C2 000102030405            .DB 00H,01H,02H,03H,04H,05H,06H,07H
0427   02C8 0607
0428   02CA 08090A0B0C0D            .DB 08H,09H,0AH,0BH,0CH,0DH,0EH,0FH
0428   02D0 0E0F
0429   02D2 10 11 12 13             .DB 10H,11H,12H,13H
0430   02D6 FE02FE02FE02            .DW HEXKEY,HEXKEY,HEXKEY,HEXKEY
0430   02DC FE02
0431   02DE FE02FE02FE02            .DW HEXKEY,HEXKEY,HEXKEY,HEXKEY
0431   02E4 FE02
0432   02E6 FE02FE02FE02            .DW HEXKEY,HEXKEY,HEXKEY,HEXKEY
0432   02EC FE02
0433   02EE FE02FE02FE02            .DW HEXKEY,HEXKEY,HEXKEY,HEXKEY
0433   02F4 FE02
0434   02F6             #IFDEF TEC-1F           
0435   02F6 3C0361030F07            .DW INCKEY,DECKEY,FUNKEY,ADDKEY    ;TEC KEYS    +  -  GO  AD        
0435   02FC 3003
0436   02FE~            #ELSE                   
0437   02FE~                        .DW FUNKEY,ADDKEY,INCKEY,DECKEY    ;SC-1 KEYS  FN  AD  +  -
0438   02FE             #ENDIF
0439   02FE             ;---------------------------------------------------
0440   02FE             ; ENTER HEX KEY AS LEAST SIGNIFICANT ADDRESS OR DATA
0441   02FE             ;---------------------------------------------------
0442   02FE CD BC 05    HEXKEY:	CALL	BEEP
0443   0301 21 D8 FF    	LD	HL,MODE
0444   0304 CB 7E       	BIT	7,(HL)	;ADDR OR DATA MODE?
0445   0306 CA 17 03    	JP	Z,HEXKY2	;IN ADDR MODE
0446   0309             ;
0447   0309             ; IN DATA MODE
0448   0309             ;
0449   0309 2A DA FF    HEXKY1:	LD	HL,(ADRESS)
0450   030C CB 26       	SLA	(HL)	;FROM THE CURRENT
0451   030E CB 26       	SLA	(HL)	;ADDRESS,MOVE THE
0452   0310 CB 26       	SLA	(HL)	;LSN TO THE MSN.
0453   0312 CB 26       	SLA	(HL)	;PUT THE KEY IN
0454   0314 B6          	OR	(HL)	;THE NEW DATA BACK AT
0455   0315 77          	LD	(HL),A	;THE CURRENT ADDRESS.
0456   0316 C9          	RET
0457   0317             ;
0458   0317             ; IN ADDRESS MODE
0459   0317             ;
0460   0317 2A DA FF    HEXKY2:	LD	HL,(ADRESS)
0461   031A CB 25       	SLA	L	;CURRENT ADDRESS
0462   031C CB 14       	RL	H	;AND DO A 16 BIT
0463   031E CB 25       	SLA	L	;LEFT SHIFT 4 TIMES
0464   0320 CB 14       	RL	H	;TO MAKE  ROOM
0465   0322 CB 25       	SLA	L	;FOR THE NEW KEY
0466   0324 CB 14       	RL	H
0467   0326 CB 25       	SLA	L
0468   0328 CB 14       	RL	H
0469   032A B5          	OR	L	;IT IN THE LEAST
0470   032B 6F          	LD	L,A	;SIGNIFICANT NYBBLE
0471   032C 22 DA FF    	LD	(ADRESS),HL	;SAVE CURRENT ADDRESS
0472   032F C9          	RET
0473   0330             ;-------------
0474   0330             ; CHANGE MODES
0475   0330             ;-------------
0476   0330 CD BC 05    ADDKEY:	CALL	BEEP
0477   0333 3A D8 FF    	LD	A,(MODE)
0478   0336 EE 80       	XOR	80H	;TOGGLE MODE
0479   0338 32 D8 FF    	LD	(MODE),A
0480   033B C9          	RET
0481   033C             ;------------------
0482   033C             ; INCREMENT ADDRESS
0483   033C             ;------------------
0484   033C CD BC 05    INCKEY:      CALL BEEP
0485   033F 2A DA FF    INCKY1:      LD HL,(ADRESS)
0486   0342 23                      INC HL              ;INC ADDRESS
0487   0343 22 DA FF                LD (ADRESS),HL
0488   0346 CD 86 03                CALL UPDATE
0489   0349 2A DC FF                LD HL,(KEYDEL)      ;AUTO REPEAT DELAY
0490   034C CD FD 03    INCKY2:      CALL SCAND
0491   034F DB 40                   IN A,(KEYBUF)
0492   0351             #IFDEF  TEC-1F
0493   0351 CB 77                   BIT 6,A
0494   0353~            #ELSE
0495   0353~                        BIT 5,A
0496   0353             #ENDIF                
0497   0353~            #IFDEF DA_ACTIVE_LOW
0498   0353~                        JR NZ,INCKY3        ;KEY RELEASED
0499   0353             #ELSE
0500   0353 28 0B                   JR Z,INCKY3         ;KEY RELEASED
0501   0355             #ENDIF              
0502   0355 11 01 00                LD DE,0001H
0503   0358 ED 52                   SBC HL,DE
0504   035A D2 4C 03                JP NC,INCKY2
0505   035D C3 3F 03                JP INCKY1
0506   0360 C9          INCKY3:      RET
0507   0361             ;------------------
0508   0361             ; DECREMENT ADDRESS
0509   0361             ;------------------
0510   0361 CD BC 05    DECKEY:      CALL BEEP
0511   0364 2A DA FF    DECKY1:      LD HL,(ADRESS)
0512   0367 2B                      DEC HL              ;DEC ADDRESS
0513   0368 22 DA FF                LD (ADRESS),HL
0514   036B CD 86 03                CALL UPDATE
0515   036E 2A DC FF                LD HL,(KEYDEL)      ;AUTO REPEAT DELAY
0516   0371 CD FD 03    DECKY2:      CALL SCAND
0517   0374 DB 40                   IN A,(KEYBUF)       ;READ KEYBOARD
0518   0376             #IFDEF  TEC-1F
0519   0376 CB 77                   BIT 6,A
0520   0378~            #ELSE
0521   0378~                        BIT 5,A
0522   0378             #ENDIF            
0523   0378~            #IFDEF DA_ACTIVE_LOW           
0524   0378~                        JR NZ,DECKY3         ; - KEY RELEASED
0525   0378             #ELSE         
0526   0378 28 0B                   JR Z,DECKY3         ; - KEY RELEASED
0527   037A             #ENDIF
0528   037A 11 01 00                LD DE,0001H
0529   037D ED 52                   SBC HL,DE
0530   037F D2 71 03                JP NC,DECKY2
0531   0382 C3 64 03                JP DECKY1
0532   0385 C9          DECKY3:      RET
0533   0386             ;-----------------------------------------
0534   0386             ; UPDATE DISPLAY BUFFER TO CURRENT ADDRESS
0535   0386             ;-----------------------------------------
0536   0386 2A DA FF    UPDATE:      LD HL,(ADRESS)
0537   0389 CD AF 03                CALL DISADD         ;AND DATA, PUT IN
0538   038C 7E                      LD A,(HL)
0539   038D CD C4 03                CALL DISBYT         ;DISPLAY BUFFER
0540   0390             ;
0541   0390             ; IN ADDRESS OR DATA MODE?
0542   0390             ;
0543   0390 21 D8 FF                LD HL,MODE
0544   0393 CB 7E                   BIT 7,(HL)          ;DATA OR ADDR MODE?
0545   0395 CA A0 03                JP Z,ADMODE         ;ADDRESS MODE
0546   0398             ;
0547   0398             ; SHOW DATA MODE
0548   0398             ;
0549   0398 21 D0 FF                LD HL,DISBUF        ;SET THE DP'S 
0550   039B 06 02                   LD B,2              ;IN THE DATA
0551   039D C3 A5 03                JP SETDP            ;DISPLAY
0552   03A0             ;
0553   03A0             ; SHOW ADDRESS MODE
0554   03A0             ;
0555   03A0 21 D2 FF    ADMODE:      LD HL,DISBUF+2
0556   03A3 06 04                   LD B,4              ;SET THE DP'S IN THE ADDRESS DISPLAY
0557   03A5             ;
0558   03A5             ; SET DECIMAL POINT
0559   03A5             ;
0560   03A5             ;SET DP IN THE BYTE POINTED TO BY HL
0561   03A5             ;
0562   03A5             #IFDEF TEC-1F
0563   03A5 CB FE       SETDP:       SET 7,(HL)          ;SET BIT 4 FOR DP ON TEC-1F DISPLAY
0564   03A7~            #ELSE
0565   03A7~            SETDP:       SET 7,(HL)          ;SET BIT 7 FOR DP ON SC-1 DISPLAY
0566   03A7             #ENDIF
0567   03A7 23                      INC HL              ;POINT TO NEXT BYTE
0568   03A8 10 FB                   DJNZ SETDP          ;MORE BITS TO SET
0569   03AA C9                      RET
0570   03AB             ;---------------
0571   03AB             ; VERSION NUMBER
0572   03AB             ;---------------
0573   03AB             ;RETURNS THE SOFTWARE VERSION NUMBER
0574   03AB             ;SHOULD FUTURE MONITORS EXHIBIT DIFFERENCES
0575   03AB             ;THE VERSION NUMBER CAN BE USED TO COMPENSATE
0576   03AB             ;
0577   03AB             ;	ENTRY : NONE
0578   03AB             ; EXIT : H = ASCII MINOR VERSION NUMBER
0579   03AB             ;        L = ASCII MAJOR VERSION NUMBER
0580   03AB             ;
0581   03AB 21 36 31    VERS:	LD	HL,3136H
0582   03AE C9          	RET
0583   03AF             ;-------------------------
0584   03AF             ; ADDRESS > DISPLAY BUFFER
0585   03AF             ;-------------------------
0586   03AF             ;CONVERT HL TO SEVEN SEGMENT CODE
0587   03AF             ;AND PUT IN ADDRESS DISPLAY BUFFER.
0588   03AF             ;
0589   03AF             ; ENTRY : HL = ADDRESS TO BE DISPLAYED
0590   03AF             ;
0591   03AF             ; EXIT  : NO REGISTERS MODIFIED
0592   03AF             ;
0593   03AF F5          DISADD:	PUSH	AF
0594   03B0 E5          	PUSH	HL
0595   03B1 E5          	PUSH	 HL
0596   03B2 7C          	LD	A,H
0597   03B3 CD CD 03    	CALL	CONBYT
0598   03B6 22 D4 FF    	LD	(DISBUF+4),HL
0599   03B9 E1          	POP	HL
0600   03BA 7D          	LD	A,L
0601   03BB CD CD 03    	CALL	CONBYT
0602   03BE 22 D2 FF    	LD	(DISBUF+2),HL
0603   03C1 E1          	POP	HL
0604   03C2 F1          	POP	AF
0605   03C3 C9          	RET
0606   03C4             ;---------------------------
0607   03C4             ; DATA BYTE > DISPLAY BUFFER
0608   03C4             ;---------------------------
0609   03C4             ;CONVERT THE ACC TO SEVEN SEGMENT CODE
0610   03C4             ;AND PUT IN DATA DISPLAY BUFFER.
0611   03C4             ;
0612   03C4             ; ENTRY :  A = DATA DISPLAY BYTE
0613   03C4             ;
0614   03C4             ; EXIT  : NO REGISTERS MODIFIED
0615   03C4             ;
0616   03C4 E5          DISBYT:	PUSH	HL
0617   03C5 CD CD 03    	CALL	CONBYT
0618   03C8 22 D0 FF    	LD	(DISBUF),HL
0619   03CB E1          	POP	HL
0620   03CC C9          	RET
0621   03CD             ;---------------------------------------
0622   03CD             ; CONVERT BYTE TO 7 SEGMENT DISPLAY CODE
0623   03CD             ;---------------------------------------
0624   03CD             ; CONVERTS BYTE IN ACC TO SEVEN SEGMENT CODE
0625   03CD             ; FOR DISPLAY
0626   03CD             ; ENTRY : A = BYTE TO BE CONVERTED
0627   03CD             ; EXIT  : H = HI NYBBLE SEVEN SEGMENT CODE
0628   03CD             ;         L = LO NYBBLE SEVEN SEGMENT CODE
0629   03CD             ;         A = NOT MODIFIED
0630   03CD F5          CONBYT:	PUSH	AF
0631   03CE F5          	PUSH	AF
0632   03CF CD DA 03    	CALL	CONVHI	;CONVERT HI NYBBLE
0633   03D2 67          	LD	H,A
0634   03D3 F1          	POP	AF
0635   03D4 CD DE 03    	CALL	CONVLO	;CONVERT LO NYBBLE
0636   03D7 6F          	LD	L,A
0637   03D8 F1          	POP	AF
0638   03D9 C9          	RET
0639   03DA             ;---------------------------------------------
0640   03DA             ; HEXADECIMAL TO SEVEN SEGMENT CODE CONVERSION
0641   03DA             ;---------------------------------------------
0642   03DA             ; CONVERTS NYBBLE IN ACC TO SEVEN SEGMENT CODE
0643   03DA             ; FOR SEVEN SEGMENT DISPLAYS
0644   03DA             ; CONVHI = CONVERTS HIGH NYBBLE
0645   03DA             ; CONVLO = CONVERTS LO NYBBLE
0646   03DA             ;
0647   03DA             ; ENTRY : A = NYBBLE TO BE CONVERTED
0648   03DA             ; EXIT  : A = SEVEN SEGMENT CODE
0649   03DA             ;
0650   03DA 07          CONVHI:	RLCA
0651   03DB 07          	RLCA
0652   03DC 07          	RLCA	;MOVE TO LO NYBBLE
0653   03DD 07          	RLCA	;FOR CONVERSION
0654   03DE C5          CONVLO:	PUSH	BC
0655   03DF E5          	PUSH	HL
0656   03E0 21 ED 03    	LD	HL,SEGMNT	;USE THE HEX VALUE
0657   03E3 E6 0F       	AND	0FH	;TO INDEX TO THE
0658   03E5 4F          	LD	C,A	;THE SEVEN SEGMENT
0659   03E6 06 00       	LD	B,00H	;CODE FOR THAT VALUE
0660   03E8 09          	ADD	HL,BC	;AND RETURN WITH
0661   03E9 7E          	LD	A,(HL)	;CODE IN A
0662   03EA E1          	POP	HL
0663   03EB C1          	POP	BC
0664   03EC C9          	RET
0665   03ED             
0666   03ED             ; =========================================================
0667   03ED             ; Tabela display
0668   03ED             ; =========================================================
0669   03ED             ; 
0670   03ED             ;   0 - $3F     A - $77     K - $7A     U - $1C     . - $80
0671   03ED             ;   1 - $06     B - $7C     L - $38     V - $3E     Ñ - $55
0672   03ED             ;   2 - $5B     C - $39     M - $37     W - $1D     : - $41
0673   03ED             ;   3 - $4F     D - $5E     N - $54     X - $70     ; - $88
0674   03ED             ;   4 - $66     E - $79     O - $3F     Y - $6E     _ - $08
0675   03ED             ;   5 - $6D     F - $71     P - $73     Z - $49     ~ - $01
0676   03ED             ;   6 - $7D     G - $6F     Q - $67                 ' - $20
0677   03ED             ;   7 - $07     H - $76     R - $50     + - $46     
0678   03ED             ;   8 - $7F     I - $06     S - $6D     , - $04     
0679   03ED             ;   9 - $67     J - $1E     T - $78     - - $40   
0680   03ED             ;
0681   03ED             ; HEXADECIMAL TO 7 SEGMENT DISPLAY CODE TABLE
0682   03ED             #IFDEF TEC-1F
0683   03ED 3F 06 5B 4F SEGMNT:      .DB 3FH,06H,5BH,4FH ;0,1,2,3
0684   03F1 66 6D 7D 07             .DB 66H,6DH,7DH,07H ;4,5,6,7
0685   03F5 7F 67 77 7C             .DB 7FH,67H,77H,7CH ;8,9,A,B
0686   03F9 39 5E 79 71             .DB 39H,5EH,79H,71H ;C,D,E,F
0687   03FD~            #ELSE
0688   03FD~            SEGMNT:      .DB 3FH,06H,5BH,4FH ;0,1,2,3
0689   03FD~                        .DB 66H,6DH,7DH,07H ;4,5,6,7
0690   03FD~                        .DB 7FH,6FH,77H,7CH ;8,9,A,B
0691   03FD~                        .DB 39H,5EH,79H,71H ;C,D,E,F
0692   03FD             #ENDIF
0693   03FD             ;-------------
0694   03FD             ; SCAN DISPLAY
0695   03FD             ;-------------
0696   03FD             ;AS THE DISPLAYS ARE MULTIPLEXED, THE DATA FOR EACH
0697   03FD             ;DISPLAY MUST BE LATCHED INTO THE DISPLAY SEGMENT
0698   03FD             ;LATCH IN TURN AND THE CORRESPONDING BIT IN THE DISPLAY
0699   03FD             ;SCAN LATCH TURNED ON TO DISPLAY THE DATA.
0700   03FD             ;TWO SHORT DELAYS ARE USED TO ADJUST THE DUTY
0701   03FD             ;CYCLE AND HENCE DISPLAY BRIGHTNESS.
0702   03FD             ;
0703   03FD             ; ENTRY : NONE
0704   03FD             ; EXIT  : NO REGISTERS MODIFIED
0705   03FD             ;
0706   03FD F5          SCAND:   PUSH    AF
0707   03FE C5          	PUSH	BC
0708   03FF E5          	PUSH	HL	;SAVE REGISTERS
0709   0400 21 D5 FF    	LD	HL,DISBUF+5
0710   0403 0E 20       	LD	C,20H
0711   0405 7E          SCAND1:	LD	A,(HL)
0712   0406 D3 40       	OUT	(DISPLY),A	;OUTPUT CHARACTER
0713   0408 79          	LD	A,C
0714   0409 D3 70       	OUT	(SCAN),A	;TURN ON DISPLAY
0715   040B 3A D6 FF    	LD	A,(ONTIM)	;DO A SHORT DELAY
0716   040E 47          	LD	B,A	;TO ADJUST ON TIME
0717   040F 10 FE       SCAND2:	DJNZ	SCAND2	;OF DISPLAY
0718   0411 78          	LD	A,B	;B IS NOW CLEAR, USE
0719   0412 D3 70       	OUT	(SCAN),A	;IT TO TURN OFF SCAN
0720   0414 3A D7 FF    	LD	A,(OFTIM)	;DO A SHORT DELAY
0721   0417 47          	LD	B,A	;TO ADJUST OFF TIME
0722   0418 10 FE       SCAND3:	DJNZ	SCAND3	;OF DISPLAY
0723   041A 2B          	DEC	HL	;POINT TO NEXT
0724   041B CB 09       	RRC	C	;ELEMENT IN BUFFER
0725   041D 30 E6       	JR	NC,SCAND1	;DISPLAY NEXT ELEMENT
0726   041F 78          	LD	A,B	;B IS NOW CLEAR, USE
0727   0420 D3 70       	OUT	(SCAN),A	;IT TO TURN OFF SCAN
0728   0422 D3 40       	OUT	(DISPLY),A	;AND CLEAR DISPLAY LATCH
0729   0424 E1          	POP	HL
0730   0425 C1          	POP	BC
0731   0426 F1          	POP	AF	;RESTORE REGISTERS
0732   0427 C9          	RET
0733   0428             ;---------------------
0734   0428             ; CLEAR DISPLAY BUFFER
0735   0428             ;---------------------
0736   0428 E5          CLRBUF:	PUSH	HL
0737   0429 C5          	PUSH	BC
0738   042A 21 D0 FF    	LD	HL,DISBUF
0739   042D 06 06       	LD	B,6
0740   042F 36 00       CLRBF1:	LD	(HL),00H	;PUT ZERO IN 6
0741   0431 23          	INC	HL	;LOCATIONS POINTED
0742   0432 10 FB       	DJNZ	CLRBF1	;TO BY HL
0743   0434 C1          	POP	BC
0744   0435 E1          	POP	HL
0745   0436 C9          	RET
0746   0437             ;--------------
0747   0437             ; SCAN KEYBOARD
0748   0437             ;--------------
0749   0437             ; USE DISPLAY SCAN DRIVERS FOR COLUMNS
0750   0437             ; AND KEYBOARD BUFFER AS ROWS.
0751   0437             ; MAKE EACH DATA LINE HIGH IN TURN AND CHECK
0752   0437             ; IF EACH INDIVIDUAL PUSHBUTTON IS PRESSED.
0753   0437             ;
0754   0437             ; NEW ROUTINE VERSION 1.3
0755   0437             ;
0756   0437             ; ENTRY : NONE
0757   0437             ; EXIT  : A = 00H IF NO KEY DETECTED
0758   0437             ;         A = DETECTED KEY WITH BIT 5 SET
0759   0437             ;         BIT 5 USED AS DATA AVAILABLE LIKE 74C922 KEYBOARD ENCODER
0760   0437 C5          SCANKEY: PUSH    BC
0761   0438 D5          	PUSH    DE              ;SAVE REGISTERS
0762   0439 E5          	PUSH	HL
0763   043A 3A B3 FF    	LD	A,(SYSFLG)
0764   043D CB 47       	BIT	0,A
0765   043F 20 06       	JR	NZ,SCANKY1
0766   0441 DB 40       	IN	A,(KEYBUF)	;READ HARDWARE ENCODER
0767   0443 E6 3F       	AND	3FH		;STRIP UNUSED BITS
0768   0445 18 38       	JR	SCANKY7		;EXIT
0769   0447             ;
0770   0447             ; SOFTWARE SCAN KEYBOARD
0771   0447             ;
0772   0447 3E 00       SCANKY1:	LD      A,00H
0773   0449 D3 40       	OUT     (DISPLY),A      ;CLEAR DISPLAY LATCH
0774   044B 47          	LD      B,A		;KEY
0775   044C 57          	LD	D,A		;COUNT
0776   044D 1E 01       	LD      E,01H           ;MASK
0777   044F 0E 08       SCANKY2: LD      C,08H           ;SCAN
0778   0451 79          SCANKY3: LD      A,C
0779   0452 D3 70       	OUT     (SCAN),A        ;OUTPUT SCAN
0780   0454 00          	NOP
0781   0455 00          	NOP
0782   0456 00          	NOP
0783   0457 DB 40       	IN      A,(KEYBUF)      ;READ KEY BUFFER
0784   0459 A3          	AND     E               ;MASK 
0785   045A 28 02       	JR      Z,SCANKY4       ;KEY NOT DETECTED
0786   045C 14          	INC	D
0787   045D 68          	LD	L,B		;SAVE KEY
0788   045E             ;
0789   045E             ; END OF ROWS?
0790   045E             ;
0791   045E 04          SCANKY4: INC     B               ;NEXT KEY
0792   045F CB 29       	SRA     C               ;SHIFT SCAN RIGHT
0793   0461 30 EE       	JR      NC,SCANKY3      ;NEXT ROW
0794   0463             ;
0795   0463             ; END OF COLUMNS?
0796   0463             ;
0797   0463 CB 23       	SLA     E               ;SHIFT MASK LEFT
0798   0465 CB 6B       	BIT     5,E             ;END OF KEYSCAN?
0799   0467 28 E6       	JR      Z,SCANKY2	;NEXT COLUMN
0800   0469             ;
0801   0469             ; END OF SCAN
0802   0469             ;
0803   0469 7A          	LD	A,D
0804   046A FE 00       	CP	00H
0805   046C 28 0D       	JR	Z,SCANKY6	;NO KEY PRESSED
0806   046E FE 01       	CP	01H
0807   0470 20 D5       	JR	NZ,SCANKY1	;MORE THAN ONE KEY PRESSED
0808   0472             ;
0809   0472             ; ONE KEY DETECTED
0810   0472             ;
0811   0472 3E 00       	LD	A,00H
0812   0474 D3 70       	OUT	(SCAN),A	;CLEAR SCAN REG
0813   0476 7D          	LD	A,L		;RETURN KEY IN A
0814   0477 CB EF       	SET	5,A		;SET DATA AVAILABLE FLAG
0815   0479 18 04       	JR	SCANKY7
0816   047B             ;
0817   047B             ; NO KEY
0818   047B             ;	
0819   047B 3E 00       SCANKY6:	LD	A,00H
0820   047D D3 70       	OUT	(SCAN),A	;CLEAR SCAN REG
0821   047F E1          SCANKY7: POP	HL
0822   0480 D1          	POP     DE
0823   0481 C1          	POP     BC
0824   0482 C9          	RET
0825   0483             ;-----------------------------
0826   0483             ; SCAN DISPLAY UNTIL KEY PRESS
0827   0483             ;-----------------------------
0828   0483             ; ENTRY : NONE
0829   0483             ; EXIT  : A = KEY VALUE 00H TO 1FH
0830   0483             ;         FLAG REGISTER MODIFIED
0831   0483             ;
0832   0483 CD FD 03    SKEYIN:      CALL SCAND          ;SCAN DISPLAY
0833   0486 DB 40                   IN A,(KEYBUF)       ;READ KEYBOARD
0834   0488             #IFDEF  TEC-1F
0835   0488 CB 77                   BIT 6,A
0836   048A~            #ELSE
0837   048A~                        BIT 5,A
0838   048A             #ENDIF       
0839   048A                         
0840   048A~            #IFDEF DA_ACTIVE_LOW
0841   048A~                        JR NZ,SKEYIN         ;NO KEY PRESS
0842   048A             #ELSE
0843   048A 28 F7                   JR Z,SKEYIN         ;NO KEY PRESS
0844   048C             #ENDIF
0845   048C E6 1F                   AND 1FH             ;STRIP UNUSED BITS
0846   048E C9                      RET
0847   048F             ;-------------------------------
0848   048F             ; SCAN DISPLAY UNTIL KEY RELEASE
0849   048F             ;-------------------------------
0850   048F             ; ENTRY : NONE
0851   048F             ; EXIT  : NONE
0852   048F             ;
0853   048F F5          SKEYRL:      PUSH AF
0854   0490 CD FD 03    SKEYL1:      CALL SCAND          ;SCAN DISPLAY
0855   0493 DB 40                   IN A,(KEYBUF)       ;READ KEYBOARD
0856   0495             #IFDEF  TEC-1F
0857   0495 CB 77                   BIT 6,A
0858   0497~            #ELSE
0859   0497~                        BIT 5,A
0860   0497             #ENDIF       
0861   0497                         
0862   0497~            #IFDEF DA_ACTIVE_LOW
0863   0497~                        JR Z,SKEYL1        ;KEY NOT RELEASED
0864   0497             #ELSE 
0865   0497 20 F7                   JR NZ,SKEYL1        ;KEY NOT RELEASED
0866   0499             #ENDIF
0867   0499 F1                      POP AF
0868   049A C9                      RET
0869   049B             ;-------------------
0870   049B             ; WAIT FOR KEY PRESS
0871   049B             ;-------------------
0872   049B             ; ENTRY : NONE
0873   049B             ; EXIT  : A = KEY VALUE 00H TO 1FH
0874   049B             ;         FLAG REGISTER MODIFIED
0875   049B             ;
0876   049B DB 40       KEYIN:       IN A,(KEYBUF)       ;READ KEYBOARD
0877   049D             #IFDEF  TEC-1F
0878   049D CB 77                   BIT 6,A
0879   049F~            #ELSE
0880   049F~                        BIT 5,A
0881   049F             #ENDIF       
0882   049F~            #IFDEF DA_ACTIVE_LOW
0883   049F~                        JR NZ,KEYIN          ;NO KEY PRESS
0884   049F             #ELSE
0885   049F 28 FA                   JR Z,KEYIN          ;NO KEY PRESS
0886   04A1             #ENDIF
0887   04A1 E6 1F                   AND 1FH             ;STRIP UNUSED BITS
0888   04A3 C9                      RET
0889   04A4             ;---------------------
0890   04A4             ; WAIT FOR KEY RELEASE
0891   04A4             ;---------------------
0892   04A4             ; ENTRY : NONE
0893   04A4             ; EXIT  : NONE
0894   04A4             ;
0895   04A4 F5          KEYREL:      PUSH AF
0896   04A5 DB 40       KEYRL1:      IN A,(KEYBUF)
0897   04A7             #IFDEF  TEC-1F
0898   04A7 CB 77                   BIT 6,A
0899   04A9~            #ELSE
0900   04A9~                        BIT 5,A
0901   04A9             #ENDIF       
0902   04A9~            #IFDEF DA_ACTIVE_LOW
0903   04A9~                        JR Z,KEYRL1
0904   04A9             #ELSE           
0905   04A9 20 FA                   JR NZ,KEYRL1
0906   04AB             #ENDIF
0907   04AB F1                      POP AF
0908   04AC C9                      RET
0909   04AD             ;-----------------
0910   04AD             ; KEY MENU HANDLER
0911   04AD             ;-----------------
0912   04AD             ; COMPARES ACC AGAINST TABLE OF ELEMENTS,
0913   04AD             ; IF FOUND JUMP TO ADDRESS CORRESPONDING TO
0914   04AD             ; THAT ELEMENT, RETURNS IF ELEMENT NOT FOUND.
0915   04AD             ; ENTRY :  A = ELEMENT TO LOOK FOR
0916   04AD             ;         HL = POINTS TO TABLE
0917   04AD             ; EXIT  :  ELEMENT NOT FOUND
0918   04AD             ;           HL HOLDS ADDRESS OF LAST ELEMENT
0919   04AD             ;          ELEMENT FOUND
0920   04AD             ;           CONTROL PASSES TO JUMP ADDRESS WITH
0921   04AD             ;          RETURN ADDRESS OF MENU CALL ON STACK
0922   04AD             ;
0923   04AD F5          MENU:	PUSH	AF
0924   04AE C5          	PUSH	BC
0925   04AF D5          	PUSH	DE	;SAVE REGISTERS
0926   04B0 E5          	PUSH	HL	;CALCULATE ADDRESS
0927   04B1 16 00       	LD	D,00H	;OF THE JUMP TABLE BY
0928   04B3 5E          	LD	E,(HL)	;ADDING THE INDEX TO
0929   04B4 23          	INC	HL	;THE ELEMENTS
0930   04B5 19          	ADD	HL,DE	;TO THE ADDR OF THE
0931   04B6 54          	LD	D,H	;TABLE
0932   04B7 5D          	LD	E,L
0933   04B8 E1          	POP	HL
0934   04B9 46          	LD	B,(HL)	;GET NUMBER OF ENTRIES
0935   04BA 23          	INC	HL	;POINT TO LIST OF ENTRIES
0936   04BB BE          MENU1:	CP	(HL)	;COMPARE WITH ENTRY
0937   04BC 28 09       	JR	Z,MENU2	;FOUND VALUE IN TABLE
0938   04BE 23          	INC	HL	;NEXT ENTRY IN LIST
0939   04BF 13          	INC	DE	;NEXT ENTRY IN
0940   04C0 13          	INC	DE	;JUMP TABLE
0941   04C1 10 F8       	DJNZ	MENU1	;CHECK MORE ENTRIES
0942   04C3 D1          	POP	DE
0943   04C4 C1          	POP	BC
0944   04C5 F1          	POP	AF
0945   04C6 C9          	RET	;NOT IN TABLE
0946   04C7             ;
0947   04C7             ; FOUND ELEMENT IN THE TABLE
0948   04C7             ; PASS CONTROL TO THE JUMP HANDLER
0949   04C7             ;
0950   04C7 1A          MENU2:	LD	A,(DE)	;GET THE JUMP ADDR
0951   04C8 6F          	LD	L,A	;FROM THE TABLE
0952   04C9 13          	INC	DE	;AND JUMP TO
0953   04CA 1A          	LD	A,(DE)	;THE JUMP ADDRESS
0954   04CB 67          	LD	H,A	;FOR THAT ENTRY
0955   04CC D1          	POP	DE
0956   04CD C1          	POP	BC
0957   04CE F1          	POP	AF	;RESTORE REGISTERS
0958   04CF E9          	JP	(HL)
0959   04D0             ;-------------------
0960   04D0             ; CALCULATE CHECKSUM
0961   04D0             ;-------------------
0962   04D0             ;CALCULATES CHECKSUM BETWEEN START AND END (INCLUSIVE)
0963   04D0             ;
0964   04D0             ; ENTRY : HL = START OF BLOCK TO SUM
0965   04D0             ;         DE = END OF BLOCK TO SUM
0966   04D0             ; EXIT  : A =  CHECKSUM
0967   04D0             ;         FLAG REGISTER MODIFIED
0968   04D0             ;
0969   04D0 E5          CHKSUM:	PUSH	HL
0970   04D1 D5          	PUSH	DE
0971   04D2 13          	INC	DE	;END OF BLOCK+1
0972   04D3 AF          	XOR	A	;CLEAR CHECKSUM
0973   04D4 86          CHKSM1:	ADD	A,(HL)	;COMPUTE CHEKSUM
0974   04D5 23          	INC	HL	;POINT TO NEXT ELEMENT
0975   04D6 A7          	AND	A	;SET CARRY
0976   04D7 E5          	PUSH	HL
0977   04D8 ED 52       	SBC	HL,DE	;SUBTRACT
0978   04DA E1          	POP	HL
0979   04DB 38 F7       	JR	C,CHKSM1	;MORE ELEMENTS
0980   04DD D1          	POP	DE
0981   04DE E1          	POP	HL
0982   04DF C9          	RET
0983   04E0             ;--------------------------
0984   04E0             ; ACCESS BYTE LOOK UP TABLE
0985   04E0             ;--------------------------
0986   04E0             ; USE 8 BIT INDEX TO ACCESS BYTE LOOK
0987   04E0             ; UP TABLE
0988   04E0             ; ENTRY :  A = NUMBER OF ELEMENT IN TABLE
0989   04E0             ;         HL = ADDRESS OF LOOK UP TABLE
0990   04E0             ; EXIT : HL = ADDRESS OF ELEMENT A
0991   04E0             ;
0992   04E0 D5          INDEXB:	PUSH	DE
0993   04E1 5F          	LD	E,A	;USE DE AS INDEX
0994   04E2 16 00       	LD	D,0	;TO ELEMENT IN TABLE
0995   04E4 19          	ADD	HL,DE	;BY ADDING TO HL
0996   04E5 D1          	POP	DE
0997   04E6 C9          	RET
0998   04E7             ;--------------------------
0999   04E7             ; ACCESS WORD LOOK UP TABLE
1000   04E7             ;--------------------------
1001   04E7             ; USE 8 BIT INDEX TO ACCESS WORD LOOK
1002   04E7             ; UP TABLE
1003   04E7             ; ENTRY :  A = NUMBER OF ELEMENT IN TABLE
1004   04E7             ;         HL = ADDRESS OF LOOK UP TABLE
1005   04E7             ; EXIT : HL = ADDRESS OF 2 BYTE ELEMENT A
1006   04E7             ;
1007   04E7 D5          INDEXW:	PUSH	DE
1008   04E8 5F          	LD	E,A
1009   04E9 CB 23       	SLA	E	;MULTIPLY BY TWO
1010   04EB 16 00       	LD	D,0
1011   04ED 19          	ADD	HL,DE
1012   04EE D1          	POP	DE
1013   04EF C9          	RET
1014   04F0             ;-------------------------------
1015   04F0             ; GENERATE A QUASI-RANDOM NUMBER
1016   04F0             ;-------------------------------
1017   04F0             ; GENERATE AN 16 BIT RANDOM NUMBER
1018   04F0             ; USING LINEAR CONGRUENTIAL METHOD.
1019   04F0             ;     Rn+1 = (aRn+c) MOD m
1020   04F0             ; REFRESH REGISTER USED FOR Rn AND c
1021   04F0             ;	ENTRY : NONE
1022   04F0             ;	EXIT  : HL = RANDOM WORD
1023   04F0             ;	NO REGISTERS MODIFIED
1024   04F0             ;
1025   04F0 F5          RAND:	PUSH	AF
1026   04F1 C5          	PUSH	BC
1027   04F2 D5          	PUSH	DE	;SAVE REGISTERS
1028   04F3             ;
1029   04F3             ; CALCULATE aRn
1030   04F3             ;
1031   04F3 ED 5F       	LD	A,R	;MULTIPLY RANDOM NUMBER
1032   04F5 5F          	LD	E,A	;(Rn) BY
1033   04F6 16 00       	LD	D,0
1034   04F8 21 48 05    	LD	HL,0548H	;CONSTANT (a)
1035   04FB CD 08 05    	CALL	MUL16
1036   04FE             ;
1037   04FE             ; CALCULATE aRn+c
1038   04FE             ;
1039   04FE ED 5F       	LD	A,R	;ADD IT TO ANOTHER
1040   0500 06 00       	LD	B,0	;READ OF THE
1041   0502 4F          	LD	C,A	;THE REFRESH
1042   0503 09          	ADD	HL,BC	;REGISTER (c)
1043   0504 D1          	POP	DE
1044   0505 C1          	POP	BC
1045   0506 F1          	POP	AF	;RESTORE REGISTERS
1046   0507 C9          	RET
1047   0508             ;----------------------
1048   0508             ; 16 BIT MULTIPLICATION
1049   0508             ;----------------------
1050   0508             ;16 BIT MULTIPLY
1051   0508             ; ENTRY : HL = MULTIPLICAND (MPD)
1052   0508             ;         DE = MULTIPLIER (MPR)
1053   0508             ; EXIT : HL = RESULT
1054   0508             ;SEE ZAKS 'PROGRAMMING THE Z80'
1055   0508             ;
1056   0508 F5          MUL16:	PUSH	AF
1057   0509 C5          	PUSH	BC
1058   050A 4C          	LD	C,H	;MPR(H)
1059   050B 7D          	LD	A,L	;MPR(L)
1060   050C 06 10       	LD	B,16	;BIT COUNTER
1061   050E 21 00 00    	LD	HL,0	;CLEAR RESULT
1062   0511 CB 39       MULT:	SRL	C	;MPR (H)
1063   0513 1F          	RRA	;MPR (L)
1064   0514 30 01       	JR	NC,MULT1	;TEST CARRY
1065   0516 19          	ADD	HL,DE	;ADD MPD TO RESULT
1066   0517 EB          MULT1:	EX	DE,HL
1067   0518 29          	ADD	HL,HL	;DOUBLE -SHIFT MPD LEFT
1068   0519 EB          	EX	DE,HL
1069   051A 10 F5       	DJNZ	MULT	;DONE?
1070   051C C1          	POP	BC
1071   051D F1          	POP	AF
1072   051E C9          	RET
1073   051F             ;----------------
1074   051F             ; MUSIC SEQUENCER
1075   051F             ;----------------
1076   051F             ; SEQUENCES THROUGH A TABLE OF NOTES
1077   051F             ; 1EH = REPEAT TUNE UNTIL RESET
1078   051F             ; 1FH = PLAY ONCE AND RETURN
1079   051F             ; ENTRY : HL = ADDRESS OF NOTE TABLE
1080   051F             ; EXIT : NO REGISTERS MODIFIED
1081   051F F5          MUSIC:	PUSH	AF
1082   0520 C5          	PUSH	BC
1083   0521 D5          	PUSH	DE
1084   0522 E5          	PUSH	HL	;SAVE REGISTERS
1085   0523 E5          	PUSH	HL
1086   0524 EB          	EX	DE,HL	;GET ADDRESS OF MUSIC
1087   0525             ;
1088   0525             ; PLAY EACH NOTE IN TURN
1089   0525             ;
1090   0525 1A          STEP:	LD	A,(DE)	;GET ELEMENT FROM TABLE
1091   0526 E6 1F       	AND	1FH	;STRIP UNUSED BITS
1092   0528             ;
1093   0528             ; IF ELEMENT IS 00H PAUSE FOR A WHILE
1094   0528             ;
1095   0528 FE 00       	CP	00H
1096   052A C2 3A 05    	JP	NZ,STEP1
1097   052D 01 00 10    	LD	BC,1000H
1098   0530 0B          PAUSE:	DEC	BC
1099   0531 78          	LD	A,B
1100   0532 B1          	OR	C
1101   0533 C2 30 05    	JP	NZ,PAUSE	;LOOP UNTIL DE = 0
1102   0536 13          	INC	DE	;POINT TO NEXT ELEMENT
1103   0537 C3 25 05    	JP	STEP
1104   053A             ;
1105   053A             ; IF ELEMENT IS 1EH REPEAT TUNE
1106   053A             ;
1107   053A FE 1E       STEP1:	CP	1EH
1108   053C C2 44 05    	JP	NZ,STEP2
1109   053F D1          	POP	DE	;GET TABLE ADDRESS BACK
1110   0540 D5          	PUSH	DE	;SAVE IT FOR LATER
1111   0541 C3 25 05    	JP	STEP
1112   0544             ;
1113   0544             ; IF ELEMENT IS 1FH RETURN
1114   0544             ;
1115   0544 FE 1F       STEP2:	CP	1FH	;END OF TUNE TABLE?
1116   0546 C2 4F 05    	JP	NZ,STEP3
1117   0549 E1          	POP	HL
1118   054A E1          	POP	HL
1119   054B D1          	POP	DE
1120   054C C1          	POP	BC
1121   054D F1          	POP	AF
1122   054E C9          	RET
1123   054F             ;
1124   054F             ;NOW PLAY THE NOTE
1125   054F             ;
1126   054F 47          STEP3:	LD	B,A	;SAVE ELEMENT IN B
1127   0550 21 6B 05    	LD	HL,PERIOD	;POINT TO PERIOD/2 TABLE
1128   0553 CD E0 04    	CALL	INDEXB	;GET PERIOD/2
1129   0556 7E          	LD	A,(HL)	;GET ELEMENT
1130   0557 F5          	PUSH	AF	;SAVE FOR LATER
1131   0558 78          	LD	A,B	;GET ELEMENT BACK IN A
1132   0559 21 83 05    	LD	HL,LENGTH	;POINT TO DURATION/2 TABLE
1133   055C CD E0 04    	CALL	INDEXB	;GET DURATION/2
1134   055F 7E          	LD	A,(HL)	;GET ELEMENT
1135   0560 6F          	LD	L,A
1136   0561 26 00       	LD	H,0	;HL = DURATION/2
1137   0563 F1          	POP	AF
1138   0564 CD 9C 05    	CALL	TONE	;DO NOTE ROUTINE
1139   0567 13          	INC	DE
1140   0568 C3 25 05    	JP	STEP	;STEP TO NEXT ELEMENT
1141   056B             ;
1142   056B             ; PERIOD/2 OF NOTE
1143   056B             ;
1144   056B 8C837C757067PERIOD:	.DB	8CH,83H,7CH,75H,70H,67H,62H,5CH
1144   0571 625C
1145   0573 57524E484541	.DB	57H,52H,4EH,48H,45H,41H,3CH,39H
1145   0579 3C39
1146   057B 36322F2C2A27	.DB	36H,32H,2FH,2CH,2AH,27H,25H,23H
1146   0581 2523
1147   0583             ;
1148   0583             ; NOTE DURATION/2
1149   0583             ;
1150   0583 191A1C1D1E20LENGTH:	.DB	19H,1AH,1CH,1DH,1EH,20H,23H,25H
1150   0589 2325
1151   058B 27292C2E3133	.DB	27H,29H,2CH,2EH,31H,33H,37H,3AH
1151   0591 373A
1152   0593 3D4145494D52	.DB	3DH,41H,45H,49H,4DH,52H,57H,5CH
1152   0599 575C
1153   059B 10          	.DB	10H
1154   059C             ;--------------
1155   059C             ; OUTPUT A TONE
1156   059C             ;--------------
1157   059C             ;
1158   059C             ; ENTRY : A = PERIOD/2 OF NOTE
1159   059C             ;         HL = DURATION/2 OF NOTE
1160   059C             ; EXIT NO REGISTERS MODIFIED
1161   059C F5          TONE: PUSH	AF
1162   059D C5          	 PUSH	BC
1163   059E D5          	 PUSH	DE
1164   059F E5          	 PUSH	HL
1165   05A0 11 01 00    	 LD	DE,0001H
1166   05A3 4F          	 LD	C,A
1167   05A4 29          	 ADD	HL,HL	;DOUBLE DURATION
1168   05A5 AF          	 XOR	A
1169   05A6 EE 80       TONE1:	XOR	80H	;TOGGLE SPEAKER BIT
1170   05A8 D3 70       	OUT	(SCAN),A	;OUTPUT SPEAKER BIT
1171   05AA 41          	LD	B,C
1172   05AB C5          TONE2:	PUSH	BC
1173   05AC 06 02       	LD	B,02H
1174   05AE 10 FE       TONE3	DJNZ	TONE3	;DELAY FOR PERIOD/2
1175   05B0 C1          	POP	BC
1176   05B1 10 F8       	DJNZ	TONE2	; DELAY FOR PERIOD/2
1177   05B3 ED 52       	SBC	HL,DE	;END OF NOTE?
1178   05B5 20 EF       	JR	NZ,TONE1	;DO AGAIN
1179   05B7 E1          	POP	HL
1180   05B8 D1          	POP	DE
1181   05B9 C1          	POP	BC
1182   05BA F1          	POP	AF
1183   05BB C9          	RET
1184   05BC             ;---------------
1185   05BC             ; KEY ENTRY BEEP
1186   05BC             ;---------------
1187   05BC E5          BEEP:	PUSH	HL
1188   05BD F5          	PUSH	AF
1189   05BE 21 D8 FF    	LD	HL,MODE
1190   05C1 CB 76       	BIT	6,(HL)	;BEEP ENABLED?
1191   05C3 28 0E       	JR	Z,BEEP2	;BEEP IS ENABLED
1192   05C5             ;
1193   05C5             ; DO KEYPRESS DELAY
1194   05C5             ;
1195   05C5 D5          	PUSH	DE	;DO A SHORT
1196   05C6 11 01 00    	LD	DE,0001H	;DELAY TO PREVENT
1197   05C9 2A C2 FF    	LD	HL,(KEYTIM)	;RECOGNITION
1198   05CC ED 52       BEEP1:	SBC	HL,DE	;OF DOUBLE
1199   05CE 30 FC       	JR	NC,BEEP1	;KEY STROKES
1200   05D0 D1          	POP     DE
1201   05D1 18 10       	JR	BEEP3
1202   05D3             ;
1203   05D3             ; OUTPUT KEYPRESS TONES
1204   05D3             ;
1205   05D3 3E 24       BEEP2:	LD	A,24H
1206   05D5 21 30 00    	LD	HL,0030H
1207   05D8 CD 9C 05    	CALL	TONE	;DO FIRST TONE
1208   05DB 3E 0E       	LD	A,0EH
1209   05DD 21 50 00    	LD	HL,0050H
1210   05E0 CD 9C 05    	CALL	TONE	;DO SECOND TONE
1211   05E3 F1          BEEP3:	POP	AF
1212   05E4 E1          	POP	HL
1213   05E5 C9          	RET
1214   05E6             ;----------------------------------------
1215   05E6             ; BREAKPOINT AND SINGLE STEPPING ROUTINES
1216   05E6             ;----------------------------------------
1217   05E6             ;DISPLAYS AND MODIFIES REGISTERS AFTER BREAKPOINT
1218   05E6             ; (RST 38H) OR SINGLE STEP INTERRUPT (IF HARDWARE
1219   05E6             ; ATTACHED).
1220   05E6             ;INSERT RST 38H (FFH) IN PROGRAM TO EXAMINE
1221   05E6             ; AND MODIFY REGISTERS.
1222   05E6             ;
1223   05E6 E1          SSTEP:	POP	HL	;GET HL BACK
1224   05E7 F5          	PUSH	AF	;SAVE AF FOR LATER
1225   05E8 22 E8 FF    	LD	(TMPHL),HL
1226   05EB ED 53 E6 FF 	LD	(TMPDE),DE
1227   05EF ED 43 E4 FF 	LD	(TMPBC),BC
1228   05F3 DD 22 EA FF 	LD	(TMPIX),IX
1229   05F7 FD 22 EC FF 	LD	(TMPIY),IY	;SAVE REGISTERS
1230   05FB E1          	POP	HL	;GET AF BACK
1231   05FC 22 E2 FF    	LD	(TMPAF),HL	;SAVE AF
1232   05FF E1          	POP	HL	;GET PC RETURN ADDRESS
1233   0600 22 E0 FF    	LD	(TMPPC),HL	;SAVE PC
1234   0603 ED 73 EE FF 	LD	(TMPSP),SP	;SAVE STACK POINTER
1235   0607             ;
1236   0607             ; STEP THROUGH,DISPLAY AND EDIT REGISTERS
1237   0607             ;
1238   0607 CD BC 05    	CALL	BEEP
1239   060A 3A DE FF    	LD	A,(REGPNT)	;GET CURRENT REG
1240   060D E6 07       	AND	7	;MAKE SURE IN LIMITS
1241   060F 32 DE FF    	LD	(REGPNT),A	;SAVE IT
1242   0612 CD EF 06    DISREG:	CALL	SETREG	;SET UP DISPLAY BUFFER
1243   0615 CD 8F 04    	CALL	SKEYRL	;WAIT FOR A KEY
1244   0618 CD 83 04    	CALL	SKEYIN	;WAIT FOR KEY RELEASE
1245   061B 21 24 06    	LD	HL,REGTBL	;HANDLE THE KEY
1246   061E CD AD 04    	CALL	MENU	;AND UPDATE DISPLAY
1247   0621 C3 12 06    	JP	DISREG	;BEFORE RETURNING TO LOOP
1248   0624             ;
1249   0624             ; REGISTER DISPLAY KEY TABLE
1250   0624             ;
1251   0624 14          REGTBL      .DB 14H
1252   0625 000102030405            .DB 00H,01H,02H,03H,04H,05H,06H,07H
1252   062B 0607
1253   062D 08090A0B0C0D            .DB 08H,09H,0AH,0BH,0CH,0DH,0EH,0FH
1253   0633 0E0F
1254   0635 10 11 12 13             .DB 10H,11H,12H,13H
1255   0639 710671067106            .DW REGKEY,REGKEY,REGKEY,REGKEY
1255   063F 7106
1256   0641 710671067106            .DW REGKEY,REGKEY,REGKEY,REGKEY
1256   0647 7106
1257   0649 710671067106            .DW REGKEY,REGKEY,REGKEY,REGKEY
1257   064F 7106
1258   0651 710671067106            .DW REGKEY,REGKEY,REGKEY,REGKEY
1258   0657 7106
1259   0659             #IFDEF TEC-1F
1260   0659 C406D906A206            .DW INCSTP,DECSTP,RETPGM,RETMON
1260   065F 9806
1261   0661~            #ELSE           
1262   0661~                        .DW RETMON,RETPGM,INCSTP,DECSTP
1263   0661             #ENDIF
1264   0661             ;
1265   0661             ; REGISTER NAME CHARACTERS
1266   0661             ;
1267   0661             #IFDEF TEC-1F
1268   0661 39 73       REGNAM      .DW 7339H
1269   0663 7177397C795E            .DW 7771H,7C39H,5E79H
1270   0669 387476066E06            .DW 7438H,0676H,066EH
1271   066F 73 6D                   .DW 6D73H
1272   0671~            #ELSE
1273   0671~            REGNAM      .DW 7339H
1274   0671~                        .DW 7771H,7C39H,5E79H
1275   0671~                        .DW 7438H,0676H,066EH
1276   0671~                        .DW 6D73H
1277   0671             #ENDIF
1278   0671             ;--------------
1279   0671             ; EDIT REGISTER
1280   0671             ;--------------
1281   0671 CD BC 05    REGKEY:	CALL	BEEP
1282   0674 F5          	PUSH	AF	;SAVE KEY FOR LATER
1283   0675 3A DE FF    	LD	A,(REGPNT)
1284   0678             ;
1285   0678             ; EDIT REGISTER
1286   0678             ;
1287   0678 21 E0 FF    	LD	HL,TMPPC
1288   067B CD E7 04    	CALL	INDEXW
1289   067E 4E          	LD	C,(HL)
1290   067F 23          	INC	HL
1291   0680 46          	LD	B,(HL)	;GET REG CONTENTS
1292   0681 CB 21       	SLA	C
1293   0683 CB 10       	RL	B
1294   0685 CB 21       	SLA	C
1295   0687 CB 10       	RL	B
1296   0689 CB 21       	SLA	C
1297   068B CB 10       	RL	B	;SHIFT REGISTER
1298   068D CB 21       	SLA	C	;FOUR BITS
1299   068F CB 10       	RL	B	;LEFT AND
1300   0691 F1          	POP	AF	;PUT THE KEY
1301   0692 B1          	OR	C	;INTO THE LSN
1302   0693 4F          	LD	C,A	;AND PUT THE
1303   0694 70          	LD	(HL),B	;REGISTER BACK
1304   0695 2B          	DEC	HL	;WHERE IT BELONGS
1305   0696 71          	LD	(HL),C
1306   0697 C9          	RET
1307   0698             ;------------------
1308   0698             ; RETURN TO MONITOR
1309   0698             ;------------------
1310   0698 CD BC 05    RETMON:	CALL	BEEP
1311   069B CD 8F 04    	CALL	SKEYRL
1312   069E FB          	EI	;ENABLE INTERRUPTS AGAIN
1313   069F C3 9B 02    	JP	MAIN
1314   06A2             ;------------------
1315   06A2             ; RETURN TO PROGRAM
1316   06A2             ;------------------
1317   06A2 ED 7B EE FF RETPGM:	LD	SP,(TMPSP)	;PUT STACK POINTER BACK
1318   06A6 2A E0 FF    	LD	HL,(TMPPC)	;PUT RETURN
1319   06A9 E5          	PUSH	HL	;ADDRESS BACK ON STACK
1320   06AA 2A E2 FF    	LD	HL,(TMPAF)
1321   06AD E5          	PUSH	HL	;SAVE AF REG FOR LATER
1322   06AE FD 2A EC FF 	LD	IY,(TMPIY)
1323   06B2 DD 2A EA FF 	LD	IX,(TMPIX)
1324   06B6 ED 4B E4 FF 	LD	BC,(TMPBC)
1325   06BA ED 5B E6 FF 	LD	DE,(TMPDE)	;RESTORE REGISTERS
1326   06BE F1          	POP	AF	;RESTORE AF
1327   06BF 2A E8 FF    	LD	HL,(TMPHL)	;RETORE HL
1328   06C2 FB          	EI	;ENABLE INTERRUPTS
1329   06C3 C9          	RET	;AND RETURN TO PROGRAM
1330   06C4             ;----------------------
1331   06C4             ; DISPLAY NEXT REGISTER
1332   06C4             ;----------------------
1333   06C4 CD BC 05    INCSTP:	CALL	BEEP
1334   06C7 3A DE FF    	LD	A,(REGPNT)
1335   06CA FE 07       	CP	7	;END OF REG TABLE?
1336   06CC CA D4 06    	JP	Z,INCSP1
1337   06CF 3C          	INC	A
1338   06D0 32 DE FF    	LD	(REGPNT),A
1339   06D3 C9          	RET
1340   06D4 AF          INCSP1:	XOR	A
1341   06D5 32 DE FF    	LD	(REGPNT),A
1342   06D8 C9          	RET
1343   06D9             ;--------------------------
1344   06D9             ; DISPLAY PREVIOUS REGISTER
1345   06D9             ;--------------------------
1346   06D9 CD BC 05    DECSTP:	CALL	BEEP
1347   06DC 3A DE FF    	LD	A,(REGPNT)
1348   06DF FE 00       	CP	0	;START OF REG TABLE?
1349   06E1 CA E9 06    	JP	Z,DECSP1
1350   06E4 3D          	DEC	A
1351   06E5 32 DE FF    	LD	(REGPNT),A
1352   06E8 C9          	RET
1353   06E9 3E 07       DECSP1:	LD	A,7
1354   06EB 32 DE FF    	LD	(REGPNT),A
1355   06EE C9          	RET
1356   06EF             ;-----------------
1357   06EF             ; DISPLAY REGISTER
1358   06EF             ;-----------------
1359   06EF 3A DE FF    SETREG:	LD	A,(REGPNT)
1360   06F2 21 E0 FF    	LD	HL,TMPPC	;START OF TABLE
1361   06F5 CD E7 04    	CALL	INDEXW	;GET ELEMENT ADDRESS
1362   06F8 5E          	LD	E,(HL)
1363   06F9 23          	INC	HL
1364   06FA 56          	LD	D,(HL)
1365   06FB EB          	EX	DE,HL	;LOAD REGISTER CONTENTS
1366   06FC CD AF 03    	CALL	DISADD
1367   06FF             ;
1368   06FF             ; DISPLAY REGISTER NAME
1369   06FF             ;
1370   06FF 21 61 06    	LD	HL,REGNAM
1371   0702 CD E7 04    	CALL	INDEXW
1372   0705 7E          	LD	A,(HL)
1373   0706 32 D0 FF    	LD	(DISBUF+0),A
1374   0709 23          	INC	HL
1375   070A 7E          	LD	A,(HL)
1376   070B 32 D1 FF    	LD	(DISBUF+1),A
1377   070E C9          	RET
1378   070F             ;------------------
1379   070F             ; FUNCTION KEY MENU
1380   070F             ;------------------
1381   070F             ; WHEN THE FN KEY IS PRESSED, Fn IS DISPLAYED IN THE
1382   070F             ; DATA DISPLAYS, THE CURRENT ADDRESS REMAINS IN THE
1383   070F             ; ADDRESS DISPLAYS THE PROGRAM THEN WAITS FOR A
1384   070F             ; KEYPRESS WHICH WILL SELECT 1 OF 16 ROUTINES.
1385   070F             ;
1386   070F E1          FUNKEY:	POP	HL	;REMOVE RETURN ADDRESS
1387   0710 CD BC 05    	CALL	BEEP
1388   0713 2A DA FF    FUNKY1:	LD	HL,(ADRESS)
1389   0716 CD AF 03    	CALL	DISADD	;DISP ADDR TO REMOVE DP'S
1390   0719             #IFDEF TEC-1F
1391   0719             ;    LD  HL,4764H  ;FN
1392   0719 21 54 71        LD HL,7154H       ;USE THE GO KEY IN THE TEC
1393   071C~            #ELSE
1394   071C~            	LD	HL,754H  ;FN
1395   071C             #ENDIF
1396   071C                 
1397   071C 22 D0 FF    	LD	(DISBUF),HL	;DISPLAY FN
1398   071F CD 8F 04    	CALL	SKEYRL	;WAIT FOR KEY RELEASE
1399   0722 CD 83 04    FUNKY2:	CALL	SKEYIN
1400   0725 2A B4 FF    	LD	HL,(FUNTBL)	;USE THE MENU HANDLER
1401   0728 CD AD 04    	CALL	MENU	;ROUTINE FOR EACH KEY
1402   072B C3 22 07    	JP	FUNKY2	;TRY AGAIN
1403   072E             ;
1404   072E             ; RETURN TO MAIN
1405   072E             ;
1406   072E CD BC 05    CANCEL:	CALL	BEEP
1407   0731 CD 86 03    CANCL1:	CALL	UPDATE	;UPDATE DISPLAY BUFFER
1408   0734 CD 8F 04    	CALL	SKEYRL	;WAIT FOR KEY RELEASE
1409   0737 E1          	POP	HL	;REMOVE MENU RETURN
1410   0738 C3 AF 02    	JP	MAIN2
1411   073B             ;
1412   073B             ; FUNCTION MENU KEY TABLE2
1413   073B             ;
1414   073B 10          FUNLST2:	.DB	10H
1415   073C 000102030405	.DB	00H,01H,02H,03H,04H,05H,06H,07H
1415   0742 0607
1416   0744 08090A0B0C0D	.DB	08H,09H,0AH,0BH,0CH,0DH,0EH,0FH
1416   074A 0E0F
1417   074C 6C0773076C07	.DW	ON_LED, OFF_LED, ON_LED, OFF_LED
1417   0752 7307
1418   0754 6C0773076C07	.DW	ON_LED, OFF_LED, ON_LED, OFF_LED
1418   075A 7307
1419   075C 6C0773076C07	.DW	ON_LED, OFF_LED, ON_LED, OFF_LED
1419   0762 7307
1420   0764 6C0773076C07	.DW	ON_LED, OFF_LED, ON_LED, OFF_LED
1420   076A 7307
1421   076C             
1422   076C             ON_LED:
1423   076C 3E 01       	ld a, $01
1424   076E D3 C0       	out ($c0), A
1425   0770 C3 9B 02    	JP MAIN
1426   0773             
1427   0773             OFF_LED:
1428   0773 3E 00       	ld a, $00
1429   0775 D3 C0       	out ($c0), A
1430   0777 C3 9B 02    	JP MAIN
1431   077A             
1432   077A             ;
1433   077A             ; FUNCTION MENU KEY TABLE
1434   077A             ;
1435   077A 11          FUNLST:	.DB	11H
1436   077B 000102030405	.DB	00H,01H,02H,03H,04H,05H,06H,07H
1436   0781 0607
1437   0783 08090A0B0C0D	.DB	08H,09H,0AH,0BH,0CH,0DH,0EH,0FH
1437   0789 0E0F
1438   078B 12              .DB 12H
1439   078C B207BD07C208	.DW	GOEXEC,INTELFN,ADDRA,ADDRB
1439   0792 D408
1440   0794 E6083C097A09	.DW	BLKMVE,BLKSUM,BRANCH,TRACE
1440   079A B109
1441   079C BF09CE09DD09	.DW	PLAY1,PLAY2,PLAY3,SWBEEP
1441   07A2 EC09
1442   07A4 860A070C600C	.DW	SECRET,RELSQR,SCOPE,TIME
1442   07AA 150D
1443   07AC AE 07       	.DW	FUNFUN
1444   07AE             ;--------------------------
1445   07AE             ; JUMP TO FUNCTION FUNCTION
1446   07AE             ;--------------------------
1447   07AE 2A CE FF    FUNFUN:	LD	HL,(FUNJMP)
1448   07B1 E9          	JP	(HL)
1449   07B2             ;------------------------------------------
1450   07B2             ; FUNCTION 0 - EXECUTE FROM CURRENT ADDRESS
1451   07B2             ;------------------------------------------
1452   07B2 CD BC 05    GOEXEC:	CALL	BEEP
1453   07B5 CD A4 04    	CALL	KEYREL
1454   07B8 E1          	POP	HL	;REMOVE EXEC RETURN
1455   07B9 2A DA FF    	LD	HL,(ADRESS)
1456   07BC E9          	JP	(HL)	;START EXECUCTION
1457   07BD             ;------------------------------------
1458   07BD             ; FUNCTION 1 RECEIVE INTEL HEX FORMAT
1459   07BD             ;------------------------------------
1460   07BD CD BC 05    INTELFN:	CALL	BEEP
1461   07C0 CD A4 04    	    CALL	KEYREL
1462   07C3 CD CC 07            CALL  INTELH
1463   07C6 C2 05 09            JP    NZ,BLKMV1      ;SHOW THE ERROR 
1464   07C9 C3 2E 07            JP    CANCEL         ;JUST RETURN IF ALL OK
1465   07CC             ;-----------------------
1466   07CC             ; RECEIVE INTEL HEX FILE
1467   07CC             ;-----------------------
1468   07CC DD 21 00 FE INTELH:	LD	IX,SYSTEM	;POINT TO SYSTEM VARIABLES
1469   07D0             ;
1470   07D0             ; WAIT FOR RECORD MARK
1471   07D0             ;
1472   07D0 AF          INTEL1:	XOR	A
1473   07D1 DD 77 03    	LD	(IX+3),A	;CLEAR CHECKSUM
1474   07D4 CD 88 08    	CALL	RXDATA	;WAIT FOR THE RECORD MARK
1475   07D7 FE 3A       	CP	':'	;TO BE TRANSMITTED
1476   07D9 20 F5       	JR	NZ,INTEL1	;NOT RECORD MARK
1477   07DB             ;
1478   07DB             ; GET RECORD LENGTH
1479   07DB             ;
1480   07DB CD 28 08    	CALL	GETBYT
1481   07DE DD 77 00    	LD	(IX+0),A	;NUMBER OF DATA BYTES
1482   07E1             ;
1483   07E1             ; GET ADDRESS FIELD
1484   07E1             ;
1485   07E1 CD 28 08    	CALL	GETBYT
1486   07E4 DD 77 02    	LD	(IX+2),A	;LOAD ADDRESS HIGH BYTE
1487   07E7 CD 28 08    	CALL	GETBYT
1488   07EA DD 77 01    	LD	(IX+1),A	;LOAD ADDRESS LOW BYTE
1489   07ED             ;
1490   07ED             ; GET RECORD TYPE
1491   07ED             ;
1492   07ED CD 28 08    	CALL	GETBYT
1493   07F0 20 24       	JR	NZ,INTEL4	;END OF FILE RECORD
1494   07F2             ;
1495   07F2             ; READ IN THE DATA
1496   07F2             ;
1497   07F2 DD 46 00    	LD	B,(IX+0)	;NUMBER OF DATA BYTES
1498   07F5 DD 66 02    	LD	H,(IX+2)	;LOAD ADDRESS HIGH BYTE
1499   07F8 DD 6E 01    	LD	L,(IX+1)	;LOAD ADDRESS LOW BYTE
1500   07FB             
1501   07FB CD 28 08    INTEL2:	CALL	GETBYT	;GET DATA BYTE
1502   07FE 77          	LD	(HL),A	;STORE DATA BYTE
1503   07FF 23          	INC	HL
1504   0800 10 F9       	DJNZ	INTEL2	;LOAD MORE BYTES
1505   0802             ;
1506   0802             ; GET CHECKSUM AND COMPARE
1507   0802             ;
1508   0802 DD 7E 03    	LD	A,(IX+3)	;CONVERT CHECKSUM TO
1509   0805 ED 44       	NEG		;TWO'S COMPLEMENT
1510   0807 DD 77 04    	LD	(IX+4),A	;SAVE COMPUTED CHECKSUM
1511   080A CD 28 08    	CALL	GETBYT
1512   080D DD 77 03    	LD	(IX+3),A	;SAVE RECORD CHECKSUM
1513   0810 DD BE 04    	CP	(IX+4)	;COMPARE CHECKSUM
1514   0813 28 BB       	JR	Z,INTEL1	;CHECKSUM OK,NEXT RECORD
1515   0815 C9              RET             ;NZ=CHECKSUM ERROR
1516   0816             ;
1517   0816             ; END OF FILE RECORD
1518   0816             ;
1519   0816 DD 7E 03    INTEL4:	LD	A,(IX+3)	;CONVERT CHECKSUM TO
1520   0819 ED 44       	NEG		;TWO'S COMPLEMENT
1521   081B DD 77 04    	LD	(IX+4),A	;SAVE COMPUTED CHECKSUM
1522   081E CD 28 08    	CALL	GETBYT
1523   0821 DD 77 03    	LD	(IX+3),A	;SAVE EOF CHECKSUM
1524   0824 DD BE 04    	CP	(IX+4)	;COMPARE CHECKSUM
1525   0827 C9          	RET  	    ;NZ=CHECKSUM ERROR
1526   0828             ;--------------------------
1527   0828             ; GET BYTE FROM SERIAL PORT
1528   0828             ;--------------------------
1529   0828 C5          GETBYT:	PUSH	BC
1530   0829 CD 88 08    	CALL	RXDATA
1531   082C CB 77       	BIT	6,A
1532   082E 28 02       	JR	Z,GETBT1
1533   0830 C6 09       	ADD	A,09H
1534   0832 E6 0F       GETBT1:	AND	0FH
1535   0834 CB 27       	SLA 	A
1536   0836 CB 27       	SLA	A
1537   0838 CB 27       	SLA	A
1538   083A CB 27       	SLA	A
1539   083C 4F          	LD	C,A
1540   083D             ;
1541   083D             ; GET LOW NYBBLE
1542   083D             ;
1543   083D CD 88 08    	CALL	RXDATA
1544   0840 CB 77       	BIT	6,A
1545   0842 28 02       	JR	Z,GETBT2
1546   0844 C6 09       	ADD	A,09H
1547   0846 E6 0F       GETBT2:	AND	0FH
1548   0848 B1          	OR	C
1549   0849 47          	LD	B,A
1550   084A DD 86 03    	ADD	A,(IX+3)
1551   084D DD 77 03    	LD	(IX+3),A	;ADD TO CHECKSUM
1552   0850 78          	LD	A,B
1553   0851 A7          	AND	A	;CLEAR CARRY
1554   0852 C1              POP	BC
1555   0853 C9          	RET
1556   0854             ;-------------------------------
1557   0854             ; CONVERT ASCII CHARACTER TO HEX
1558   0854             ;-------------------------------
1559   0854             ;CONVERTS ASCII 0-9,A-F INTO HEX LSN
1560   0854             ;ENTRY : A= ASCII 0-9,A-F
1561   0854             ;EXIT  : A= HEX 0-F IN LSN
1562   0854             ; A AND F REGISTERS MODIFIED
1563   0854             ;
1564   0854 CB 77       ASCHEX: BIT   6,A
1565   0856 28 02       	   JR    Z,ACHEX1
1566   0858 C6 09       	   ADD   A,09H
1567   085A E6 0F       ACHEX1: AND   0FH
1568   085C C9                 RET
1569   085D             ;------------------------
1570   085D             ; SERIAL TRANSMIT ROUTINE
1571   085D             ;------------------------
1572   085D             ;TRANSMIT BYTE SERIALLY ON DOUT
1573   085D             ;
1574   085D             ; ENTRY : A = BYTE TO TRANSMIT
1575   085D             ;  EXIT : NO REGISTERS MODIFIED
1576   085D             ;
1577   085D F5          TXDATA:	PUSH	AF
1578   085E C5          	PUSH	BC
1579   085F E5          	PUSH	HL
1580   0860 2A C0 FF    	LD	HL,(BAUD)
1581   0863 4F          	LD	C,A
1582   0864             ;
1583   0864             ; TRANSMIT START BIT
1584   0864             ;
1585   0864 AF          	XOR	A
1586   0865 D3 70       	OUT	(SCAN),A
1587   0867 CD B5 08    	CALL	BITIME
1588   086A             ;
1589   086A             ; TRANSMIT DATA
1590   086A             ;
1591   086A 06 08       	LD	B,08H
1592   086C CB 09       	RRC	C
1593   086E CB 09       NXTBIT:	RRC	C	;SHIFT BITS TO D6,
1594   0870 79          	LD	A,C	;LSB FIRST AND OUTPUT
1595   0871 E6 40       	AND	40H	;THEM FOR ONE BIT TIME.
1596   0873 D3 70       	OUT	(SCAN),A
1597   0875 CD B5 08    	CALL	BITIME
1598   0878 10 F4       	DJNZ	NXTBIT
1599   087A             ;
1600   087A             ; SEND STOP BITS
1601   087A             ;
1602   087A 3E 40       	LD	A,40H
1603   087C D3 70       	OUT	(SCAN),A
1604   087E CD B5 08    	CALL	BITIME
1605   0881 CD B5 08    	CALL	BITIME
1606   0884 E1          	POP	HL
1607   0885 C1          	POP	BC
1608   0886 F1          	POP	AF
1609   0887 C9          	RET
1610   0888             ;-----------------------
1611   0888             ; SERIAL RECEIVE ROUTINE
1612   0888             ;-----------------------
1613   0888             ;RECEIVE SERIAL BYTE FROM DIN
1614   0888             ;
1615   0888             ; ENTRY : NONE
1616   0888             ;  EXIT : A= RECEIVED BYTE IF CARRY CLEAR
1617   0888             ;
1618   0888             ; REGISTERS MODIFIED A AND F
1619   0888             ;
1620   0888 C5          RXDATA:	PUSH	BC
1621   0889 E5          	PUSH	HL
1622   088A             ;
1623   088A             ; WAIT FOR START BIT 
1624   088A             ;
1625   088A DB 40       RXDAT1: IN	A,(KEYBUF)
1626   088C             ;        IN	A,(KEYBUF)
1627   088C CB 7F       	    BIT	7,A
1628   088E 20 FA       	    JR	NZ,RXDAT1	;NO START BIT
1629   0890             ;
1630   0890             ; DETECTED START BIT
1631   0890             ;
1632   0890 2A C0 FF    	LD	HL,(BAUD)
1633   0893 CB 3C       	SRL	H
1634   0895 CB 1D       	RR	L 	;DELAY FOR HALF BIT TIME
1635   0897 CD B5 08    	CALL 	BITIME
1636   089A DB 40       	IN	A,(KEYBUF)
1637   089C             ;    IN	A,(KEYBUF)
1638   089C CB 7F       	BIT	7,A
1639   089E 20 EA       	JR	NZ,RXDAT1	;START BIT NOT VALID
1640   08A0             ;
1641   08A0             ; DETECTED VALID START BIT,READ IN DATA
1642   08A0             ;
1643   08A0 06 08       	LD	B,08H
1644   08A2 2A C0 FF    RXDAT2:	LD	HL,(BAUD)
1645   08A5 CD B5 08    	CALL	BITIME	;DELAY ONE BIT TIME
1646   08A8 DB 40       	IN	A,(KEYBUF)
1647   08AA             ;    IN	A,(KEYBUF)
1648   08AA CB 17       	RL	A
1649   08AC CB 19       	RR	C	;SHIFT BIT INTO DATA REG
1650   08AE 10 F2       	DJNZ	RXDAT2
1651   08B0 79          	LD	A,C
1652   08B1 B7          	OR	A	;CLEAR CARRY FLAG
1653   08B2 E1              POP	HL
1654   08B3 C1          	POP	BC
1655   08B4 C9          	RET
1656   08B5             ;---------------
1657   08B5             ; BIT TIME DELAY
1658   08B5             ;---------------
1659   08B5             ;DELAY FOR ONE SERIAL BIT TIME
1660   08B5             ;ENTRY : HL = DELAY TIME
1661   08B5             ; NO REGISTERS MODIFIED
1662   08B5             ;
1663   08B5 E5          BITIME:	PUSH	HL
1664   08B6 D5          	PUSH	DE
1665   08B7 11 01 00    	LD	DE,0001H
1666   08BA ED 52       BITIM1:	SBC	HL,DE
1667   08BC D2 BA 08    	JP	NC,BITIM1
1668   08BF D1          	POP	DE
1669   08C0 E1          	POP	HL
1670   08C1 C9          	RET
1671   08C2             ;-----------------------------
1672   08C2             ; FUNCTION 2 - ENTER ADDRESS 1
1673   08C2             ;-----------------------------
1674   08C2 CD BC 05    ADDRA:	CALL	BEEP
1675   08C5 2A DA FF    	LD	HL,(ADRESS)	;COPY CURRENT
1676   08C8 22 C8 FF    	LD	(BLKSRT),HL	;ADDRESS AS START
1677   08CB             #IFDEF TEC-1F
1678   08CB 21 00 C3    	LD	HL,0C300H	;ADDRESS [
1679   08CE~            #ELSE
1680   08CE~            	LD	HL,3900H	;ADDRESS [
1681   08CE             #ENDIF
1682   08CE CD 2E 09    	CALL	SDELAY
1683   08D1 C3 31 07    	JP	CANCL1
1684   08D4             ;-----------------------------
1685   08D4             ; FUNCTION 3 - ENTER ADDRESS 2
1686   08D4             ;-----------------------------
1687   08D4 CD BC 05    ADDRB:	CALL	BEEP
1688   08D7 2A DA FF    	LD	HL,(ADRESS)	;COPY CURRENT
1689   08DA 22 CA FF    	LD	(BLKEND),HL	;ADDRESS AS END
1690   08DD             #IFDEF TEC-1F
1691   08DD 21 A9 00    	LD	HL,00A9H	;ADDRESS ]
1692   08E0~            #ELSE
1693   08E0~            	LD	HL,000FH	;ADDRESS ]
1694   08E0             #ENDIF
1695   08E0 CD 2E 09    	CALL	SDELAY
1696   08E3 C3 31 07    	JP	CANCL1
1697   08E6             ;------------------------
1698   08E6             ; FUNCTION 4 - BLOCK MOVE
1699   08E6             ;------------------------
1700   08E6 CD BC 05    BLKMVE:	CALL	BEEP
1701   08E9 2A DA FF    	LD	HL,(ADRESS)	;COPY CURRENT
1702   08EC 22 CC FF    	LD	(BLKDST),HL	;ADDRESS AS
1703   08EF             #IFDEF TEC-1F
1704   08EF 21 A9 C3    	LD	HL,0C3A9H	;DESTINATION
1705   08F2~            #ELSE
1706   08F2~            	LD	HL,390FH	;DESTINATION
1707   08F2             #ENDIF
1708   08F2 CD 2E 09    	CALL	SDELAY
1709   08F5             ;
1710   08F5             ; CALCULATE NUMBER OF BYTES TO MOVE
1711   08F5             ;
1712   08F5 2A CA FF    	LD	HL,(BLKEND)
1713   08F8 ED 5B C8 FF 	LD	DE,(BLKSRT)
1714   08FC A7          	AND	A
1715   08FD ED 52       	SBC	HL,DE
1716   08FF 23          	INC	HL	;MAKE MOVE INCLUSIVE
1717   0900 22 C6 FF    	LD	(COUNT),HL
1718   0903 30 15       	JR	NC,BLKMV3	;IF OK MOVE BLOCK
1719   0905             ;
1720   0905             ; SHOW ERROR
1721   0905             ;
1722   0905             #IFDEF TEC-1F
1723   0905 21 C7 00    BLKMV1:	LD	HL,00C7H	;SHOW ERROR E
1724   0908~            #ELSE
1725   0908~            BLKMV1:	LD	HL,0079H	;SHOW ERROR E
1726   0908             #ENDIF
1727   0908 CD BC 05    BLKMV2:	CALL	BEEP
1728   090B 22 D0 FF    	LD	(DISBUF),HL	;AND WAIT
1729   090E CD 83 04    	CALL	SKEYIN	;FOR KEYPRESS
1730   0911 CD BC 05    	CALL	BEEP
1731   0914 CD 8F 04    	CALL	SKEYRL
1732   0917 C3 31 07    	JP	CANCL1
1733   091A             ;
1734   091A             ; MOVE BLOCK
1735   091A             ;
1736   091A CD 20 09    BLKMV3:	CALL	MOVE
1737   091D C3 31 07    	JP	CANCL1
1738   0920             ;-----------
1739   0920             ; BLOCK MOVE
1740   0920             ;-----------
1741   0920 ED 4B C6 FF MOVE:	LD	BC,(COUNT)
1742   0924 2A C8 FF    	LD	HL,(BLKSRT)	;START ADDR
1743   0927 ED 5B CC FF 	LD	DE,(BLKDST)	;DESTINATION ADDR
1744   092B ED B0       	LDIR
1745   092D C9          	RET
1746   092E             ;-------------------------------
1747   092E             ; SCAN DISPLAY UNTIL KEY RELEASE
1748   092E             ;-------------------------------
1749   092E 22 D0 FF    SDELAY:	LD	(DISBUF),HL	;SHOW HL
1750   0931 06 FF       	LD	B,255	;IN DATA DISPLAYS
1751   0933 CD FD 03    SDELY1:	CALL	SCAND	;UNTIL KEY
1752   0936 10 FB       	DJNZ SDELY1	;IS RELEASED
1753   0938 CD 8F 04    	CALL	SKEYRL
1754   093B C9          	RET
1755   093C             ;---------------------------
1756   093C             ;FUNCTION 5 - BLOCK CHECKSUM
1757   093C             ;---------------------------
1758   093C CD BC 05    BLKSUM:	CALL	BEEP
1759   093F             #IFDEF TEC-1F
1760   093F 21 A7 C3    	LD	HL,0C3A7H	;CS
1761   0942~            #ELSE
1762   0942~            	LD	HL,396DH    ;CS
1763   0942             #ENDIF
1764   0942 CD 2E 09    	CALL	SDELAY	;SHOW PROMPT
1765   0945 ED 5B C8 FF 	LD	DE,(BLKSRT)
1766   0949 2A CA FF    	LD	HL,(BLKEND)
1767   094C A7          	AND	A
1768   094D ED 52       	SBC	HL,DE
1769   094F 23          	INC	HL	;MAKE CHECKSUM INCLUSIVE
1770   0950 22 C6 FF    	LD	(COUNT),HL
1771   0953 30 03       	JR	NC,BLKSM1	;IF OK SUM BLOCK
1772   0955             ;
1773   0955             ; SHOW ERROR
1774   0955             ;
1775   0955 C3 05 09    	JP	BLKMV1
1776   0958             ;
1777   0958             ; CALCULATE CHECKSUM
1778   0958             ;
1779   0958 2A C8 FF    BLKSM1:	LD	HL,(BLKSRT)
1780   095B ED 5B CA FF 	LD	DE,(BLKEND)
1781   095F CD D0 04    	CALL	CHKSUM	;DO THE CHECKSUM,
1782   0962 CD C4 03    	CALL	DISBYT	;DISPLAY
1783   0965 2A C6 FF    	LD	HL,(COUNT)	;NUMBER OF BYTES
1784   0968 CD AF 03    	CALL	DISADD	;SUMMED AND
1785   096B CD BC 05    	CALL	BEEP
1786   096E CD 83 04    	CALL	SKEYIN	;CHECKSUM UNTIL
1787   0971 CD BC 05    	CALL	BEEP	;A KEY IS PRESSED
1788   0974 CD 8F 04    	CALL	SKEYRL
1789   0977 C3 31 07    	JP	CANCL1
1790   097A             ;----------------------------------------
1791   097A             ; FUNCTION 6 - RELATIVE BRANCH CALCULATOR
1792   097A             ;----------------------------------------
1793   097A CD BC 05    BRANCH:	CALL	BEEP
1794   097D             #IFDEF TEC-1F
1795   097D 21 E6 44    	LD	HL,44E6H  ;RB
1796   0980~            #ELSE
1797   0980~            	LD	HL,507CH  ;RB
1798   0980             #ENDIF
1799   0980 CD 2E 09    	CALL	SDELAY
1800   0983 2A DA FF    	LD	HL,(ADRESS)	;GET CURRENT ADDRESS
1801   0986 ED 5B C8 FF 	LD	DE,(BLKSRT)
1802   098A 13          	INC	DE	;POINT TO PC+2
1803   098B A7          	AND	A
1804   098C ED 52       	SBC	HL,DE	;SUBTRACT
1805   098E             ;
1806   098E             ;TEST HIGH BYTE OF RESULT TO
1807   098E             ;DETERMINE IF BACKWARD BRANCH
1808   098E             ;
1809   098E 7C          	LD	A,H
1810   098F FE FF       	CP	255	;BACKWARD BRANCH?
1811   0991 C2 9C 09    	JP	NZ,BRNCH1	;CHECK IF FORWARD
1812   0994             ;
1813   0994             ;CHECK IF WE HAVE BRANCHED BEYOND -128
1814   0994             ;
1815   0994 7D          	LD	A,L
1816   0995 CB 7F       	BIT	7,A
1817   0997 20 0E       	JR	NZ,BRNCH2	;BRANCH IS WITHIN LIMITS
1818   0999 C3 05 09    	JP	BLKMV1	;TOO FAR BACK
1819   099C             ;
1820   099C             ;TEST HIGH BYTE OF RESULT TO
1821   099C             ;DETERMINE IF FORWARD BRANCH
1822   099C             ;
1823   099C FE 00       BRNCH1:	CP	0	;FORWARD BRANCH?
1824   099E C2 05 09    	JP	NZ,BLKMV1	;TOO FAR IN ANY DIRECTION
1825   09A1             ;
1826   09A1             ; CHECK IF WE HAVE BRANCHED BEYOND +128
1827   09A1             ;
1828   09A1 7D          	LD	A,L
1829   09A2 CB 7F       	BIT	7,A
1830   09A4 C2 05 09    	JP	NZ,BLKMV1	;TOO FAR FORWARD
1831   09A7             ;
1832   09A7             ; WITHIN LIMITS PUT IN RAM
1833   09A7             ; AND SHOW AS CURRENT ADDRESS
1834   09A7             ;
1835   09A7 2A C8 FF    BRNCH2:	LD	HL,(BLKSRT)
1836   09AA 22 DA FF    	LD	(ADRESS),HL
1837   09AD 77          	LD	(HL),A
1838   09AE C3 31 07    	JP	CANCL1
1839   09B1             ;-----------------------------------------
1840   09B1             ; FUNCTION 7 - TOGGLE HARDWARE SINGLE STEP
1841   09B1             ;-----------------------------------------
1842   09B1 CD BC 05    TRACE:	CALL	BEEP
1843   09B4             #IFDEF TEC-1F
1844   09B4 D3 60               OUT	(PORT60),A	    ;TOGGLE HARDWARE LATCH
1845   09B6 21 78 00            LD HL,0078H         ;SHOW T
1846   09B9~            #ELSE
1847   09B9~                    OUT	(IO7),A	        ;TOGGLE HARDWARE LATCH
1848   09B9~                    LD	HL,0070H	    ;SHOW T
1849   09B9             #ENDIF
1850   09B9 CD 2E 09    	CALL	SDELAY
1851   09BC C3 31 07    	JP	CANCL1
1852   09BF             ;-------------------------
1853   09BF             ; FUNCTION 8 - PLAY TUNE 1
1854   09BF             ;-------------------------
1855   09BF CD BC 05    PLAY1:	CALL	BEEP
1856   09C2 CD A4 04    	CALL	KEYREL
1857   09C5 21 FA 09    	LD	HL,TUNE1
1858   09C8 CD 1F 05    	CALL	MUSIC
1859   09CB C3 31 07    	JP	CANCL1
1860   09CE             ;-------------------------
1861   09CE             ; FUNCTION 9 - PLAY TUNE 2
1862   09CE             ;-------------------------
1863   09CE CD BC 05    PLAY2:	CALL	BEEP
1864   09D1 CD A4 04    	CALL	KEYREL
1865   09D4 21 3A 0A    	LD	HL,TUNE2
1866   09D7 CD 1F 05    	CALL	MUSIC
1867   09DA C3 31 07    	JP	CANCL1
1868   09DD             ;------------------------------
1869   09DD             ; FUNCTION A - PLAY TUNE IN RAM
1870   09DD             ;------------------------------
1871   09DD CD BC 05    PLAY3:	CALL	BEEP
1872   09E0 CD A4 04    	CALL	KEYREL
1873   09E3 2A DA FF    	LD	HL,(ADRESS)
1874   09E6 CD 1F 05    	CALL	MUSIC
1875   09E9 C3 31 07    	JP	CANCL1
1876   09EC             ;-----------------------------
1877   09EC             ; FUNCTION B - TOGGLE KEY BEEP
1878   09EC             ;-----------------------------
1879   09EC CD BC 05    SWBEEP:	CALL	BEEP
1880   09EF 3A D8 FF    	LD	A,(MODE)
1881   09F2 EE 40       	XOR	40H
1882   09F4 32 D8 FF    	LD	(MODE),A
1883   09F7 C3 31 07    	JP	CANCL1
1884   09FA             ;
1885   09FA             ; TUNE 1
1886   09FA             ;
1887   09FA 06060A0D060DTUNE1:	.DB	06H,06H,0AH,0DH,06H,0DH,0AH,0DH
1887   0A00 0A0D
1888   0A02 121614120F11	.DB	12H,16H,14H,12H,0FH,11H,12H,0FH
1888   0A08 120F
1889   0A0A 0D0D0D0A120F	.DB	0DH,0DH,0DH,0AH,12H,0FH,0DH,0AH
1889   0A10 0D0A
1890   0A12 0806080A0F0A	.DB	08H,06H,08H,0AH,0FH,0AH,0DH,0FH
1890   0A18 0D0F
1891   0A1A 06060A0D060D	.DB	06H,06H,0AH,0DH,06H,0DH,0AH,0DH
1891   0A20 0A0D
1892   0A22 121614120F11	.DB	12H,16H,14H,12H,0FH,11H,12H,0FH
1892   0A28 120F
1893   0A2A 0D0D0D0A120F	.DB	0DH,0DH,0DH,0AH,12H,0FH,0DH,0AH
1893   0A30 0D0A
1894   0A32 0806080A0612	.DB	08H,06H,08H,0AH,06H,12H,00H,1EH
1894   0A38 001E
1895   0A3A             ;
1896   0A3A             ; TUNE 2
1897   0A3A             ;
1898   0A3A 0B0A080A0A0ATUNE2:	.DB	0BH,0AH,08H,0AH,0AH,0AH,06H,06H
1898   0A40 0606
1899   0A42 060B0A080A0A	.DB	06H,0BH,0AH,08H,0AH,0AH,0AH,0AH
1899   0A48 0A0A
1900   0A4A 0A0A0B0A080A	.DB	0AH,0AH,0BH,0AH,08H,0AH,0AH,0AH
1900   0A50 0A0A
1901   0A52 0606060A080A	.DB	06H,06H,06H,0AH,08H,0AH,0DH,0DH
1901   0A58 0D0D
1902   0A5A 0D0D0D000D05	.DB	0DH,0DH,0DH,00H,0DH,05H,08H,0BH
1902   0A60 080B
1903   0A62 0B0B0606060B	.DB	0BH,0BH,06H,06H,06H,0BH,0AH,08H
1903   0A68 0A08
1904   0A6A 0A0A0A060606	.DB	0AH,0AH,0AH,06H,06H,06H,0BH,0AH
1904   0A70 0B0A
1905   0A72 060808080808	.DB	06H,08H,08H,08H,08H,08H,0AH,0BH
1905   0A78 0A0B
1906   0A7A 0A0806060606	.DB	0AH,08H,06H,06H,06H,06H,06H,06H
1906   0A80 0606
1907   0A82 00 00 00 1E 	.DB	00H,00H,00H,1EH
1908   0A86             ;---------------------------
1909   0A86             ; FUNCTION C - SECRET NUMBER
1910   0A86             ;---------------------------
1911   0A86 CD BC 05    SECRET:	CALL	BEEP	;WAIT FOR KEY RELEASE
1912   0A89 CD A4 04    	CALL	KEYREL	;AND CLEAR DISPLAY
1913   0A8C CD 28 04    	CALL	CLRBUF	;BUFFER
1914   0A8F DD 21 00 FE 	LD	IX,SYSTEM	;USE IX FOR LOCAL VARIABLES
1915   0A93             ;
1916   0A93             ; SEPARATE NYBBLES IN RANDOM NUMBER
1917   0A93             ;
1918   0A93 CD F0 04    	CALL	RAND
1919   0A96 DD 75 0B    	LD	(IX+11),L
1920   0A99 DD 74 0C    	LD	(IX+12),H	;RANDOM NUMBER
1921   0A9C DD 7E 0B    	LD	A,(IX+11)	;SEPARATE THE RANDOM
1922   0A9F CD F4 0B    	CALL	SPLIT	;NUMBER INTO
1923   0AA2 DD 75 04    	LD	(IX+4),L	;FOUR NYBBLES
1924   0AA5 DD 74 05    	LD	(IX+5),H	;TO MAKE CHECKING
1925   0AA8 DD 7E 0C    	LD	A,(IX+12)	;AGAINST THE
1926   0AAB CD F4 0B    	CALL	SPLIT	;GUESS EASIER
1927   0AAE DD 75 06    	LD	(IX+6),L
1928   0AB1 DD 74 07    	LD	(IX+7),H
1929   0AB4 AF          	XOR	A
1930   0AB5 ED 47       	LD	I,A	;CLEAR NUMBER OF TRIES
1931   0AB7 21 00 00    	LD	HL,0
1932   0ABA DD 75 08    	LD	(IX+8),L
1933   0ABD DD 74 09    	LD	(IX+9),H
1934   0AC0 CD AF 03    	CALL	DISADD	;AND DISPLAY GUESS
1935   0AC3             ;
1936   0AC3             ; SCAN THE KEYBOARD
1937   0AC3             ;
1938   0AC3 CD 83 04    SECRT1:	CALL	SKEYIN	;WAIT FOR KEY
1939   0AC6 21 D2 0A    	LD	HL,SECNUM
1940   0AC9 CD AD 04    	CALL	MENU	;EXECUTE KEY HANDLER
1941   0ACC CD 8F 04    	CALL	SKEYRL	;WAIT FOR KEY RELEASE
1942   0ACF C3 C3 0A    	JP	SECRT1
1943   0AD2             ;
1944   0AD2             ; SECRET NUMBER KEY TABLE
1945   0AD2             ;
1946   0AD2 12          SECNUM:	.DB	12H
1947   0AD3 000102030405	.DB	00H,01H,02H,03H,04H,05H,06H,07H
1947   0AD9 0607
1948   0ADB 08090A0B0C0D	.DB	08H,09H,0AH,0BH,0CH,0DH,0EH,0FH
1948   0AE1 0E0F
1949   0AE3 10 11       	.DB	10H,11H
1950   0AE5 090B090B090B	.DW	EDTKEY,EDTKEY,EDTKEY,EDTKEY
1950   0AEB 090B
1951   0AED 090B090B090B	.DW	EDTKEY,EDTKEY,EDTKEY,EDTKEY
1951   0AF3 090B
1952   0AF5 090B090B090B	.DW	EDTKEY,EDTKEY,EDTKEY,EDTKEY
1952   0AFB 090B
1953   0AFD 090B090B090B	.DW	EDTKEY,EDTKEY,EDTKEY,EDTKEY
1953   0B03 090B
1954   0B05 30 0B 39 0B 	.DW	ENDKEY,CHKKEY
1955   0B09             ;---------------
1956   0B09             ; EDIT GUESS KEY
1957   0B09             ;---------------
1958   0B09 F5          EDTKEY:	PUSH	AF
1959   0B0A DD 6E 08    	LD	L,(IX+8)
1960   0B0D DD 66 09    	LD	H,(IX+9)	;GET CURRENT GUESS
1961   0B10 CB 25       	SLA	L
1962   0B12 CB 14       	RL	H	;AND DO A 16 BIT
1963   0B14 CB 25       	SLA	L	;LEFT SHIFT 4 TIMES
1964   0B16 CB 14       	RL	H	;TO MAKE  ROOM
1965   0B18 CB 25       	SLA	L	;FOR THE NEW KEY
1966   0B1A CB 14       	RL	H
1967   0B1C CB 25       	SLA	L
1968   0B1E CB 14       	RL	H
1969   0B20 F1          	POP	AF
1970   0B21 B5          	OR	L	;IT IN THE LEAST
1971   0B22 6F          	LD	L,A	;SIGNIFICANT NYBBLE
1972   0B23 DD 75 08    	LD	(IX+8),L
1973   0B26 DD 74 09    	LD	(IX+9),H	;SAVE GUESS
1974   0B29 CD AF 03    	CALL	DISADD
1975   0B2C CD BC 05    	CALL	BEEP
1976   0B2F C9          	RET
1977   0B30             ;----------
1978   0B30             ; QUIT GAME
1979   0B30             ;----------
1980   0B30 CD BC 05    ENDKEY:	CALL	BEEP	;WAIT FOR KEY RELEASE
1981   0B33 CD A4 04    	CALL	KEYREL	;AND RETURN TO
1982   0B36 C3 9B 02    	JP	MAIN	;MONITOR
1983   0B39             ;---------------------------
1984   0B39             ; SEE IF ITS THE RIGHT GUESS
1985   0B39             ;---------------------------
1986   0B39 CD BC 05    CHKKEY:	CALL	BEEP
1987   0B3C ED 57       	LD	A,I
1988   0B3E 3C          	INC	A
1989   0B3F 27          	DAA	;INC BCD NO. OF TRIES
1990   0B40             ;
1991   0B40             ; BRIEFLY SHOW GUESS NO.
1992   0B40             ;
1993   0B40 ED 47       	LD	I,A
1994   0B42 CD C4 03    	CALL	DISBYT
1995   0B45 06 FF       	LD	B,255
1996   0B47 CD FD 03    CHKKY1:	CALL	SCAND
1997   0B4A 10 FB       	DJNZ	CHKKY1
1998   0B4C             ;
1999   0B4C             ; SEPARATE GUESS INTO NYBBLES
2000   0B4C             ;
2001   0B4C DD 7E 08    	LD	A,(IX+8)	;GET CURRENT GUESS
2002   0B4F CD F4 0B    	CALL	SPLIT	;NUMBER INTO
2003   0B52 DD 75 00    	LD	(IX+0),L	;FOUR NYBBLES
2004   0B55 DD 74 01    	LD	(IX+1),H	;TO MAKE CHECKING
2005   0B58 DD 7E 09    	LD	A,(IX+9)	;AGAINST THE
2006   0B5B CD F4 0B    	CALL	SPLIT	;GUESS EASIER
2007   0B5E DD 75 02    	LD	(IX+2),L
2008   0B61 DD 74 03    	LD	(IX+3),H
2009   0B64             ;
2010   0B64             ; CHECK FOR CORRECT NUMBER,CORRECT SPOT
2011   0B64             ;
2012   0B64 AF          	XOR	A
2013   0B65 DD 77 0A    	LD	(IX+10),A	;CLEAR RESULT
2014   0B68 21 04 FE    	LD	HL,SYSTEM+4	;POINT TO RANDOM
2015   0B6B 11 00 FE    	LD	DE,SYSTEM	;POINT TO GUESS
2016   0B6E 06 04       	LD	B,4	;NUMBER OF DIGITS
2017   0B70 7E          CHKKY2:	LD	A,(HL)	;GET RANDOM
2018   0B71 EB          	EX	DE,HL
2019   0B72 BE          	CP	(HL)	;SAME AS GUESS?
2020   0B73 20 10       	JR	NZ,CHKKY4	;NOT SAME
2021   0B75 DD 7E 0A    	LD	A,(IX+10)
2022   0B78 C6 10       	ADD	A,10H	;RIGHT POSITION
2023   0B7A DD 77 0A    	LD	(IX+10),A
2024   0B7D 23          CHKKY3:	INC	HL	;POINT TO NEXT
2025   0B7E EB          	EX	DE,HL	;DIGIT POSITION
2026   0B7F 23          	INC	HL	;AND GO
2027   0B80 10 EE       	DJNZ	CHKKY2	;CHECK OTHER POSITIONS
2028   0B82 C3 A1 0B    	JP	CHKKY8
2029   0B85             ;
2030   0B85             ; CHECK IF NUMBER IS THERE
2031   0B85             ;
2032   0B85 C5          CHKKY4:	PUSH	BC
2033   0B86 E5          	PUSH	HL
2034   0B87 06 04       	LD	B,4	;CHECK EACH DIGIT
2035   0B89 21 00 FE    	LD	HL,SYSTEM	;TO SEE IF THIS
2036   0B8C BE          CHKKY5:	CP	(HL)	;NUMBER IS IN
2037   0B8D 23          	INC	HL	;THE WRONG
2038   0B8E 20 0A       	JR	NZ,CHKKY6	;POSITION
2039   0B90 DD 7E 0A    	LD	A,(IX+10)	;AND UPDATE
2040   0B93 3C          	INC	A	;THE RESULT
2041   0B94 DD 77 0A    	LD	(IX+10),A
2042   0B97 C3 9C 0B    	JP	CHKKY7
2043   0B9A 10 F0       CHKKY6:	DJNZ	CHKKY5
2044   0B9C E1          CHKKY7:	POP	HL
2045   0B9D C1          	POP	BC
2046   0B9E C3 7D 0B    	JP	CHKKY3	;CHECK NEXT DIGIT
2047   0BA1             ;
2048   0BA1             ; CHECK IF CORRECT
2049   0BA1             ;
2050   0BA1 DD 7E 0A    CHKKY8:	LD	A,(IX+10)
2051   0BA4 FE 40       	CP	40H	;IS IT CORRECT?
2052   0BA6 CA C6 0B    	JP	Z,CHKKY9	;YES!
2053   0BA9 DD 7E 0A    	LD	A,(IX+10)	;NOT CORRECT
2054   0BAC CD C4 03    	CALL	DISBYT	;IN DATA DISPLAYS
2055   0BAF ED 57       	LD	A,I	;WAS THAT THE
2056   0BB1 FE 20       	CP	20H	;LAST GUESS?
2057   0BB3 C0          	RET	NZ	;NO TRY AGAIN
2058   0BB4             ;
2059   0BB4             ; RAN OUT OF TRYS
2060   0BB4             ;
2061   0BB4 CD 28 04    	CALL	CLRBUF	;DISPLAY
2062   0BB7 DD 6E 0B    	LD	L,(IX+11)
2063   0BBA DD 66 0C    	LD	H,(IX+12)	;THE RANDOM NUMBER
2064   0BBD CD AF 03    	CALL	DISADD	;AND PLAY
2065   0BC0 21 ED 0B    	LD	HL,LOSE	;THE LOSE
2066   0BC3 C3 D4 0B    	JP	CHKKYA	;MUSIC
2067   0BC6             ;
2068   0BC6             ; GOT THE RIGHT ANSWER
2069   0BC6             ;
2070   0BC6 ED 57       CHKKY9:	LD	A,I	;DISPLAY HOW MANY
2071   0BC8 CD C4 03    	CALL	DISBYT	;AND PLAY THE WIN
2072   0BCB DD 6E 0B    	LD	L,(IX+11)
2073   0BCE DD 66 0C    	LD	H,(IX+12)
2074   0BD1 21 E4 0B    	LD	HL,WIN	;MUSIC
2075   0BD4             ;
2076   0BD4             ; PLAY MUSIC AND WAIT FOR ANY KEY TO RESTART
2077   0BD4             ;
2078   0BD4 CD 1F 05    CHKKYA:	CALL	MUSIC	;PLAY THE MUSIC
2079   0BD7 CD 83 04    	CALL	SKEYIN	;WAIT FOR A KEY
2080   0BDA CD BC 05    	CALL	BEEP
2081   0BDD CD 8F 04    	CALL	SKEYRL	;WAIT FOR KEY RELEASE
2082   0BE0 E1          	POP	HL	;AND RESTART THE GAME
2083   0BE1 C3 86 0A    	JP	SECRET
2084   0BE4             ;
2085   0BE4             ; WIN AND LOSE MUSIC
2086   0BE4             ;
2087   0BE4 141214171712WIN:	.DB	14H,12H,14H,17H,17H,12H,14H,10H,1FH
2087   0BEA 14101F
2088   0BED 011101110111LOSE:	.DB	01H,11H,01H,11H,01H,11H,1FH
2088   0BF3 1F
2089   0BF4             ;-------------------------------
2090   0BF4             ; SEPARATE BYTE INTO TWO NYBBLES
2091   0BF4             ;-------------------------------
2092   0BF4             ;SEPARATES A BYTE INTO TWO
2093   0BF4             ;RIGHT JUSTIFIED NYBBLES
2094   0BF4             ; ENTRY : A = BYTE TO BE SEPARATED
2095   0BF4             ; EXIT  : H = MSN
2096   0BF4             ;         L = LSN
2097   0BF4             ;
2098   0BF4 F5          SPLIT:	PUSH	AF
2099   0BF5 C5          	PUSH	BC
2100   0BF6 47          	LD	B,A	;SAVE BYTE
2101   0BF7 E6 0F       	AND	0FH	;STRIP BITS LSN
2102   0BF9 6F          	LD	L,A	;RETURN LSN IN L
2103   0BFA 78          	LD	A,B
2104   0BFB CB 3F       	SRL	A
2105   0BFD CB 3F       	SRL	A
2106   0BFF CB 3F       	SRL	A	;MOVE MSN
2107   0C01 CB 3F       	SRL	A	;INTO LSN
2108   0C03 67          	LD	H,A	;RETURN MSN IN H
2109   0C04 C1          	POP	BC
2110   0C05 F1          	POP	AF
2111   0C06 C9          	RET
2112   0C07             ;-----------------------------------
2113   0C07             ; FUNCTION D - RELAY BOARD SEQUENCER
2114   0C07             ;-----------------------------------
2115   0C07 CD BC 05    RELSQR:	CALL	BEEP
2116   0C0A CD A4 04    	CALL	KEYREL
2117   0C0D 21 16 0C    	LD	HL,RLTEST	;POINT TO TEST SEQUENCE
2118   0C10 CD 1C 0C    	CALL	RLSTEP
2119   0C13 C3 31 07    	JP	CANCL1
2120   0C16             ;--------------
2121   0C16             ; TEST SEQUENCE
2122   0C16             ;--------------
2123   0C16 5501AA0100FFRLTEST:	.DB	55H,01H,0AAH,01H,00H,0FFH
2124   0C1C             ;----------------
2125   0C1C             ; RELAY SEQUENCER
2126   0C1C             ;----------------
2127   0C1C             ; SEQUENCES RELAYS ON RELAY BOARD
2128   0C1C             ; USES TWO BYTES TO SPECIFY OUTPUT DATA AND DELAY TIME
2129   0C1C             ; DELAY TIME BYTE ALSO DETERMINES IF SEQUENCE IS TO STOP
2130   0C1C             ; OR REPEAT.
2131   0C1C             ;  TABLE:
2132   0C1C             ;  <BYTE1>,<BYTE2>
2133   0C1C             ;  BYTE1 = DATA TO GO TO OUTPUT LATCH (USES PORT IO1)
2134   0C1C             ;  BYTE2 = FF - REPEAT
2135   0C1C             ;          00 - FINISHED
2136   0C1C             ;  ENTRY : HL POINTS TO TABLE OF OUTPUT DATA
2137   0C1C             ;  EXIT : NONE MODIFIED
2138   0C1C             ;
2139   0C1C F5          RLSTEP:	PUSH	AF
2140   0C1D C5          	PUSH	BC
2141   0C1E D5          	PUSH	DE
2142   0C1F E5          	PUSH	HL	;SAVE REGISTERS
2143   0C20 E5          	PUSH	HL
2144   0C21 EB          	EX	DE,HL	;GET ADDRESS OF DATA
2145   0C22 1A          RELSR1:	LD	A,(DE)
2146   0C23 4F          	LD	C,A	;GET OUTPUT DATA
2147   0C24 13          	INC	DE
2148   0C25 1A          	LD	A,(DE)	;GET TIME DELAY
2149   0C26 FE 00       	CP	0
2150   0C28 28 16       	JR	Z,RELSR4	;END OF SEQUENCE
2151   0C2A FE FF       	CP	255
2152   0C2C 28 0D       	JR	Z,RELSR3	;REPEAT SEQUENCE
2153   0C2E 47          	LD	B,A
2154   0C2F 79          	LD	A,C
2155   0C30             #IFDEF TEC-1F
2156   0C30 D3 C0       	OUT	(PORTC0),A   ;STROBE
2157   0C32~            #ELSE
2158   0C32~            	OUT	(IO1),A
2159   0C32             #ENDIF    
2160   0C32 13          	INC	DE
2161   0C33 CD 4A 0C    RELSR2:	CALL	DELONE	;1 SEC DELAY
2162   0C36 10 FB       	DJNZ	RELSR2	;MORE SECONDS TO GO
2163   0C38 C3 22 0C    	JP	RELSR1
2164   0C3B             ;
2165   0C3B             ; REPEAT
2166   0C3B             ;
2167   0C3B D1          RELSR3:	POP	DE	;GET START ADDRESS
2168   0C3C D5          	PUSH	DE	;SAVE FOR LATER
2169   0C3D C3 22 0C    	JP	RELSR1
2170   0C40             ;
2171   0C40             ; FINISHED
2172   0C40             ;
2173   0C40 3E 00       RELSR4:	LD	A,00H
2174   0C42             #IFDEF TEC-1F
2175   0C42 D3 C0       	OUT	(PORTC0),A   ;STROBE
2176   0C44~            #ELSE
2177   0C44~            	OUT	(IO1),A	;CLEAR OUTPUT REG
2178   0C44             #ENDIF
2179   0C44 E1          	POP	HL
2180   0C45 E1          	POP	HL
2181   0C46 D1          	POP	DE
2182   0C47 C1          	POP	BC
2183   0C48 F1          	POP	AF
2184   0C49 C9          	RET
2185   0C4A             ;-----------------
2186   0C4A             ; ONE SECOND DELAY
2187   0C4A             ;-----------------
2188   0C4A             ;
2189   0C4A             ; ENTRY : NONE
2190   0C4A             ; EXIT : FLAG REGISTER MODIFIED
2191   0C4A             ;
2192   0C4A C5          DELONE:	PUSH	BC
2193   0C4B D5          	PUSH	DE
2194   0C4C E5          	PUSH	HL
2195   0C4D 11 01 00    	LD	DE,0001H
2196   0C50 21 70 08    	LD	HL,0870H
2197   0C53 06 92       DELON1:	LD	B,92H
2198   0C55 10 FE       DELON2:	DJNZ	DELON2	;INNER LOOP
2199   0C57 ED 52       	SBC	HL,DE
2200   0C59 D2 53 0C    	JP	NC,DELON1	;OUTER LOOP
2201   0C5C E1          	POP	HL
2202   0C5D D1          	POP	DE
2203   0C5E C1          	POP	BC
2204   0C5F C9          	RET
2205   0C60             ;--------------------------
2206   0C60             ; FUNCTION E - KALEIDOSCOPE
2207   0C60             ;--------------------------
2208   0C60 CD BC 05    SCOPE:	CALL	BEEP
2209   0C63 CD A4 04    	CALL	KEYREL
2210   0C66 CD F0 04    	CALL	RAND	;GENERATE RANDOM
2211   0C69 EB          	EX	DE,HL
2212   0C6A 21 00 FE    	LD	HL,SYSTEM	;NUMBER AND SET UP
2213   0C6D 7B          	LD	A,E	;THE FIRST QUADRANT
2214   0C6E CD E5 0C    	CALL	SEED	;WITH A RANDOM BIT
2215   0C71 7A          	LD	A,D	;PATTERN
2216   0C72 CD E5 0C    	CALL	SEED
2217   0C75             ;
2218   0C75             ; GENERATE MIRROR IMAGES
2219   0C75             ;
2220   0C75 06 04       SCOPE2:	LD	B,04H
2221   0C77 21 00 FE    	LD	HL,SYSTEM
2222   0C7A 11 07 FE    	LD	DE,SYSTEM+7
2223   0C7D 7E          SCOPE3:	LD	A,(HL)	;MIRROR THE FIRST
2224   0C7E 12          	LD	(DE),A	;QUADRANT INTO
2225   0C7F 23          	INC	HL	;THE FOURTH
2226   0C80 1B          	DEC	DE	;QUADRANT
2227   0C81 10 FA       	DJNZ	SCOPE3
2228   0C83             ;
2229   0C83             ; MIRROR ACROSS CENTRE OF DISPLAY
2230   0C83             ;
2231   0C83 06 08       	LD	B,8	;MIRROR THE FIRST
2232   0C85 21 00 FE    	LD	HL,SYSTEM	;AND FOURTH QUADRANT
2233   0C88 7E          	LD	A,(HL)	;ACROSS THE CENTRE
2234   0C89 E6 0F       	AND	0FH	;OF THE DISPLAY
2235   0C8B 77          	LD	(HL),A	;INTO THE SECOND
2236   0C8C CB 46       SCOPE4:	BIT	0,(HL)	;AND THIRD QUADRANTS.
2237   0C8E CA 93 0C    	JP	Z,SCOPE5	;CHECKING IF THE
2238   0C91 CB FE       	SET	7,(HL)	;BITS IN THE LSN ARE
2239   0C93 CB 4E       SCOPE5:	BIT	1,(HL)	;SET, AND SETTING THE
2240   0C95 CA 9A 0C    	JP	Z,SCOPE6	;CORRESPONDING
2241   0C98 CB F6       	SET	6,(HL)	;MIRROR IMAGE
2242   0C9A CB 56       SCOPE6:	BIT	2,(HL)	;BIT IN THE MSN
2243   0C9C CA A1 0C    	JP	Z,SCOPE7	;IF THEY ARE.
2244   0C9F CB EE       	SET	5,(HL)	;DO THIS FOR
2245   0CA1 CB 5E       SCOPE7:	BIT	3,(HL)	;THE EIGHT ROWS
2246   0CA3 CA A8 0C    	JP	Z,SCOPE8	;OF DATA BYTES
2247   0CA6 CB E6       	SET	4,(HL)	;IN THE DISPLAY
2248   0CA8 23          SCOPE8:	INC	HL
2249   0CA9 10 E1       	DJNZ	SCOPE4	;MORE ROWS TO DO
2250   0CAB             ;
2251   0CAB             ; DISPLAY RANDOM BIT PATTERN
2252   0CAB             ;
2253   0CAB 11 01 00    	LD	DE,0001H	;SCAN THE DISPLAY
2254   0CAE CD F0 04    	CALL	RAND	;A RANDOM
2255   0CB1 7C          	LD	A,H	;TIME
2256   0CB2 E6 07       	AND	7	;NOT GREATER THAN
2257   0CB4 F6 01       	OR	1	;NOT LESS THAN
2258   0CB6 67          	LD	H,A
2259   0CB7 E5          SCOPE9:	PUSH	HL
2260   0CB8 21 00 FE    	LD	HL,SYSTEM
2261   0CBB CD F4 0C    	CALL	SKATE	;SCAN 8X8
2262   0CBE E1          	POP	HL
2263   0CBF ED 52       	SBC	HL,DE
2264   0CC1 C2 B7 0C    	JP	NZ,SCOPE9
2265   0CC4             ;
2266   0CC4             ; MANIPULATE BITS FOR NEXT IMAGE
2267   0CC4             ;
2268   0CC4 21 00 FE    SCOPEA:	LD	HL,SYSTEM
2269   0CC7 3E 05       	LD	A,5
2270   0CC9 86          	ADD	A,(HL)
2271   0CCA E6 0F       	AND	0FH
2272   0CCC 77          	LD	(HL),A	;ADD 5 TO FIRST LSN
2273   0CCD 23          	INC	HL
2274   0CCE 3E 03       	LD	A,03H
2275   0CD0 86          	ADD	A,(HL)
2276   0CD1 E6 0F       	AND	0FH
2277   0CD3 77          	LD	(HL),A	;ADD 3 TO SECOND LSN
2278   0CD4 23          	INC	HL
2279   0CD5 3E 01       	LD	A,01H
2280   0CD7 86          	ADD	A,(HL)
2281   0CD8 E6 0F       	AND	0FH
2282   0CDA 77          	LD	(HL),A	;ADD 1 TO THIRD LSN
2283   0CDB 23          	INC	HL
2284   0CDC 3E 07       	LD	A,07H
2285   0CDE 86          	ADD	A,(HL)
2286   0CDF E6 0F       	AND	0FH
2287   0CE1 77          	LD	(HL),A	;ADD 15 TO FOURTH LSN
2288   0CE2 C3 75 0C    	JP	SCOPE2	;MIRROR BIT PATTERN
2289   0CE5             ;
2290   0CE5             ; SEED THE FIRST QUADRANT WITH RANDOM BITS
2291   0CE5             ;
2292   0CE5 47          SEED:	LD	B,A	;PUT THE
2293   0CE6 E6 0F       	AND	0FH	;RANDOM NUMBER
2294   0CE8 77          	LD	(HL),A	;INTO THE
2295   0CE9 23          	INC	HL	;FIRST QUADRANT
2296   0CEA 78          	LD	A,B	;OF THE
2297   0CEB E6 F0       	AND	240	;DISPLAY
2298   0CED 1F          	RRA
2299   0CEE 1F          	RRA
2300   0CEF 1F          	RRA
2301   0CF0 1F          	RRA
2302   0CF1 77          	LD	(HL),A
2303   0CF2 23          	INC	HL
2304   0CF3 C9          	RET
2305   0CF4             ;-----------------
2306   0CF4             ; SCAN 8X8 DISPLAY
2307   0CF4             ;-----------------
2308   0CF4             ;PUT THE 8 RAM LOCATIONS POINTED TO
2309   0CF4             ;BY HL ON THE 8X8 DISPLAY,LOW BYTE
2310   0CF4             ;ON TOP ROW.
2311   0CF4             ;  ROUTINE PERIOD IS 500uS
2312   0CF4             ;  PULSE WIDTH 15uS  GIVES 3% DUTY
2313   0CF4             ;
2314   0CF4             ; ENTRY : HL = ADDRESS OF 8X8 BUFFER
2315   0CF4             ;	EXIT : NO REGISTERS MODIFIED
2316   0CF4             ;
2317   0CF4 F5          SKATE:	PUSH	AF
2318   0CF5 C5          	PUSH	BC
2319   0CF6 E5          	PUSH	HL	;SAVE REGISTERS
2320   0CF7 0E 80       	LD	C,80H
2321   0CF9 7E          SKATE1:	LD	A,(HL)
2322   0CFA             
2323   0CFA             #IFDEF TEC-1F
2324   0CFA D3 C0       	OUT	(PORTC0),A	;OUTPUT X
2325   0CFC~            #ELSE
2326   0CFC~            	OUT	(IO0),A	;OUTPUT X
2327   0CFC             #ENDIF
2328   0CFC             
2329   0CFC 79          	LD	A,C
2330   0CFD                 
2331   0CFD             #IFDEF TEC-1F
2332   0CFD D3 04       	OUT	(PORT4),A	;OUTPUT X
2333   0CFF~            #ELSE
2334   0CFF~            	OUT	(IO2),A	;OUTPUT Y
2335   0CFF             #ENDIF
2336   0CFF             
2337   0CFF 06 02       	LD	B,02H
2338   0D01 10 FE       SKATE2:	DJNZ	SKATE2	;ON TIME DELAY
2339   0D03 AF          	XOR	A
2340   0D04                 
2341   0D04             #IFDEF TEC-1F
2342   0D04 D3 C0       	OUT	(PORTC0),A
2343   0D06 D3 04       	OUT	(PORT4),A	;CLEAR DISPLAY LATCHES
2344   0D08~            #ELSE
2345   0D08~            	OUT	(IO0),A
2346   0D08~            	OUT	(IO2),A	;CLEAR DISPLAY LATCHES
2347   0D08             #ENDIF
2348   0D08 06 08       	LD	B,08H
2349   0D0A 10 FE       SKATE3:	DJNZ	SKATE3	;OFF TIME DELAY
2350   0D0C 23          	INC	HL
2351   0D0D CB 09       	RRC	C
2352   0D0F 30 E8       	JR	NC,SKATE1	;MORE TO OUTPUT
2353   0D11 E1          	POP	HL
2354   0D12 C1          	POP	BC
2355   0D13 F1          	POP	AF
2356   0D14 C9          	RET
2357   0D15             ;----------------------------
2358   0D15             ; FUNCTION F - CLOCK CALENDAR -> SIMON
2359   0D15             ;----------------------------
2360   0D15             	
2361   0D15             
2362   0D15 CD BC 05    TIME: CALL	BEEP
2363   0D18 CD A4 04    	CALL	KEYREL	;WAIT FOR KEY RELEASE
2364   0D1B C3 17 14    	JP SIMON
2365   0D1E             
2366   0D1E             ; original Time
2367   0D1E CD BC 05    	CALL	BEEP
2368   0D21 CD A4 04    	CALL	KEYREL	;WAIT FOR KEY RELEASE
2369   0D24 DD 21 00 FE 	LD	IX,SYSTEM	;USE IX FOR TEMP VARIABLES
2370   0D28 3A D6 FF    	LD	A,(ONTIM)
2371   0D2B DD 77 00    	LD	(IX+0),A	;SAVE DISPLAY SCAN DELAY
2372   0D2E 3E 60       	LD	A,60H
2373   0D30 32 D6 FF    	LD	(ONTIM),A	;USE NEW DELAY
2374   0D33 DD 77 01    	LD	(IX+1),A	;START IN TIME MODE
2375   0D36             ;
2376   0D36             ; DISPLAY TIME,CHECK FOR KEY
2377   0D36             ;
2378   0D36 CD 8C 0E    TIME1:	CALL	RWATCH	;READ THE CLOCK/CALENDAR
2379   0D39 CD 76 0D    	CALL	UPDBUF	;UPDATE THE DISPLAY BUFFER
2380   0D3C CD FD 03    	CALL	SCAND
2381   0D3F CD 37 04    	CALL	SCANKEY
2382   0D42 CB 6F       	BIT	5,A
2383   0D44 28 F0       	JR	Z,TIME1	;NO KEY KEEP LOOKING
2384   0D46 E6 1F       	AND	1FH
2385   0D48 21 50 0D    	LD	HL,TIMKEY
2386   0D4B CD AD 04    	CALL	MENU
2387   0D4E 18 E6       	JR	TIME1
2388   0D50             
2389   0D50 04          TIMKEY:	.DB	4
2390   0D51 10 11 12 13 	.DB	10H,11H,12H,13H
2391   0D55 5D0DEE0D670D	.DW	CLKEXT,SETCLK,CALKEY,CALKEY
2391   0D5B 670D
2392   0D5D             ;--------------------
2393   0D5D             ; EXIT CLOCK CALENDAR
2394   0D5D             ;--------------------
2395   0D5D E1          CLKEXT:	POP	HL	;REMOVE RETURN
2396   0D5E DD 7E 00    	LD	A,(IX+0)
2397   0D61 32 D6 FF    	LD	(ONTIM),A	;RESTORE DELAY TIME
2398   0D64 C3 2E 07    	JP	CANCEL
2399   0D67             ;--------------------
2400   0D67             ; TOGGLE DISPLAY MODE
2401   0D67             ;--------------------
2402   0D67 CD BC 05    CALKEY:	CALL	BEEP
2403   0D6A CD A4 04    	CALL	KEYREL
2404   0D6D DD 7E 01    	LD	A,(IX+1)
2405   0D70 EE 80       	XOR	80H	;TOGGLE DISPLAY
2406   0D72 DD 77 01    	LD	(IX+1),A
2407   0D75 C9          	RET
2408   0D76             ;----------------------
2409   0D76             ; UPDATE DISPLAY BUFFER
2410   0D76             ;----------------------
2411   0D76 DD CB 01 7E UPDBUF:	BIT	7,(IX+1)	;WHICH DISPLAY MODE?
2412   0D7A 20 22       	JR	NZ,UPDBF2	;CALENDAR DISPLAY
2413   0D7C             ;
2414   0D7C             ; TIME DISPLAY
2415   0D7C             ;
2416   0D7C 3A B9 FF    UPDBF1:	LD	A,(SWREG1)
2417   0D7F CD CD 03    	CALL	CONBYT
2418   0D82 CB FD       	SET	7,L	;SET DECIMAL POINT
2419   0D84 22 D0 FF    	LD	(DISBUF),HL	;SHOW SECONDS (0-59)
2420   0D87 3A BA FF    	LD	A,(SWREG2)
2421   0D8A CD CD 03    	CALL	CONBYT
2422   0D8D CB FD       	SET	7,L	;SET DECIMAL POINT
2423   0D8F 22 D2 FF    	LD	(DISBUF+2),HL	;SHOW MINUTES (0-59)
2424   0D92 3A BB FF    	LD	A,(SWREG3)
2425   0D95 CD CD 03    	CALL	CONBYT
2426   0D98 CB FD       	SET	7,L	;SET DECIMAL POINT
2427   0D9A 22 D4 FF    	LD	(DISBUF+4),HL	;SHOW HOURS (0-23)
2428   0D9D C9          	RET
2429   0D9E             ;
2430   0D9E             ; CALENDAR DISPLAY
2431   0D9E             ;
2432   0D9E 3A BF FF    UPDBF2:	LD	A,(SWREG7)
2433   0DA1 CD CD 03    	CALL	CONBYT
2434   0DA4 22 D0 FF    	LD	(DISBUF),HL	;SHOW YEAR (0-99)
2435   0DA7             ;
2436   0DA7             ; CHECK MODE FOR DD/MM/YY OR MM/DD/YY
2437   0DA7             ;
2438   0DA7 21 B6 FF    	LD	HL,CALMDE
2439   0DAA CB 7E       	BIT	7,(HL)
2440   0DAC 20 14       	JR	NZ,UPDBF3	;MM/DD/YY MODE
2441   0DAE             ;
2442   0DAE             ; DD/MM/YY MODE
2443   0DAE             ;
2444   0DAE 3A BE FF    	LD	A,(SWREG6)
2445   0DB1 CD CD 03    	CALL	CONBYT
2446   0DB4 22 D2 FF    	LD	(DISBUF+2),HL	;SHOW MONTH (1-12)
2447   0DB7 3A BD FF    	LD	A,(SWREG5)
2448   0DBA CD CD 03    	CALL	CONBYT
2449   0DBD 22 D4 FF    	LD	(DISBUF+4),HL	;SHOW DATE (1-31)
2450   0DC0 18 12       	JR	UPDBF4
2451   0DC2             ;
2452   0DC2             ; MM/DD/YY MODE
2453   0DC2             ;
2454   0DC2 3A BE FF    UPDBF3:	LD	A,(SWREG6)
2455   0DC5 CD CD 03    	CALL	CONBYT
2456   0DC8 22 D4 FF    	LD	(DISBUF+4),HL	;SHOW MONTH (1-12)
2457   0DCB 3A BD FF    	LD	A,(SWREG5)
2458   0DCE CD CD 03    	CALL	CONBYT
2459   0DD1 22 D2 FF    	LD	(DISBUF+2),HL	;SHOW DATE (1-31)
2460   0DD4             ;
2461   0DD4             ; SHOW DAY
2462   0DD4             ;
2463   0DD4 3A BC FF    UPDBF4:	LD	A,(SWREG4)	;GET DAY REG
2464   0DD7 E6 07       	AND	07H
2465   0DD9 28 12       	JR	Z,UPDBF5	;ZERO IS ILLEGAL
2466   0DDB FE 07       	CP	07H
2467   0DDD 28 0E       	JR	Z,UPDBF5	;DON'T SHOW SATURDAY
2468   0DDF 2F          	CPL	;WORK OUT
2469   0DE0 D6 01       	SUB	01H	;WHICH DECIMAL POINT
2470   0DE2 E6 07       	AND	07H	;TO LIGHT
2471   0DE4 21 D0 FF    	LD	HL,DISBUF	;ADDING THE DAY
2472   0DE7 06 00       	LD	B,00H	;TO A DISPLAY
2473   0DE9 4F          	LD	C,A	;BUFFER INDEX
2474   0DEA 09          	ADD	HL,BC	;AND SETTING THE
2475   0DEB CB FE       	SET	7,(HL)	;DECIMAL POINT
2476   0DED C9          UPDBF5	RET	;IN THAT DISPLAY
2477   0DEE             ;--------------
2478   0DEE             ; SET TIME/DATE
2479   0DEE             ;--------------
2480   0DEE CD BC 05    SETCLK:	CALL	BEEP
2481   0DF1 CD A4 04    	CALL	KEYREL
2482   0DF4             ;
2483   0DF4             ; EDIT THE DISPLAY BUFFER
2484   0DF4             ;
2485   0DF4 CD 76 0D    SETCK1:	CALL	UPDBUF  ;UPDATE DISPLAY BUFFER
2486   0DF7 CD 83 04    	CALL	SKEYIN
2487   0DFA CD A4 04    	CALL	KEYREL
2488   0DFD FE 10       	CP	10H	;FN KEY EXITS (NO CHANGE)
2489   0DFF C8          	RET	Z
2490   0E00 FE 11       	CP	11H	;AD KEY SETS CLOCK/CALENDAR
2491   0E02 28 6E       	JR	Z,SETCK8
2492   0E04 FE 12       	CP	12H
2493   0E06 28 3D       	JR	Z,SETCK4	;PLUS KEY
2494   0E08 FE 13       	CP	13H
2495   0E0A 28 4F       	JR	Z,SETCK6	;MINUS KEY
2496   0E0C FE 0A       	CP	0AH	;NO A-F KEYS
2497   0E0E 30 E4       	JR	NC,SETCK1
2498   0E10             ;
2499   0E10             ; IS IT SET CLOCK OR SET CALENDAR?
2500   0E10             ;
2501   0E10 DD CB 01 7E 	BIT	7,(IX+1)
2502   0E14 20 0D       	JR	NZ,SETCK2
2503   0E16             ;
2504   0E16             ; SET CLOCK DISPLAY
2505   0E16             ;
2506   0E16 21 B9 FF    	LD	HL,SWREG1
2507   0E19 ED 6F       	RLD	;MOVE THE NEW KEY
2508   0E1B 23          	INC	HL	;INTO THE CLOCK BUFFER
2509   0E1C ED 6F       	RLD
2510   0E1E 23          	INC	HL
2511   0E1F ED 6F       	RLD
2512   0E21 18 D1       	JR	SETCK1
2513   0E23             ;
2514   0E23             ; SET CALENDAR DISPLAY
2515   0E23             ;
2516   0E23 21 B6 FF    SETCK2:	LD	HL,CALMDE
2517   0E26 CB 7E       	BIT	7,(HL)
2518   0E28 20 0D       	JR	NZ,SETCK3	;MM/DD/YY MODE
2519   0E2A             ;
2520   0E2A             ; SET CALENDAR AS DD/MM/YY
2521   0E2A             ;
2522   0E2A 21 BF FF    	LD	HL,SWREG7
2523   0E2D ED 6F       	RLD	;MOVE THE NEW KEY
2524   0E2F 2B          	DEC	HL	;INTO THE CAL BUFFER
2525   0E30 ED 6F       	RLD
2526   0E32 2B          	DEC	HL
2527   0E33 ED 6F       	RLD
2528   0E35 18 BD       	JR	SETCK1
2529   0E37             ;
2530   0E37             ; SET CALENDAR AS MM/DD/YY
2531   0E37             ;
2532   0E37 21 BF FF    SETCK3:	LD	HL,SWREG7
2533   0E3A ED 6F       	RLD	;MOVE THE NEW KEY
2534   0E3C 2B          	DEC	HL	;INTO THE CAL BUFFER
2535   0E3D 2B          	DEC	HL
2536   0E3E ED 6F       	RLD
2537   0E40 23          	INC	HL
2538   0E41 ED 6F       	RLD
2539   0E43 18 AF       	JR	SETCK1
2540   0E45             ;
2541   0E45             ; INC DAY
2542   0E45             ;
2543   0E45 DD CB 01 7E SETCK4:	BIT	7,(IX+1)
2544   0E49 28 A9       	JR	Z,SETCK1
2545   0E4B 3A BC FF    	LD	A,(SWREG4)
2546   0E4E FE 07       	CP	07H	;IS THE DAY SUNDAY?
2547   0E50 20 02       	JR	NZ,SETCK5
2548   0E52 3E 00       	LD	A,00H	;SET MONDAY
2549   0E54 3C          SETCK5:	INC	A	;DAY=DAY+1
2550   0E55 32 BC FF    	LD	(SWREG4),A
2551   0E58 C3 F4 0D    	JP	SETCK1
2552   0E5B             ;
2553   0E5B             ; DEC DAY
2554   0E5B             ;
2555   0E5B DD CB 01 7E SETCK6:	BIT	7,(IX+1)
2556   0E5F CA F4 0D    	JP	Z,SETCK1
2557   0E62 3A BC FF    	LD	A,(SWREG4)
2558   0E65 FE 01       	CP	01H	;IS THE DAY MONDAY?
2559   0E67 20 02       	JR	NZ,SETCK7
2560   0E69 3E 08       	LD	A,08H	;SET SUNDAY
2561   0E6B 3D          SETCK7:	DEC	A	;DAY=DAY-1
2562   0E6C 32 BC FF    	LD	(SWREG4),A
2563   0E6F C3 F4 0D    	JP	SETCK1
2564   0E72             ;
2565   0E72             ; SET THE CLOCK/CALENDAR WITH NEW DATA
2566   0E72             ;
2567   0E72 CD BC 05    SETCK8:	CALL	BEEP
2568   0E75 CD A4 04    	CALL	KEYREL
2569   0E78 3A BB FF    	LD	A,(SWREG3)
2570   0E7B E6 3F       	AND	3FH	;24 HOUR MODE
2571   0E7D 32 BB FF    	LD	(SWREG3),A
2572   0E80 3A BC FF    	LD	A,(SWREG4)
2573   0E83 E6 07       	AND	07H	;OSC ON,RST ENABLED
2574   0E85 32 BC FF    	LD	(SWREG4),A
2575   0E88 CD 16 0F    	CALL	WWATCH	;WRITE CHANGES
2576   0E8B C9          	RET
2577   0E8C             ;---------------------
2578   0E8C             ; READ FROM SMARTWATCH
2579   0E8C             ;---------------------
2580   0E8C             ; READS DATA FROM SMARTWATCH, USES LOOKUP TABLE TO
2581   0E8C             ; WRITE 64 BIT ACCESS CODE TO ENABLE THE SMARTWATCH.
2582   0E8C             ; READS ALL DATA INTO REGISTERS AS RAM CANNOT BE READ
2583   0E8C             ; OR WRITTEN TO WHILE WATCH IS ENABLED.
2584   0E8C             ;
2585   0E8C             ;  ENTRY : NONE
2586   0E8C             ;  EXIT  : NO WORKING REGISTERS MODIFIED
2587   0E8C             ;          (ALTERNATE SET MODIFIED)
2588   0E8C             ;  CONTENTS OF SMARTWATCH WRITTEN TO SWREG0 - SWREG7
2589   0E8C             ;
2590   0E8C             ;
2591   0E8C             ; ENABLE SMARTWATCH
2592   0E8C             ;
2593   0E8C F5          RWATCH:	PUSH	AF
2594   0E8D C5          	PUSH	BC
2595   0E8E D5          	PUSH	DE
2596   0E8F E5          	PUSH	HL
2597   0E90 3A FF FF    	LD	A,(DALLAS)	;INITIATE PATTERN
2598   0E93 21 D6 0E    	LD	HL,PATERN	;WRITE D0 OF ALL THE BYTES
2599   0E96 06 40       	LD	B,64	;IN THE TABLE TO THE RAM TO
2600   0E98 7E          RWACH1:	LD	A,(HL)	;ENABLE THE SMARTWATCH
2601   0E99 32 FF FF    	LD	(DALLAS),A
2602   0E9C 23          	INC	HL
2603   0E9D 10 F9       	DJNZ	RWACH1
2604   0E9F             ;
2605   0E9F             ; READ DATA FROM WATCH
2606   0E9F             ;
2607   0E9F 06 20       	LD	B,32
2608   0EA1 3A FF FF    RWACH2:	LD	A,(DALLAS)	;SHIFT THE FIRST 32 BITS
2609   0EA4 CB 3F       	SRL	A	;INTO THE 16 BIT REGISTERS
2610   0EA6 CB 1A       	RR	D	;DE AND HL
2611   0EA8 CB 1B       	RR	E	;THEN EXCHANGE THEM WITH
2612   0EAA CB 1C       	RR	H	;THE ALTERNATE PAIR
2613   0EAC CB 1D       	RR	L
2614   0EAE 10 F1       	DJNZ	RWACH2
2615   0EB0 D9          	EXX
2616   0EB1 06 20       	LD	B,32
2617   0EB3 3A FF FF    RWACH3:	LD	A,(DALLAS)	;NOW SHIFT THE LAST 32 BITS
2618   0EB6 CB 3F       	SRL	A	;INTO THE SAME 16 BIT REGISTERS
2619   0EB8 CB 1A       	RR	D
2620   0EBA CB 1B       	RR	E
2621   0EBC CB 1C       	RR	H
2622   0EBE CB 1D       	RR	L
2623   0EC0 10 F1       	DJNZ	RWACH3
2624   0EC2             ;
2625   0EC2             ; SAVE IN WATCH REGISTERS
2626   0EC2             ;
2627   0EC2 22 BC FF    	LD	(SWREG4),HL	;SMARTWATCH READ IS COMPLETE
2628   0EC5 ED 53 BE FF 	LD	(SWREG6),DE	;GET THE DATA
2629   0EC9 D9          	EXX
2630   0ECA 22 B8 FF    	LD	(SWREG0),HL
2631   0ECD ED 53 BA FF 	LD	(SWREG2),DE
2632   0ED1 E1          	POP	HL
2633   0ED2 D1          	POP	DE
2634   0ED3 C1          	POP	BC
2635   0ED4 F1          	POP	AF
2636   0ED5 C9          	RET
2637   0ED6             ;
2638   0ED6             ; SMARTWATCH ACCESS PATTERN
2639   0ED6             ;
2640   0ED6 C5E271B85C2EPATERN:	.DB	0C5H,0E2H,71H,0B8H,5CH,2EH,17H,8BH
2640   0EDC 178B
2641   0EDE 3A1D8E47A3D1	.DB	3AH,1DH,8EH,47H,0A3H,0D1H,0E8H,74H
2641   0EE4 E874
2642   0EE6 A3D1E8743A1D	.DB	0A3H,0D1H,0E8H,74H,3AH,1DH,8EH,47H
2642   0EEC 8E47
2643   0EEE 5C2E178BC5E2	.DB	5CH,2EH,17H,8BH,0C5H,0E2H,71H,0B8H
2643   0EF4 71B8
2644   0EF6 C5E271B85C2E	.DB	0C5H,0E2H,71H,0B8H,5CH,2EH,17H,8BH
2644   0EFC 178B
2645   0EFE 3A1D8E47A3D1	.DB	3AH,1DH,8EH,47H,0A3H,0D1H,0E8H,74H
2645   0F04 E874
2646   0F06 A3D1E8743A1D	.DB	0A3H,0D1H,0E8H,74H,3AH,1DH,8EH,47H
2646   0F0C 8E47
2647   0F0E 5C2E178BC5E2	.DB	5CH,2EH,17H,8BH,0C5H,0E2H,71H,0B8H
2647   0F14 71B8
2648   0F16             ;--------------------
2649   0F16             ; WRITE TO SMARTWATCH
2650   0F16             ;--------------------
2651   0F16             ;
2652   0F16             ; WRITE DATA TO SMARTWATCH BY FIRST ACCESSING
2653   0F16             ; IT USING BIT MANIPULATION.
2654   0F16             ; DATA IS WRITTEN BY FIRSTLY PUTTING ALL 64 BITS
2655   0F16             ; INTO REGISTERS AS RAM CANNOT BE ACCESSED ONCE THE
2656   0F16             ; SMARTWATCH IS ENABLED.
2657   0F16             ;
2658   0F16             ; ENTRY : NONE
2659   0F16             ; THE DATA TO WRITE TO THE SMARTWATCH
2660   0F16             ; MUST BE IN SWREG0 - SWREG7
2661   0F16             ;  EXIT : NO WORKING REGISTERS MODIFIED
2662   0F16             ;  (ALTERNATE SET MODIFIED)
2663   0F16             ; GET DATA TO WRITE TO WATCH
2664   0F16             ;
2665   0F16 F5          WWATCH:	PUSH	AF
2666   0F17 C5          	PUSH	BC
2667   0F18 D5          	PUSH	DE
2668   0F19 E5          	PUSH	HL
2669   0F1A 2A BC FF    	LD	HL,(SWREG4)	;SET UP THE
2670   0F1D ED 5B BE FF 	LD	DE,(SWREG6)	;16 BIT REGISTERS
2671   0F21 D9          	EXX
2672   0F22 2A B8 FF    	LD	HL,(SWREG0)	;WITH THE DATA TO BE
2673   0F25 ED 5B BA FF 	LD	DE,(SWREG2)	;WRITTEN TO THE SMARTWATCH
2674   0F29             ;
2675   0F29             ; WRITE 64 BIT ACCESS CODE TO ENABLE SMARTWATCH
2676   0F29             ;
2677   0F29 3A FF FF    	LD	A,(DALLAS)	;INITIATE PATTERN
2678   0F2C 3E C5       	LD	A,0C5H
2679   0F2E 0E 80       	LD	C,80H	;NUMBER OF BYTES
2680   0F30 06 80       WWACH1:	LD	B,80H	;NUMBER OF BITS
2681   0F32 32 FF FF    WWACH2:	LD	(DALLAS),A	;WRITE TO RAM
2682   0F35 CB 0F       	RRC	A
2683   0F37 CB 38       	SRL	B
2684   0F39 30 F7       	JR	NC,WWACH2	;MORE BITS
2685   0F3B CB 39       	SRL	C
2686   0F3D 38 11       	JR	C,WWACH4	;NO MORE BYTES
2687   0F3F CB 47       	BIT	0,A
2688   0F41 20 0A       	JR	NZ,WWACH3
2689   0F43 CB 0F       	RRC	A
2690   0F45 CB 0F       	RRC	A
2691   0F47 CB 0F       	RRC	A
2692   0F49 CB 0F       	RRC	A
2693   0F4B 18 E3       	JR	WWACH1
2694   0F4D 2F          WWACH3:	CPL
2695   0F4E 18 E0       	JR	WWACH1
2696   0F50             ;
2697   0F50             ; WRITE DATA TO WATCH
2698   0F50             ;
2699   0F50 06 20       WWACH4:	LD	B,32	;SHIFT THE FIRST 32 BITS
2700   0F52 CB 3A       WWACH5:	SRL	D	;OUT OF THE 16 BIT REGISTERS
2701   0F54 CB 1B       	RR	E	;ONTO D0 AND INTO
2702   0F56 CB 1C       	RR	H	;THE SMARTWATCH
2703   0F58 CB 1D       	RR	L
2704   0F5A 17          	RLA
2705   0F5B 32 FF FF    	LD	(DALLAS),A
2706   0F5E 10 F2       	DJNZ	WWACH5
2707   0F60 D9          	EXX	;RESTORE REGISTERS
2708   0F61 06 20       	LD	B,32	;GET THE OTHER 32 BITS FROM
2709   0F63 CB 3A       WWACH6:	SRL	D	;THE ALTERNATE REGISTER SET
2710   0F65 CB 1B       	RR	E	;AND SHIFT THEM ONTO D0
2711   0F67 CB 1C       	RR	H	;AND INTO THE SMARTWATCH
2712   0F69 CB 1D       	RR	L
2713   0F6B 17          	RLA
2714   0F6C 32 FF FF    	LD	(DALLAS),A
2715   0F6F 10 F2       	DJNZ	WWACH6
2716   0F71 E1          	POP	HL
2717   0F72 D1          	POP	DE
2718   0F73 C1          	POP	BC
2719   0F74 F1          	POP	AF
2720   0F75 C9          	RET
2721   0F76             ;-----------------
2722   0F76             ; ONE SECOND DELAY
2723   0F76             ;-----------------
2724   0F76             ; USES SMARTWATCH TO DELAY FOR 1 SECOND
2725   0F76             ; BY WAITING FOR SECONDS REGISTER TO ROLLOVER
2726   0F76             ;
2727   0F76             ; FIRST READ GETS A REFERENCE, SUBSEQUENT READS
2728   0F76             ; WAIT UNTIL THE SECONDS COUNTER NO LONGER
2729   0F76             ; READS THE SAME AS THE REFERENCE VALUE,
2730   0F76             ; THEN THE ROUTINE RETURNS
2731   0F76             ;
2732   0F76             ; ENTRY : NONE
2733   0F76             ; EXIT : NONE MODIFIED
2734   0F76             ;
2735   0F76 F5          ONESEC:	PUSH	AF
2736   0F77 C5          	PUSH	BC
2737   0F78 CD 8C 0E    	CALL	RWATCH	;READ WATCH
2738   0F7B 3A B9 FF    	LD	A,(SWREG1)
2739   0F7E 47          	LD	B,A	;SAVE REF COUNT
2740   0F7F CD 8C 0E    ONESC1:	CALL	RWATCH
2741   0F82 3A B9 FF    	LD	A,(SWREG1)
2742   0F85 B8          	CP	B	;SAME AS REF?
2743   0F86 CA 7F 0F    	JP	Z,ONESC1	;YES SO WAIT AGAIN
2744   0F89 C1          	POP	BC
2745   0F8A F1          	POP	AF
2746   0F8B C9          	RET
2747   0F8C                 
2748   0F8C             ;---------------
2749   0F8C             ; SERIAL MONITOR
2750   0F8C             ;---------------
2751   0F8C             
2752   0F8C             ;------------
2753   0F8C             ; ASCII CODES
2754   0F8C             ;------------
2755   0F8C             ESC:    .EQU   1BH
2756   0F8C             CR:     .EQU   0DH
2757   0F8C             LF:     .EQU   0AH
2758   0F8C             
2759   0F8C                        
2760   0F8C 3E 40       SCBUG:  LD    A,40H
2761   0F8E D3 70              OUT   (SCAN),A    ;TURN OFF THE DISPLAY MAKE SERIAL TX HIGH
2762   0F90             ;
2763   0F90             ; START UP THE MONITOR
2764   0F90             ;          
2765   0F90 ED 73 AE FF COLD:   LD    (ISTACK),SP ;SAVE STACK POINTER
2766   0F94 21 CF 11           LD    HL,SSSTEP
2767   0F97 22 FA FF           LD    (RST38),HL ;HIJACK THE SINGLE STEPPER
2768   0F9A CD 4A 0C           CALL  DELONE     ;WAIT A SEC SO THE HOST SEES TX HIGH  
2769   0F9D 21 5D 08           LD    HL,TXDATA
2770   0FA0 22 AA FF           LD    (PUTCH),HL ;USE THE BITBANG SERIAL TRANSMIT
2771   0FA3 21 88 08           LD    HL,RXDATA
2772   0FA6 22 AC FF           LD    (GETCH),HL  ;USE THE BITBANG SERIAL RECEIVE
2773   0FA9 21 0F 14           LD    HL,INITSZ  ;VT100 TERMINAL COMMANDS FOR CLEAR SCREEN,CURSOR HOME
2774   0FAC CD C1 11           CALL  SNDMSG     ;INITIALISE THE TERMINAL
2775   0FAF 21 61 12           LD    HL,SIGNON
2776   0FB2 CD C1 11           CALL  SNDMSG     ;SEND THE SIGNON
2777   0FB5             ;
2778   0FB5             ; DISPLAY THE PROMPT AND WAIT FOR COMMANDS
2779   0FB5             ;
2780   0FB5 3E 3E       START2: LD    A,'>'
2781   0FB7 CD 2C 10           CALL  OUTCH       ;DISPLAY THE PROMPT
2782   0FBA CD 32 10    START3: CALL  INCH        ;GET A CHARACTER FROM THE CONSOLE
2783   0FBD             ;
2784   0FBD             ; IF THE COMMAND IS NOT IN THE COMMAND LIST REJECT IT
2785   0FBD             ;
2786   0FBD 21 D9 0F           LD    HL,MONMENU 
2787   0FC0 46                 LD    B,(HL) ;NUMBER OF COMMANDS
2788   0FC1 23                 INC   HL
2789   0FC2 BE          START4: CP   (HL)      ;IN THE LIST?
2790   0FC3 28 05              JR    Z,START5    ;OK DO IT
2791   0FC5 23                 INC   HL
2792   0FC6 10 FA              DJNZ  START4      ;KEEP LOOKING
2793   0FC8 18 F0              JR    START3
2794   0FCA CD 2C 10    START5: CALL  OUTCH       ;ECHO 
2795   0FCD 21 D9 0F           LD    HL,MONMENU  ;USE THE MENU HANDLER 
2796   0FD0 CD AD 04           CALL  MENU        ;KEY IN A, EXECUTE MENU
2797   0FD3             ;      
2798   0FD3             ; THE MENU FUNCTION CALL LEAVES THE RETURN ADDRESS OF THE MENU CALL
2799   0FD3             ; ON THE STACK SO ANY CALLED SUBROUTINES CAN COME BACK HERE WITH A RET.
2800   0FD3             ;           
2801   0FD3 CD 25 10    WARM:   CALL  TXCRLF     ;START ON A NEW LINE
2802   0FD6 C3 B5 0F           JP    START2
2803   0FD9             ;
2804   0FD9             ; SCBUG MONITOR COMMANDS
2805   0FD9             ;
2806   0FD9 07          MONMENU:    .DB 7
2807   0FDA 4448544D4749            .DB 'D','H','T','M','G','I','X'
2807   0FE0 58
2808   0FE1             
2809   0FE1 01115B106810            .DW DSPLAY,HELP,SSTOGL,MODIFY
2809   0FE7 7110
2810   0FE9 3810C410DD10            .DW GOJUMP,INTHEX,EXIT
2811   0FEF             ;-----------------------------
2812   0FEF             ; GET A BYTE FROM THE TERMINAL
2813   0FEF             ;-----------------------------
2814   0FEF CD 32 10    GETCHR: CALL  INCH
2815   0FF2 FE 1B              CP    ESC
2816   0FF4 28 27              JR    Z,GETOUT
2817   0FF6 47                 LD    B,A                ;SAVE TO ECHO      
2818   0FF7 CD E6 10           CALL  ASC2HEX
2819   0FFA 30 F3              JR    NC,GETCHR          ;REJECT NON HEX CHARS    
2820   0FFC 21 B2 FF           LD    HL,DATA
2821   0FFF 77                 LD    (HL),A 
2822   1000 78                 LD    A,B         
2823   1001 CD 2C 10           CALL  OUTCH             ;ECHO VALID HEX
2824   1004                    
2825   1004 CD 32 10    GETNYB: CALL  INCH
2826   1007 FE 1B              CP    ESC
2827   1009 28 12              JR    Z,GETOUT
2828   100B 47                 LD    B,A               ;SAVE TO ECHO
2829   100C CD E6 10           CALL  ASC2HEX
2830   100F 30 F3              JR    NC,GETNYB         ;REJECT NON HEX CHARS
2831   1011 ED 6F              RLD
2832   1013 78                 LD    A,B
2833   1014 CD 2C 10           CALL  OUTCH             ;ECHO VALID HEX
2834   1017 7E                 LD    A,(HL)
2835   1018 CD 1D 10           CALL  GETOUT            ;MAKE SURE WE CLEAR THE CARRY BY SETTING IT,
2836   101B 3F                 CCF                    ;AND THEN COMPLEMENTING IT
2837   101C C9                 RET   
2838   101D 37          GETOUT: SCF                    ;SET THE CARRY FLAG TO EXIT BACK TO MENU
2839   101E C9                 RET
2840   101F             ;---------------
2841   101F             ; OUTPUT A SPACE
2842   101F             ;---------------
2843   101F 3E 20       OUTSP:  LD    A,20H
2844   1021 CD 2C 10           CALL  OUTCH
2845   1024 C9                 RET
2846   1025             ;-------------      
2847   1025             ; OUTPUT CRLF
2848   1025             ;------------
2849   1025 3E 0D       TXCRLF: LD   A,CR
2850   1027 CD 2C 10           CALL OUTCH   
2851   102A 3E 0A              LD   A,LF
2852   102C             ;-----------------------------------
2853   102C             ; OUTPUT A CHARACTER TO THE TERMINAL
2854   102C             ;-----------------------------------       
2855   102C DD 2A AA FF OUTCH:  LD   IX,(PUTCH)
2856   1030 DD E9              JP   (IX)
2857   1032             ;------------------------------------
2858   1032             ; INPUT A CHARACTER FROM THE TERMINAL
2859   1032             ;------------------------------------
2860   1032 DD 2A AC FF INCH:  LD   IX,(GETCH)
2861   1036 DD E9             JP   (IX)
2862   1038             ;------------------------------
2863   1038             ; GO <ADDR>
2864   1038             ; TRANSFERS EXECUTION TO <ADDR>
2865   1038             ;------------------------------
2866   1038 CD 1F 10    GOJUMP: CALL  OUTSP       
2867   103B CD EF 0F           CALL  GETCHR      ;GET ADDRESS HIGH BYTE
2868   103E D8                 RET   C
2869   103F 32 B1 FF           LD    (ADDR+1),A  ;SAVE ADDRESS HIGH
2870   1042 CD EF 0F           CALL  GETCHR      ;GET ADDRESS LOW BYTE
2871   1045 D8                 RET   C
2872   1046 32 B0 FF           LD    (ADDR),A    ;SAVE ADDRESS LOW 
2873   1049             ;
2874   1049             ; WAIT FOR A CR OR ESC
2875   1049             ;       
2876   1049 CD 32 10    GOJMP1: CALL  INCH
2877   104C FE 1B              CP    ESC         ;ESC KEY?
2878   104E C8                 RET   Z
2879   104F FE 0D              CP    CR
2880   1051 20 F6              JR    NZ,GOJMP1
2881   1053 CD 25 10           CALL  TXCRLF
2882   1056 E1                 POP   HL          ;POP THE UNUSED MENU RETURN ADDRESS FROM THE STACK
2883   1057 2A B0 FF           LD    HL,(ADDR)
2884   105A E9                 JP    (HL)        ;GOOD LUCK WITH THAT!
2885   105B             ;---------------------
2886   105B             ; DISPLAY COMMAND HELP
2887   105B             ;---------------------
2888   105B 21 40 13    HELP:   LD   HL,COMANDS
2889   105E CD C1 11           CALL SNDMSG
2890   1061 21 A9 13           LD   HL,COMANDS1
2891   1064 CD C1 11           CALL SNDMSG
2892   1067 C9                 RET
2893   1068             ;-----------------------------------------------
2894   1068             ; T COMMAND TOGGLE SINGLE STEPPER (IF INSTALLED)
2895   1068             ;-----------------------------------------------
2896   1068             ; CAN'T TELL IF THE SINGLE STEPPER IS ON OR OFF
2897   1068             ; SO WE WILL JUST TOGGLE THE FLIP FLOP.
2898   1068             ;
2899   1068 21 DD 12    SSTOGL: LD   HL,TOGGLE
2900   106B CD C1 11           CALL  SNDMSG
2901   106E             #IFDEF TEC-1F
2902   106E D3 60               OUT	(PORT60),A	    ;TOGGLE HARDWARE LATCH
2903   1070~            #ELSE
2904   1070~                    OUT	(IO7),A	        ;TOGGLE HARDWARE LATCH
2905   1070             #ENDIF
2906   1070 C9                 RET
2907   1071             ;----------------------------
2908   1071             ; M DISPLAY AND MODIFY MEMORY
2909   1071             ;----------------------------
2910   1071 CD 1F 10    MODIFY: CALL  OUTSP
2911   1074             ;
2912   1074             ;GET THE ADDRESS        
2913   1074             ;
2914   1074 CD EF 0F           CALL  GETCHR 
2915   1077 D8                 RET   C        
2916   1078 32 B1 FF           LD    (ADDR+1),A  ;SAVE ADDRESS HIGH
2917   107B CD EF 0F           CALL  GETCHR
2918   107E D8                 RET   C
2919   107F 32 B0 FF           LD    (ADDR),A    ;SAVE ADDRESS LOW 
2920   1082             ;
2921   1082             ; DISPLAY ON A NEW LINE
2922   1082             ;       
2923   1082 CD 25 10    MDIFY1: CALL  TXCRLF       
2924   1085 ED 5B B0 FF        LD    DE,(ADDR)    
2925   1089 21 00 FE           LD    HL,MSGBUF   
2926   108C CD 93 11           CALL  WRDASC      ;CONVERT ADDRESS IN DE TO ASCII
2927   108F 21 00 FE           LD    HL,MSGBUF
2928   1092 CD 87 11           CALL  WRDOUT      ;OUTPUT THE ADDRESS
2929   1095 CD 1F 10           CALL  OUTSP    
2930   1098             ;      
2931   1098             ;GET THE DATA AT THE ADDRESS        
2932   1098             ;
2933   1098 2A B0 FF            LD   HL,(ADDR)       
2934   109B 7E                  LD   A,(HL)
2935   109C             ;
2936   109C             ; DISPLAY THE DATA
2937   109C             ;        
2938   109C 21 00 FE           LD    HL,MSGBUF
2939   109F CD 98 11           CALL  BYTASC     ;CONVERT THE DATA BYTE IN A TO ASCII
2940   10A2 21 00 FE           LD    HL,MSGBUF
2941   10A5 CD 8A 11           CALL  BYTOUT      ;OUTPUT THE BYTE
2942   10A8 CD 1F 10           CALL  OUTSP
2943   10AB             ;
2944   10AB             ; GET NEW DATA,EXIT OR CONTINUE
2945   10AB             ;
2946   10AB CD EF 0F           CALL  GETCHR
2947   10AE D8                 RET   C
2948   10AF 47                 LD    B,A         ;SAVE IT FOR LATER
2949   10B0 2A B0 FF           LD    HL,(ADDR)
2950   10B3 77                 LD    (HL),A      ;PUT THE BYTE AT THE CURRENT ADDRESS
2951   10B4 78                 LD    A,B
2952   10B5 BE                 CP    (HL)
2953   10B6 28 05              JR    Z,MDIFY2
2954   10B8 3E 3F              LD    A,'?'
2955   10BA CD 2C 10           CALL  OUTCH       ;NOT THE SAME DATA, PROBABLY NO RAM THERE      
2956   10BD             ;
2957   10BD             ; INCREMENT THE ADDRESS
2958   10BD             ;
2959   10BD 23          MDIFY2: INC   HL
2960   10BE 22 B0 FF           LD    (ADDR),HL
2961   10C1 C3 82 10           JP    MDIFY1      
2962   10C4             ;-----------------------
2963   10C4             ; RECEIVE INTEL HEX FILE
2964   10C4             ;-----------------------       
2965   10C4 21 F4 12    INTHEX: LD    HL,TXFILE
2966   10C7 CD C1 11           CALL  SNDMSG      ;SEND FILE
2967   10CA CD CC 07           CALL  INTELH
2968   10CD 20 07              JR    NZ,ITHEX1      
2969   10CF 21 0D 13           LD    HL,FILEOK
2970   10D2 CD C1 11           CALL  SNDMSG      ;GOT FILE OK
2971   10D5 C9                 RET
2972   10D6 21 22 13    ITHEX1: LD    HL,CSUMERR
2973   10D9 CD C1 11           CALL  SNDMSG      ;CHECKSUM ERROR
2974   10DC C9                 RET    
2975   10DD             ;------------------------
2976   10DD             ; EXIT BACK TO SC MONITOR
2977   10DD             ;------------------------       
2978   10DD 21 35 13    EXIT:   LD    HL,BYE
2979   10E0 CD C1 11           CALL  SNDMSG       
2980   10E3 C3 9B 02           JP    MAIN      ;STACK IS RESET TO TOP OF RAM IN MAIN
2981   10E6             ;----------------------------------------
2982   10E6             ; CONVERT ASCII CHARACTER INTO HEX NYBBLE
2983   10E6             ;----------------------------------------
2984   10E6             ; THIS ROUTINE IS FOR MASKING OUT KEYBOARD
2985   10E6             ; ENTRY OTHER THAN HEXADECIMAL KEYS
2986   10E6             ;
2987   10E6             ;CONVERTS ASCII 0-9,A-F INTO HEX LSN
2988   10E6             ;ENTRY : A= ASCII 0-9,A-F
2989   10E6             ;EXIT  : CARRY =  1
2990   10E6             ;          A= HEX 0-F IN LSN    
2991   10E6             ;      : CARRY = 0
2992   10E6             ;          A= OUT OF RANGE CHARACTER & 7FH
2993   10E6             ; A AND F REGISTERS MODIFIED
2994   10E6             ;
2995   10E6 E6 7F       ASC2HEX: AND   7FH        ;STRIP OUT PARITY
2996   10E8 FE 30              CP    30H
2997   10EA 38 12              JR    C,AC2HEX3    ;LESS THAN 0
2998   10EC FE 3A              CP    3AH
2999   10EE 30 02              JR    NC,AC2HEX2   ;MORE THAN 9
3000   10F0 37          AC2HEX1: SCF               ;SET THE CARRY - IS HEX
3001   10F1 C9                 RET
3002   10F2             ;     
3003   10F2 FE 41       AC2HEX2: CP    41H
3004   10F4 38 08              JR    C,AC2HEX3    ;LESS THAN A
3005   10F6 FE 47              CP    47H
3006   10F8 30 04              JR    NC,AC2HEX3   ;MORE THAN F
3007   10FA D6 07              SUB   07H        ;CONVERT TO NYBBLE
3008   10FC 18 F2              JR    AC2HEX1  
3009   10FE E6 FF       AC2HEX3: AND   0FFH        ;RESET THE CARRY - NOT HEX
3010   1100 C9                 RET
3011   1101             ;--------------------------
3012   1101             ; D DISPLAY MEMORY LOCATION
3013   1101             ;--------------------------
3014   1101 CD 1F 10    DSPLAY: CALL  OUTSP       ;A SPACE
3015   1104 CD EF 0F           CALL  GETCHR
3016   1107 D8                 RET   C         
3017   1108 32 B1 FF           LD    (ADDR+1),A  ;SAVE ADDRESS HIGH
3018   110B CD EF 0F           CALL  GETCHR
3019   110E D8                 RET   C
3020   110F 32 B0 FF           LD    (ADDR),A    ;SAVE ADDRESS LOW 
3021   1112             ;
3022   1112             ; WAIT FOR CR OR ESC
3023   1112             ;
3024   1112 CD 32 10    DPLAY1: CALL  INCH
3025   1115 FE 1B              CP    ESC
3026   1117 C8                 RET   Z
3027   1118 FE 0D              CP    CR
3028   111A 20 F6              JR    NZ,DPLAY1          
3029   111C CD 25 10           CALL  TXCRLF      ;NEWLINE
3030   111F             ;
3031   111F             ; DISPLAY THE LINE
3032   111F             ;
3033   111F CD 34 11    DPLAY2: CALL  DPLINE
3034   1122 ED 53 B0 FF        LD    (ADDR),DE   ;SAVE THE NEW ADDRESS
3035   1126             ;
3036   1126             ; DISPLAY MORE LINES OR EXIT
3037   1126             ;       
3038   1126 CD 32 10    DPLAY3: CALL  INCH
3039   1129 38 FB              JR    C,DPLAY3   
3040   112B FE 20              CP    20H        ;SPACE DISPLAYS THE NEXT LINE
3041   112D 28 F0              JR    Z,DPLAY2
3042   112F FE 1B              CP    ESC         ;ESC EXITS
3043   1131 20 F3              JR    NZ,DPLAY3     
3044   1133 C9                 RET   
3045   1134             ;-------------------------
3046   1134             ; DISPLAY A LINE OF MEMORY
3047   1134             ;-------------------------      
3048   1134 ED 5B B0 FF DPLINE: LD    DE,(ADDR)   ;ADDRESS TO BE DISPLAYED
3049   1138 21 00 FE           LD    HL,MSGBUF   ;HL POINTS TO WHERE THE OUTPUT STRING GOES
3050   113B             ;
3051   113B             ; DISPLAY THE ADDRESS
3052   113B             ;         
3053   113B CD 93 11           CALL  WRDASC     ;CONVERT ADDRESS IN DE TO ASCII
3054   113E CD 77 11           CALL  SPCBUF        
3055   1141             ;
3056   1141             ; DISPLAY 16 BYTES
3057   1141             ;
3058   1141 06 10              LD    B,16
3059   1143 1A          DLINE1: LD    A,(DE)
3060   1144 CD 98 11           CALL  BYTASC
3061   1147 CD 77 11           CALL  SPCBUF
3062   114A 13                 INC   DE        
3063   114B 10 F6              DJNZ  DLINE1
3064   114D CD 77 11           CALL  SPCBUF
3065   1150             ;
3066   1150             ; NOW DISPLAY THE ASCII CHARACTER
3067   1150             ; IF YOU ARE DISPLAYING NON-MEMORY AREAS THE BYTES READ AND THE ASCII COULD
3068   1150             ; BE DIFFERENT BETWEEN THE TWO PASSES!
3069   1150             ;
3070   1150 ED 5B B0 FF        LD    DE,(ADDR)    
3071   1154 06 10              LD    B,16
3072   1156 1A          DLINE2: LD    A,(DE)   
3073   1157 FE 20              CP    20H
3074   1159 38 07              JR    C,DOT
3075   115B FE 7F              CP    7FH
3076   115D 30 03              JR    NC,DOT
3077   115F C3 64 11           JP    NDOT
3078   1162 3E 2E       DOT:    LD    A,'.'
3079   1164 CD 79 11    NDOT:   CALL  INBUF
3080   1167 13                 INC   DE       
3081   1168 10 EC              DJNZ  DLINE2
3082   116A             ;         
3083   116A             ;TERMINATE AND DISPLAY STRING
3084   116A             ;       
3085   116A CD 7C 11           CALL  BCRLF
3086   116D 3E 00              LD    A,00H
3087   116F 77                 LD    (HL),A
3088   1170 21 00 FE           LD    HL,MSGBUF
3089   1173 CD C1 11           CALL  SNDMSG
3090   1176 C9                 RET
3091   1177             ;
3092   1177             ; PUT A SPACE IN THE BUFFER
3093   1177             ;
3094   1177 3E 20       SPCBUF: LD    A,20H
3095   1179 77          INBUF:  LD    (HL),A
3096   117A 23                 INC   HL
3097   117B C9                 RET
3098   117C             ;
3099   117C             ; PUT A CR LF IN THE BUFFER
3100   117C             ;        
3101   117C 3E 0D       BCRLF:  LD    A,CR  
3102   117E CD 79 11           CALL  INBUF
3103   1181 3E 0A              LD    A,LF
3104   1183 CD 79 11           CALL  INBUF
3105   1186 C9                 RET
3106   1187             ;----------------------     
3107   1187             ; SEND ASCII HEX VALUES        
3108   1187             ;----------------------
3109   1187             ;
3110   1187             ; OUTPUT THE 4 BYTE, WRDOUT
3111   1187             ; THE 2 BYTE, BYTOUT
3112   1187             ; OR THE SINGLE BYTE, NYBOUT
3113   1187             ; ASCII STRING AT HL TO THE SERIAL PORT
3114   1187             ;
3115   1187 CD 8A 11    WRDOUT: CALL  BYTOUT
3116   118A CD 8D 11    BYTOUT: CALL  NYBOUT
3117   118D 7E          NYBOUT: LD    A,(HL)
3118   118E CD 2C 10           CALL  OUTCH
3119   1191 23                 INC   HL
3120   1192 C9                 RET       
3121   1193             ;----------------
3122   1193             ;CONVERT TO ASCII 
3123   1193             ;----------------
3124   1193             ;
3125   1193             ; CONVERT A WORD,A BYTE OR A NYBBLE TO ASCII
3126   1193             ;
3127   1193             ;         ENTRY :  A = BINARY TO CONVERT
3128   1193             ;                  HL = CHARACTER BUFFER ADDRESS   
3129   1193             ;        EXIT   :  HL = POINTS TO LAST CHARACTER+1
3130   1193             ;   
3131   1193             ;        MODIFIES : DE
3132   1193             
3133   1193 7A          WRDASC: LD    A,D         ;CONVERT AND
3134   1194 CD 98 11           CALL  BYTASC      ;OUTPUT D
3135   1197 7B                 LD    A,E         ;THEN E
3136   1198             ;
3137   1198             ;CONVERT A BYTE TO ASCII 
3138   1198             ;
3139   1198 F5          BYTASC: PUSH  AF          ;SAVE A FOR SECOND NYBBLE 
3140   1199 0F                 RRCA              ;SHIFT HIGH NYBBLE ACROSS
3141   119A 0F                 RRCA
3142   119B 0F                 RRCA
3143   119C 0F                 RRCA
3144   119D CD A1 11           CALL NYBASC       ;CALL NYBBLE CONVERTER 
3145   11A0 F1                 POP AF            ;RESTORE LOW NYBBLE
3146   11A1             ;           
3147   11A1             ; CONVERT A NYBBLE TO ASCII
3148   11A1             ;
3149   11A1 E6 0F       NYBASC: AND   0FH         ;MASK OFF HIGH NYBBLE 
3150   11A3 C6 90              ADD   A,90H       ;CONVERT TO
3151   11A5 27                 DAA               ;ASCII
3152   11A6 CE 40              ADC   A,40H
3153   11A8 27                 DAA
3154   11A9             ;            
3155   11A9             ; SAVE IN STRING
3156   11A9             ;
3157   11A9 77          INSBUF: LD    (HL),A
3158   11AA 23                 INC   HL 
3159   11AB C9                 RET 
3160   11AC             ;------------------------------------------------------
3161   11AC             ; CONVERT A BYTE INTO A STRING OF ASCII ONES AND ZEROES
3162   11AC             ;------------------------------------------------------
3163   11AC             ;       
3164   11AC             ;        DESCRIPTION : CONVERTS A BYTE, STARTING AT BIT 7,
3165   11AC             ;                      INTO A STRING OF ASCII
3166   11AC             ;                      ONES AND ZEROES.
3167   11AC             ;
3168   11AC             ;           ENTRY :  A = BINARY TO CONVERT
3169   11AC             ;                   HL = CHARACTER BUFFER ADDRESS   
3170   11AC             ;           EXIT :  HL = POINTS TO LAST CHARACTER+1
3171   11AC             ;   
3172   11AC             ;        MODIFIES : NONE
3173   11AC             ;
3174   11AC             ;
3175   11AC C5          BITASC: PUSH  BC
3176   11AD 06 08              LD    B,08H       ;LOOK AT ALL 8 BITS
3177   11AF CB 7F       BTASC1: BIT   7,A         ;A 1 OR A 0?
3178   11B1 20 05              JR    NZ,BTASC3
3179   11B3 0E 30              LD    C,30H       ;IT'S A ZERO
3180   11B5 71          BTASC2: LD    (HL),C
3181   11B6 18 03              JR    BTASC4
3182   11B8                         
3183   11B8 0E 31       BTASC3: LD    C,31H       ;IT'S A ONE
3184   11BA 71                 LD    (HL),C
3185   11BB                         
3186   11BB 23          BTASC4: INC   HL
3187   11BC 17                 RLA
3188   11BD 10 F0              DJNZ  BTASC1      ;NEXT BIT
3189   11BF C1                 POP   BC
3190   11C0 C9                 RET
3191   11C1             ;-----------------------------------------
3192   11C1             ; SEND AN ASCII STRING OUT THE SERIAL PORT
3193   11C1             ;-----------------------------------------
3194   11C1             ; 
3195   11C1             ; SENDS A ZERO TERMINATED STRING OR 
3196   11C1             ; 128 CHARACTERS MAX. OUT THE SERIAL PORT
3197   11C1             ;
3198   11C1             ;      ENTRY : HL = POINTER TO 00H TERMINATED STRING
3199   11C1             ;      EXIT  : NONE
3200   11C1             ;
3201   11C1             ;       MODIFIES : A,B,C
3202   11C1             ;          
3203   11C1 06 80       SNDMSG: LD    B,128         ;128 CHARS MAX
3204   11C3 7E          SDMSG1: LD    A,(HL)        ;GET THE CHAR
3205   11C4 FE 00              CP    00H          ;ZERO TERMINATOR?
3206   11C6 28 06              JR    Z,SDMSG2      ;FOUND A ZERO TERMINATOR, EXIT  
3207   11C8 CD 2C 10           CALL  OUTCH         ;TRANSMIT THE CHAR
3208   11CB 23                 INC   HL
3209   11CC 10 F5              DJNZ  SDMSG1        ;128 CHARS MAX!    
3210   11CE C9          SDMSG2: RET
3211   11CF             ;----------------------
3212   11CF             ; SERIAL SINGLE STEPPER
3213   11CF             ;----------------------
3214   11CF E1          SSSTEP: POP   HL          ;GET HL BACK
3215   11D0 F5                 PUSH  AF          ;SAVE AF FOR LATER  
3216   11D1 22 E8 FF           LD    (TMPHL),HL
3217   11D4 ED 53 E6 FF        LD    (TMPDE),DE
3218   11D8 ED 43 E4 FF        LD    (TMPBC),BC
3219   11DC DD 22 EA FF        LD    (TMPIX),IX
3220   11E0 FD 22 EC FF        LD    (TMPIY),IY ;SAVE REGISTERS
3221   11E4 E1                 POP   HL          ;GET AF BACK
3222   11E5 22 E2 FF           LD    (TMPAF),HL ;SAVE AF
3223   11E8 E1                 POP   HL          ;GET PC RETURN ADDRESS
3224   11E9 22 E0 FF           LD    (TMPPC),HL ;SAVE PC
3225   11EC ED 73 EE FF        LD    (TMPSP),SP ;SAVE STACK POINTER
3226   11F0             ;            
3227   11F0             ;DISPLAY THE REGISTERS HEADING          
3228   11F0             ;          
3229   11F0 21 A8 12           LD    HL,REGS
3230   11F3 CD C1 11           CALL  SNDMSG
3231   11F6             ;
3232   11F6             ; DISPLAY THE REGISTERS
3233   11F6             ;            
3234   11F6 06 08              LD	 B,08H
3235   11F8 21 00 FE           LD    HL,MSGBUF
3236   11FB DD 21 E0 FF        LD    IX,TMPPC
3237   11FF DD 7E 01    SSTEP1: LD    A,(IX+1)
3238   1202 CD 98 11           CALL  BYTASC
3239   1205 DD 7E 00           LD    A,(IX+0)
3240   1208 CD 98 11           CALL  BYTASC
3241   120B DD 23              INC   IX
3242   120D DD 23              INC   IX
3243   120F 3E 20              LD    A,' '
3244   1211 77                 LD    (HL),A
3245   1212 23                 INC   HL
3246   1213 10 EA              DJNZ  SSTEP1       
3247   1215             ;
3248   1215             ; DISPLAY THE FLAGS 
3249   1215             ;          
3250   1215 3A E2 FF           LD    A,(TMPAF)  ;GET THE FLAGS AND      
3251   1218 CD AC 11           CALL  BITASC      ;SHOW THEM AS BITS 
3252   121B             
3253   121B CD 7C 11    SZCRLF: CALL  BCRLF
3254   121E 3E 00              LD    A,00H
3255   1220 77                 LD    (HL),A      ;TERMINATE THE STRING
3256   1221             ;        
3257   1221             ; DISPLAY THE REGISTERS
3258   1221             ;        
3259   1221 21 00 FE           LD    HL,MSGBUF
3260   1224 CD C1 11           CALL  SNDMSG
3261   1227             ;
3262   1227             ; SPACE KEY CONTINUES
3263   1227             ;
3264   1227 CD 32 10    SSTEP3: CALL  INCH
3265   122A 38 FB              JR    C,SSTEP3      
3266   122C FE 20              CP    20H        ;IS IT SPACE
3267   122E 28 0C              JR    Z,SSTEP4
3268   1230 FE 1B              CP    ESC         ;ESC QUITS
3269   1232 20 F3              JR    NZ,SSTEP3
3270   1234             ;       
3271   1234             ; RETURN TO MONITOR
3272   1234             ; 
3273   1234 ED 7B AE FF        LD    SP,(ISTACK) ;RESTORE THE STACK POINTER
3274   1238 FB                 EI                ;RE-ENABLE INTERRUPTS      
3275   1239 C3 D3 0F           JP    WARM        ;EXIT THE INTERRUPT ROUTINE
3276   123C             ;
3277   123C             ; RETURN TO PROGRAM
3278   123C             ;
3279   123C ED 7B EE FF SSTEP4: LD    SP,(TMPSP) ;PUT STACK POINTER BACK
3280   1240 2A E0 FF           LD    HL,(TMPPC) ;PUT RETURN
3281   1243 E5                 PUSH  HL          ;ADDRESS BACK ON STACK
3282   1244 2A E2 FF           LD    HL,(TMPAF)
3283   1247 E5                 PUSH  HL          ;SAVE AF REG FOR LATER
3284   1248 FD 2A EC FF        LD    IY,(TMPIY)
3285   124C DD 2A EA FF        LD    IX,(TMPIX)
3286   1250 ED 4B E4 FF        LD    BC,(TMPBC)
3287   1254 ED 5B E6 FF        LD    DE,(TMPDE) ;RESTORE REGISTERS
3288   1258 F1                 POP   AF          ;RESTORE AF
3289   1259 2A E8 FF           LD    HL,(TMPHL) ;RESTORE HL
3290   125C FB                 EI                ;RE-ENABLE INTERRUPTS
3291   125D C9                 RET               ;AND RETURN TO PROGRAM  
3292   125E             ;
3293   125E             ; STRING CONSTANTS
3294   125E             ;
3295   125E 0D 0A 00    CRLF:        .DB     CR,LF,00H
3296   1261 53434D20312ESIGNON:      .DB     "SCM 1.5 SERIAL MONITOR",CR,LF,
3296   1267 352053455249414C204D4F4E49544F520D0A
3297   1279 414343455054			 .DB	 "ACCEPTS ONLY UPPER CASE"
3297   127F 53204F4E4C592055505045522043415345
3298   1290 202D20482046			 .DB	 " - H FOR COMMAND LIST",
3298   1296 4F5220434F4D4D414E44204C495354
3299   12A5 0D 0A 00    			 .DB	 CR,LF,00H
3300   12A8 0D 0A       REGS:        .DB     CR,LF,
3301   12AA 504320202041			 .DB 	 "PC   AF   BC   DE   "
3301   12B0 4620202042432020204445202020
3302   12BE 484C20202049			 .DB	 "HL   IX   IY   SP   "
3302   12C4 5820202049592020205350202020
3303   12D2 535A2D482D56			.DB		 "SZ-H-VNC",
3303   12D8 4E43
3304   12DA 0D 0A 00    			 .DB	 CR,LF,00H
3305   12DD 0D0A53494E47TOGGLE:      .DB     CR,LF,"SINGLE STEP TOGGLE",CR,LF,00H
3305   12E3 4C45205354455020544F47474C450D0A00
3306   12F4 0D0A53454E44TXFILE:      .DB     CR,LF,"SEND INTEL HEX FILE...",00H
3306   12FA 20494E54454C204845582046494C452E2E2E00
3307   130D 0D0A46494C45FILEOK:      .DB     CR,LF,"FILE RECEIVED OK",CR,LF,00H
3307   1313 205245434549564544204F4B0D0A00
3308   1322 0D0A43484543CSUMERR:     .DB     CR,LF,"CHECKSUM ERROR",CR,LF,00H
3308   1328 4B53554D204552524F520D0A00
3309   1335 0D0A4259452EBYE:         .DB     CR,LF,"BYE...",CR,LF,00H
3309   133B 2E2E0D0A00
3310   1340             
3311   1340 0D0A44204141COMANDS:    .DB     CR,LF,"D AAAA    "
3311   1346 414120202020
3312   134C 444953504C41			.DB		"DISPLAY DATA AT ADDRESS AAAA"
3312   1352 59204441544120415420414444524553532041414141
3313   1368 0D0A54202020            .DB     CR,LF,"T         "
3313   136E 202020202020
3314   1374 544F47474C45			.DB		"TOGGLE SINGLE STEPPER"           
3314   137A 2053494E474C452053544550504552
3315   1389 0D0A4D204141            .DB     CR,LF,"M AAAA    "
3315   138F 414120202020
3316   1395 4D4F44494659			.DB		"MODIFY ADDRESS AAAA",00H
3316   139B 2041444452455353204141414100
3317   13A9                         
3318   13A9 0D0A47204141COMANDS1:    .DB     CR,LF,"G AAAA    GO FROM AAAA"     
3318   13AF 414120202020474F2046524F4D2041414141
3319   13C1 0D0A49202020            .DB     CR,LF,"I         DOWNLOAD INTEL HEX"
3319   13C7 202020202020444F574E4C4F414420494E54454C20484558
3320   13DF 0D0A58202020            .DB     CR,LF,"X         EXIT"
3320   13E5 20202020202045584954
3321   13EF 0D0A48202020            .DB     CR,LF,"H         "
3321   13F5 202020202020
3322   13FB 544849532048			.DB 	"THIS HELP MESSAGE",CR,LF,00H
3322   1401 454C50204D4553534147450D0A00
3323   140F             ;
3324   140F             ;VT100 TERMINAL COMMANDS FOR CLEAR SCREEN,CURSOR HOME
3325   140F             ;
3326   140F 1B5B481B5B32INITSZ:      .DB     27,"[H",27,"[2J",00H
3326   1415 4A00
3327   1417             
3328   1417             
3329   1417             
3330   1417             
3331   1417             
3332   1417             
3333   1417             
3334   1417             
3335   1417             
3336   1417             ;==========================================================
3337   1417             ;                GAMES
3338   1417             ;==========================================================
3339   1417             
3340   1417             ;SIMON Game written by Jim Robertson
3341   1417             ;-----------------------------------
3342   1417             ; The 4 LED Segments from the right represent keys 0,4,8,C.
3343   1417             ; The segments light up and the order they light up represents the
3344   1417             ; keys to press.
3345   1417             ;
3346   1417             ; Modified by B Chiha to auto populate random numbers at startup.
3347   1417             ;
3348   1417             
3349   1417             SIMON:
3350   1417             SETUP:               
3351   1417 CD FF 14                CALL    RANGEN      ;Set up random numbers from 9000 to 90FF
3352   141A ED 5F                   LD      A,R         ;Get random number for random table lookup
3353   141C 6F                      LD      L,A         ;at 90xx
3354   141D             START:
3355   141D 0E 01                   LD      C,01H
3356   141F CD A8 14                CALL    DELAY
3357   1422 26 90                   LD      H,90H
3358   1424             GAME:
3359   1424 41                      LD      B,C         ;Working counter
3360   1425 E5                      PUSH    HL
3361   1426             LOOP:
3362   1426 7E                      LD      A,(HL)      ;Get Random value
3363   1427 CD BC 14                CALL    SOUND
3364   142A 2C                      INC     L
3365   142B CD A8 14                CALL    DELAY       ;Call delay which shortens on each call
3366   142E 10 F6                   DJNZ    LOOP
3367   1430 E1                      POP     HL
3368   1431 41                      LD      B,C
3369   1432 E5                      PUSH    HL
3370   1433             PLAYER:
3371   1433 CD E4 14                CALL    KEYPRESS
3372   1436 20 FB                   JR      NZ,PLAYER   ;No key pressed
3373   1438 0F                      RRCA                ;Check for keys 0,4,8,C by shifting
3374   1439 0F                      RRCA                ;twice to the right..Clever!
3375   143A FE 04                   CP      04H         ;Compare with 4 to see if valid key
3376   143C 30 F5                   JR      NC,PLAYER
3377   143E E5                      PUSH    HL
3378   143F 21 F1 14                LD      HL,DSPTBL   ;Display Table
3379   1442 85                      ADD     A,L
3380   1443 6F                      LD      L,A
3381   1444 7E                      LD      A,(HL)      ;Get display value based on key press
3382   1445 E1                      POP     HL
3383   1446 BE                      CP      (HL)        ;Complare key pressed with value in lookup
3384   1447 20 13                   JR      NZ,ERROR
3385   1449 CD BC 14                CALL    SOUND
3386   144C 2C                      INC     L
3387   144D             KEYWAIT:
3388   144D                         ;CALL    KEYPRESS    ;Get another key
3389   144D                         ;JR      NZ,KEYWAIT   ;Loop until key released
3390   144D DB 40                   IN      A,(KEYBUF)     ;Check if key is pressed
3391   144F CB 77                   BIT     6,A
3392   1451 20 FA                   JR      NZ, KEYWAIT
3393   1453 10 DE                   DJNZ    PLAYER
3394   1455 E1                      POP     HL
3395   1456 CD A8 14                CALL    DELAY
3396   1459 0C                      INC     C
3397   145A 18 C8                   JR      GAME        ;Jump back to start of game
3398   145C             ERROR:
3399   145C 3E 30                   LD      A,30H       ;Incorrect answer
3400   145E CD BC 14                CALL    SOUND
3401   1461 41                      LD      B,C
3402   1462 AF                      XOR     A
3403   1463             HEXBCD:
3404   1463 3C                      INC     A
3405   1464 27                      DAA    
3406   1465 10 FC                   DJNZ    HEXBCD
3407   1467 3D                      DEC     A
3408   1468 27                      DAA
3409   1469 4F                      LD      C,A
3410   146A AF          SIMON_SCAN:       XOR     A           ;Multiplex
3411   146B D3 40                   OUT     (DISPLY),A
3412   146D 3E 04                   LD      A,04H
3413   146F D3 70                   OUT     (SCAN),A
3414   1471 79                      LD      A,C
3415   1472 CD 9D 14                CALL    BCDHEX
3416   1475 06 00                   LD      B,00H
3417   1477 10 FE       LOOP1:      DJNZ    LOOP1
3418   1479 AF                      XOR     A
3419   147A D3 40                   OUT     (DISPLY),A
3420   147C 3E 08                   LD      A,08H
3421   147E D3 70                   OUT     (SCAN),A
3422   1480 79                      LD      A,C
3423   1481 0F                      RRCA
3424   1482 0F                      RRCA
3425   1483 0F                      RRCA
3426   1484 0F                      RRCA
3427   1485 CD 9D 14                CALL    BCDHEX
3428   1488 06 00                   LD      B,00H
3429   148A 10 FE       LOOP2:      DJNZ    LOOP2
3430   148C CD E4 14                CALL    KEYPRESS
3431   148F 14                      INC     D
3432   1490 FE 12                   CP      12H        ;Check if GO pressed
3433   1492 20 D6                   JR      NZ,SIMON_SCAN    ;Keep scanning until GO pressed
3434   1494 6A                      LD      L,D        ;Put random number in L
3435   1495 AF                      XOR     A
3436   1496 D3 70                   OUT     (SCAN),A
3437   1498 CD BC 14                CALL    SOUND
3438   149B 18 80                   JR      START
3439   149D             BCDHEX:
3440   149D E6 0F                   AND     0FH        ;Mask high nibble
3441   149F 21 F5 14                LD      HL,SEGTBL
3442   14A2 85                      ADD     A,L
3443   14A3 6F                      LD      L,A
3444   14A4 7E                      LD      A,(HL)     ;Get Segment
3445   14A5 D3 40                   OUT     (DISPLY),A     ;Display number
3446   14A7 C9                      RET
3447   14A8             DELAY:
3448   14A8 11 00 90                LD      DE,9000H
3449   14AB 79                      LD      A,C        ;Frame count
3450   14AC 07                      RLCA
3451   14AD 07                      RLCA
3452   14AE             LOOP3:
3453   14AE 15                      DEC     D
3454   14AF 3D                      DEC     A
3455   14B0 20 FC                   JR      NZ,LOOP3
3456   14B2             LOOP4:
3457   14B2 1B                      DEC     DE
3458   14B3 7A                      LD      A,D
3459   14B4 B3                      OR      E
3460   14B5 20 FB                   JR      NZ,LOOP4
3461   14B7 3E 80                   LD      A,80H      ;ponto segment
3462   14B9 D3 40                   OUT     (DISPLY),A
3463   14BB C9                      RET
3464   14BC             SOUND:
3465   14BC E5                      PUSH    HL
3466   14BD D5                      PUSH    DE
3467   14BE C5                      PUSH    BC
3468   14BF 4F                      LD      C,A
3469   14C0 07                      RLCA
3470   14C1 C6 18                   ADD     A,18H
3471   14C3 21 E0 01                LD      HL,01E0H
3472   14C6 47                      LD      B,A
3473   14C7 79                      LD      A,C
3474   14C8 11 01 00                LD      DE,0001H
3475   14CB 48                      LD      C,B
3476   14CC E6 0F                   AND     0FH
3477   14CE             LOOP5:
3478   14CE D3 70                   OUT     (SCAN),A     ;Display value
3479   14D0 41                      LD      B,C
3480   14D1 10 FE       LOOP6:      DJNZ    LOOP6
3481   14D3 EE 80                   XOR     80H        ;Toggle speaker bit
3482   14D5 ED 52                   SBC     HL,DE
3483   14D7 20 F5                   JR      NZ,LOOP5
3484   14D9 C1                      POP     BC
3485   14DA D1                      POP     DE
3486   14DB E1                      POP     HL
3487   14DC 3E 80                   LD      A,80H      ;ponto segment
3488   14DE D3 40                   OUT     (DISPLY),A
3489   14E0 AF                      XOR     A
3490   14E1 D3 70                   OUT     (SCAN),A
3491   14E3 C9                      RET
3492   14E4             KEYPRESS:
3493   14E4 DB 40                   IN      A,(KEYBUF)     ;Check if key is pressed
3494   14E6 CB 77                   BIT     6,A
3495   14E8 C8                      RET     Z         ;No key pressed
3496   14E9 DB 40                   IN      A,(KEYBUF)     ;Get actual key
3497   14EB E6 1F                   AND     1FH        ;Mask upper bits
3498   14ED 5F                      LD      E,A
3499   14EE AF                      XOR     A          ;Clear flags
3500   14EF 7B                      LD      A,E
3501   14F0 C9                      RET
3502   14F1             
3503   14F1 08 04 02 01 DSPTBL:     .DB      08H,04H,02H,01H
3504   14F5 3F065B4F666DSEGTBL:     .DB      3FH,06H,5BH,4FH,66H,6DH,7DH,07H,7FH,67H
3504   14FB 7D077F67
3505   14FF             
3506   14FF             ;Here is the random number generator that puts 1,2,4 and 8 in memory
3507   14FF             ;between 9000 and 90FF.  Call this routine first
3508   14FF             RANGEN:
3509   14FF 06 00                   LD      B,00H
3510   1501 21 00 90                LD      HL,9000H
3511   1504 16 11                   LD      D,00010001B  ;(rotating 1 bits)
3512   1506             RG1:
3513   1506 ED 5F                   LD      A,R
3514   1508             RG2:
3515   1508 CB 02                   RLC     D
3516   150A 3D                      DEC     A
3517   150B 20 FB                   JR      NZ,RG2
3518   150D 7A                      LD      A,D
3519   150E E6 0F                   AND     0FH
3520   1510 77                      LD      (HL),A      ;Store randome number
3521   1511 23                      INC     HL
3522   1512 F5                      PUSH    AF          ;Waste time to move R on a bit
3523   1513 F1                      POP     AF         
3524   1514 10 F0                   DJNZ    RG1
3525   1516 C9                      RET
3526   1517             
3527   1517             	   .END
tasm: Number of errors = 0
