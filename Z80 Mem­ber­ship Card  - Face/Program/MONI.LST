0001   0000             ; ---------------------------------------------------------
0002   0000             ;   Z80 Mini  -  inicio 01/2022
0003   0000             ;   Diego Cruz - github.com/diego123cruz
0004   0000             ;
0005   0000             ;   Hardware baseado em: http://www.sunrise-ev.com/z80.htm
0006   0000             ;   Software próprio - em construção
0007   0000             ; ---------------------------------------------------------
0008   0000             ;   Z80@4Mhz
0009   0000             ;   ROM 32k - 28C256
0010   0000             ;   RAM 32k - 65256
0011   0000             ;   Display 7 segmentos 8 digitos
0012   0000             ;   Teclado 16 teclas + Fn (Tecla de função? ou outra coisa?)
0013   0000             ;   Entrada 40h
0014   0000             ;   Saida 40h
0015   0000             ;
0016   0000             ;
0017   0000             ; ---------------------------------------------------------
0018   0000             ;   Display 7 Segmentos - In(Port40) AND 00000111b
0019   0000             ; ---------------------------------------------------------
0020   0000             ;
0021   0000             ;   ------------------------------------------------
0022   0000             ;   | 00h | 01h | 02h | 03h | 04h | 05h | 06h | 07h |
0023   0000             ;   ------------------------------------------------
0024   0000             ;
0025   0000             ;               A(0)
0026   0000             ;            ---------
0027   0000             ;           |         |
0028   0000             ;      F(5) |         | B(1)
0029   0000             ;           |   G(6)  |
0030   0000             ;            ---------
0031   0000             ;           |         |
0032   0000             ;      E(4) |         | C(2)
0033   0000             ;           |         |
0034   0000             ;            ---------         Ponto(7)
0035   0000             ;               D(3) 
0036   0000             ;
0037   0000             ;
0038   0000             ;
0039   0000             ;
0040   0000             ;
0041   0000             ; ---------------------------------------------------------
0042   0000             ; Teclado 
0043   0000             ; ---------------------------------------------------------
0044   0000             ;   
0045   0000             ;   Keys:        
0046   0000             ;       Fn - In(Port40) AND 00010000b - pulldown
0047   0000             ;       0 - In(Port40) AND 00000111b
0048   0000             ;
0049   0000             ;
0050   0000             ;
0051   0000             ;
0052   0000             
0053   0000             
0054   0000             ; ---------------------------------------------------------
0055   0000             ; Constantes
0056   0000             ; ---------------------------------------------------------
0057   0000             
0058   0000             Port40        .equ    $40
0059   0000             PortC0        .equ    $C0
0060   0000             START_RAM     .equ    $8000
0061   0000             STACK         .equ    $FF00  
0062   0000             CKEY_TIMEOUT  .equ    100  ; 100ms +-
0063   0000             
0064   0000             ; BAUD RATE CONSTANTS
0065   0000             B300:	.EQU	0220H	;300 BAUD
0066   0000             B1200:	.EQU	0080H	;1200 BAUD
0067   0000             B2400:	.EQU	003FH	;2400 BAUD
0068   0000             B4800:	.EQU	001BH	;4800 BAUD - Default
0069   0000             B9600:	.EQU	000BH	;9600 BAUD
0070   0000             
0071   0000             SERIAL_RX_PORT:          .EQU $C0             ; Serial RX port - bit7
0072   0000             SERIAL_TX_PORT:          .EQU $C0             ; Serial TX Port - bit6
0073   0000             
0074   0000             ; ---------------------------------------------------------
0075   0000             ; RAM MAP - Monitor | $FF00 - $FFFF
0076   0000             ; ---------------------------------------------------------
0077   0000             ; Cada digito fica em um ponto da memoria RAM
0078   0000             DIG_0       .equ    $FF00   ;(1) endereço do digito 0 na memoria RAM
0079   0000             DIG_1       .equ    $FF01   ;(1) endereço do digito 1 na memoria RAM
0080   0000             DIG_2       .equ    $FF02   ;(1) endereço do digito 2 na memoria RAM
0081   0000             DIG_3       .equ    $FF03   ;(1) endereço do digito 3 na memoria RAM
0082   0000             DIG_4       .equ    $FF04   ;(1) endereço do digito 4 na memoria RAM
0083   0000             DIG_5       .equ    $FF05   ;(1) endereço do digito 5 na memoria RAM
0084   0000             DIG_6       .equ    $FF06   ;(1) endereço do digito 6 na memoria RAM
0085   0000             DIG_7       .equ    $FF07   ;(1) endereço do digito 7 na memoria RAM
0086   0000             KEY_PRESS   .equ    $FF08   ;(1) key atual
0087   0000             INPUT       .equ    $FF09   ;(1) temp input from int
0088   0000             TMP_KEY     .equ    $FF0A   ;(1) tmp key
0089   0000             KEY_TIMEOUT .equ    $FF0B   ;(1) tempo para retornar a tecla, CKEY_TIMEOUT
0090   0000             SHOW_DIG    .equ    $FF0C   ;(1) Atual digito no display
0091   0000             PC_RAM      .equ    $FF0D   ;(2) save pc to user start $8000
0092   0000             
0093   0000             SYSMODE     .equ    $FF0F   ;(1) System mode. 
0094   0000                                         ; 0 - User Mode
0095   0000                                         ; 1 - Monitor
0096   0000                                         ; 2 - Examine Memoria
0097   0000                                         ; 3 - Change Data(Memory)
0098   0000                                         ; 4 - Show register PC
0099   0000                                         ; 5 - Show register SP
0100   0000                                         ; 6 - Show register AF
0101   0000                                         ; 7 - Show register BC
0102   0000                                         ; 8 - Show register DE
0103   0000                                         ; 9 - Show register HL
0104   0000                                         ; A - Show register IX
0105   0000                                         ; B - Show register IY
0106   0000                                         ; C - Show register AF'
0107   0000                                         ; D - Show register BC'
0108   0000                                         ; E - Show register DE'
0109   0000                                         ; F - Show register HL'
0110   0000                                         ; 80 - Modify Any
0111   0000                                         ; 76 - HALT
0112   0000             TicCounter  .equ    $FF10   ;(2) TicCounter inc 1ms
0113   0000             EXM_COUNT   .equ    $FF12   ;(1) Count digits Examine function, 4 digits
0114   0000             MDF_COUNT   .equ    $FF13   ;(1) Count digits moDify function, 2 digits
0115   0000             USR_PC      .equ    $FF14   ;(2) PC 
0116   0000             USR_SP      .equ    $FF16   ;(2) SP
0117   0000             USR_HL      .equ    $FF18   ;(2) HL
0118   0000             USR_BC      .equ    $FF1A   ;(2) BC
0119   0000             USR_DE      .equ    $FF1C   ;(2) DE
0120   0000             USR_AF      .equ    $FF1E   ;(2) AF
0121   0000             USR_IX      .equ    $FF20   ;(2) IX
0122   0000             USR_IY      .equ    $FF22   ;(2) IY
0123   0000             USR_AFA     .equ    $FF24   ;(2) AF' (Aux)
0124   0000             USR_BCA     .equ    $FF26   ;(2) BC' (Aux)
0125   0000             USR_DEA     .equ    $FF28   ;(2) DE' (Aux)
0126   0000             USR_HLA     .equ    $FF2A   ;(2) HL' (Aux)
0127   0000             ; SP Temp   .equ    $FF2C
0128   0000             CPU_FLAGS   .equ    $FF2C   ;(1) Flags atual (AF ou AF') SYSMODE
0129   0000             INT_VEC     .equ    $FF2D   ;(2) vector int38
0130   0000             
0131   0000             ; Serial intel hex loader
0132   0000             BAUD	    .equ	$FF30	;(2) BAUD RATE
0133   0000             PUTCH       .equ    $FF32   ;(2) OUTPUT A CHARACTER TO SERIAL
0134   0000             GETCH       .equ    $FF34   ;(2) WAIT FOR A CHARACTER FROM SERIAL
0135   0000             
0136   0000             
0137   0000             ; Copy USER_DISPx to DIG_x WHEN USER_MODE
0138   0000             USER_DISP0  .equ    $FFD0   ; Mode User - Display Dig 0  - 01234567
0139   0000             USER_DISP1  .equ    $FFD1   ; Mode User - Display Dig 1  - 01234567
0140   0000             USER_DISP2  .equ    $FFD2   ; Mode User - Display Dig 2  - 01234567
0141   0000             USER_DISP3  .equ    $FFD3   ; Mode User - Display Dig 3  - 01234567
0142   0000             USER_DISP4  .equ    $FFD4   ; Mode User - Display Dig 4  - 01234567
0143   0000             USER_DISP5  .equ    $FFD5   ; Mode User - Display Dig 5  - 01234567
0144   0000             USER_DISP6  .equ    $FFD6   ; Mode User - Display Dig 6  - 01234567
0145   0000             USER_DISP7  .equ    $FFD7   ; Mode User - Display Dig 7  - 01234567
0146   0000             
0147   0000             LAST_SYS    .equ    $FFD8   ; (1) Last SYSMODE
0148   0000             ISR_MD_HL   .equ    $FFDC   ; (2) endereço do registrador para alterar
0149   0000             ISR_MD_TMP  .equ    $FFDE   ; (2) data register temp
0150   0000             
0151   0000             
0152   0000             ; =========================================================
0153   0000             ; Start ROM
0154   0000             ; =========================================================
0155   0000             .org    $0000
0156   0000 21 66 00        LD  HL, INT38
0157   0003 22 2D FF        LD  (INT_VEC), HL
0158   0006 C3 01 0C        JP  START
0159   0009             
0160   0009             
0161   0009             ; =========================================================
0162   0009             ; Int 38h - Monitor 
0163   0009             ; =========================================================
0164   0038             .org    $38
0165   0038 F3              DI
0166   0039 22 18 FF        LD (USR_HL), HL          ; Save HL
0167   003C 2A 2D FF        LD HL, (INT_VEC)
0168   003F E9              JP (HL)
0169   0040             
0170   0040             INT_ERROR:
0171   0040 F3              DI
0172   0041 F5              PUSH AF
0173   0042 E5              PUSH HL
0174   0043             
0175   0043 21 66 00        LD  HL, INT38
0176   0046 22 2D FF        LD  (INT_VEC), HL
0177   0049             
0178   0049 3E 99           LD A, $99
0179   004B 32 0F FF        LD (SYSMODE), A
0180   004E             
0181   004E E1              POP HL
0182   004F F1              POP AF
0183   0050                 
0184   0050 C3 43 0C        JP START_WARM
0185   0053             
0186   0053             INT_HALT:
0187   0053 F3              DI
0188   0054 F5              PUSH AF
0189   0055 E5              PUSH HL
0190   0056             
0191   0056 21 66 00        LD  HL, INT38
0192   0059 22 2D FF        LD  (INT_VEC), HL
0193   005C             
0194   005C 3E 76           LD A, $76
0195   005E 32 0F FF        LD (SYSMODE), A
0196   0061             
0197   0061 E1              POP HL
0198   0062 F1              POP AF
0199   0063                 
0200   0063 C3 43 0C        JP START_WARM
0201   0066             
0202   0066             
0203   0066             INT38:
0204   0066 ED 73 16 FF     LD (USR_SP), SP          ; Save SP
0205   006A                 ;LD (USR_HL), HL          ; Save HL
0206   006A E1              POP  HL                  ; Recupera PC da stack
0207   006B 22 14 FF        LD (USR_PC), HL          ; Save PC
0208   006E E5              PUSH HL                  ;
0209   006F 21 2C FF        LD HL, $FF2C             ; Carrega Temp SP to HL
0210   0072 F9              LD SP, HL                ; Set temp HL
0211   0073 D9              EXX                      ; Inverte HL e HL', DE.... BC....
0212   0074 E5              PUSH  HL                 ; Save HL'
0213   0075 D5              PUSH  DE                 ; Save DE'                
0214   0076 C5              PUSH  BC                 ; Save BC'
0215   0077 08              EX    AF, AF'
0216   0078 F5              PUSH  AF                 ; Save AF'
0217   0079 08              EX    AF, AF'
0218   007A D9              EXX                      ; Troca HL' e HL,, DE... BC...
0219   007B FD E5           PUSH  IY                 ; Save IY
0220   007D DD E5           PUSH  IX                 ; Save IX
0221   007F F5              PUSH  AF                 ; Save AF
0222   0080 D5              PUSH  DE                 ; Save DE
0223   0081 C5              PUSH  BC                 ; Save BC
0224   0082 2A 16 FF        LD HL, (USR_SP)          ; Recupera SP
0225   0085 F9              LD SP, HL                ; Devolve SP original
0226   0086             
0227   0086                 ; check HALT
0228   0086 2A 16 FF        LD HL, (USR_SP)
0229   0089 CD 49 0C        CALL LD_HL_HL
0230   008C 2B              DEC HL
0231   008D 7E              LD  A, (HL)
0232   008E FE 76           CP  $76    ; halt code
0233   0090 CA 96 00        JP  Z, C_HALT
0234   0093 C3 CA 00        jp SKIP_CHK
0235   0096             
0236   0096             C_HALT:
0237   0096 21 53 00        LD HL, INT_HALT
0238   0099 22 2D FF        LD (INT_VEC), HL
0239   009C             
0240   009C 3E 76           LD A, $76
0241   009E 32 0F FF        LD  (SYSMODE), A
0242   00A1             
0243   00A1 E1              POP HL                   ; Troca o PC
0244   00A2 2A 14 FF        LD HL, (USR_PC)          ; Recupera PC
0245   00A5 E5              PUSH HL                  ; Devolve PC to stack
0246   00A6             
0247   00A6 2A 24 FF        LD HL, (USR_AFA)          ; Load AF' in HL
0248   00A9 E5              PUSH  HL                 ; Push AF'
0249   00AA F1              POP AF                   ; Recovery AF'
0250   00AB 08              EX AF, AF'
0251   00AC             
0252   00AC 2A 2A FF        LD HL, (USR_HLA)          ; Recovery HL'
0253   00AF ED 5B 28 FF     LD DE, (USR_DEA)          ; Recovery DE'
0254   00B3 ED 4B 26 FF     LD BC, (USR_BCA)          ; Recovery BC'
0255   00B7 D9              EXX
0256   00B8             
0257   00B8 2A 1E FF        LD HL, (USR_AF)          ; Load AF in HL
0258   00BB E5              PUSH  HL                 ; Push AF
0259   00BC F1              POP AF                   ; Recovery AF
0260   00BD             
0261   00BD 2A 18 FF        LD HL, (USR_HL)          ; Recovery HL
0262   00C0 ED 5B 1C FF     LD DE, (USR_DE)          ; Recovery DE
0263   00C4 ED 4B 1A FF     LD BC, (USR_BC)          ; Recovery BC
0264   00C8             
0265   00C8 FB              EI
0266   00C9 76              HALT                     ; aguarda proxima int
0267   00CA             
0268   00CA             SKIP_CHK:
0269   00CA                 ; TicCounter
0270   00CA 2A 10 FF        LD  HL, (TicCounter)     ; Increment 1ms, used to DELAY_A
0271   00CD 23              INC  HL
0272   00CE 22 10 FF        LD  (TicCounter), HL
0273   00D1             
0274   00D1                 ; Timeout Key
0275   00D1 3A 0B FF         LD A, (KEY_TIMEOUT)
0276   00D4 FE 00            CP 0
0277   00D6 CA DD 00         JP Z, ENTER_MAIN
0278   00D9 3D               DEC A
0279   00DA 32 0B FF         LD (KEY_TIMEOUT), A
0280   00DD             
0281   00DD                 ; Main
0282   00DD             ENTER_MAIN:
0283   00DD CD 20 01        CALL UPDATE_DISPLAYS
0284   00E0 CD 3C 01        CALL UPDATE_KEYS
0285   00E3 CD 8B 01        CALL UPDATE_FLAGS
0286   00E6             
0287   00E6                 ; Show atual digit
0288   00E6 3A 0C FF        LD  A, (SHOW_DIG)
0289   00E9 D3 40           OUT (Port40), A
0290   00EB             
0291   00EB                 ;CALL    TRATAMENTO_INT38H; Get key, update display   
0292   00EB C3 3B 02        JP      SYS_MAIN         ; Execute function monitor
0293   00EE             
0294   00EE             EXIT_SYS:
0295   00EE E1              POP HL                   ; Troca o PC
0296   00EF 2A 14 FF        LD HL, (USR_PC)          ; Recupera PC
0297   00F2 E5              PUSH HL                  ; Devolve PC to stack
0298   00F3             
0299   00F3 2A 24 FF        LD HL, (USR_AFA)          ; Load AF' in HL
0300   00F6 E5              PUSH  HL                 ; Push AF'
0301   00F7 F1              POP AF                   ; Recovery AF'
0302   00F8 08              EX AF, AF'
0303   00F9             
0304   00F9 2A 2A FF        LD HL, (USR_HLA)          ; Recovery HL'
0305   00FC ED 5B 28 FF     LD DE, (USR_DEA)          ; Recovery DE'
0306   0100 ED 4B 26 FF     LD BC, (USR_BCA)          ; Recovery BC'
0307   0104 D9              EXX
0308   0105             
0309   0105 DD 2A 20 FF     LD IX, (USR_IX)          ; Recovery IX
0310   0109 FD 2A 22 FF     LD IY, (USR_IY)          ; Recovery IY
0311   010D             
0312   010D 2A 1E FF        LD HL, (USR_AF)          ; Load AF in HL
0313   0110 E5              PUSH  HL                 ; Push AF
0314   0111 F1              POP AF                   ; Recovery AF
0315   0112             
0316   0112 2A 18 FF        LD HL, (USR_HL)          ; Recovery HL
0317   0115 ED 5B 1C FF     LD DE, (USR_DE)          ; Recovery DE
0318   0119 ED 4B 1A FF     LD BC, (USR_BC)          ; Recovery BC
0319   011D             
0320   011D FB              EI                       ; Enable interrupt
0321   011E ED 4D           RETI                     ; Return interrupt
0322   0120             
0323   0120             
0324   0120             ; =========================================================
0325   0120             ; Update display - Tratamento Int 38h
0326   0120             ; =========================================================
0327   0120             UPDATE_DISPLAYS:    
0328   0120 DB 40           IN    A, (Port40)
0329   0122 32 09 FF        LD    (INPUT), A
0330   0125 E6 07           AND   $07
0331   0127 FE 08           CP    $08
0332   0129 D2 3B 01        JP    NC, UPDATE_DISPLAYS_RET ; IF A > 7 RET
0333   012C 3C              INC   A
0334   012D FE 08           CP    $08
0335   012F C2 34 01        JP    NZ, UPDATE_DISPLAYS_OK
0336   0132 3E 00           LD    A, $00
0337   0134             UPDATE_DISPLAYS_OK:
0338   0134 26 FF           LD    H, $FF
0339   0136 6F              LD    L, A
0340   0137 7E              LD    A, (HL)
0341   0138 32 0C FF        LD   (SHOW_DIG), A
0342   013B             UPDATE_DISPLAYS_RET:
0343   013B C9              RET
0344   013C             
0345   013C             ; =========================================================
0346   013C             ; Update KEY - Tratamento Int 38h
0347   013C             ; =========================================================
0348   013C             UPDATE_KEYS:    
0349   013C DB 40           IN    A, (Port40)
0350   013E 32 09 FF        LD    (INPUT), A
0351   0141 E6 07           AND   $07
0352   0143 FE 08           CP    $08
0353   0145 D2 6E 01        JP    NC, UPDATE_KEY_RET ; IF A > 7 RET
0354   0148 3A 09 FF        LD  A,  (INPUT)
0355   014B CB 5F           BIT  3, A
0356   014D CA 6F 01        JP  Z, TRATAB3
0357   0150 3A 09 FF        LD  A,  (INPUT)
0358   0153 CB 67           BIT  4, A
0359   0155 CA 75 01        JP  Z, TRATAB4
0360   0158 C3 6E 01        JP  UPDATE_KEY_RET
0361   015B             UPDATE_KEY_GET:
0362   015B 32 09 FF        LD    (INPUT), A
0363   015E E6 07           AND   $07
0364   0160 01 00 00        LD    BC, 0
0365   0163 4F              LD    C, A
0366   0164 09              ADD   HL, BC
0367   0165 7E              LD    A, (HL)
0368   0166 32 08 FF        LD   (KEY_PRESS), A
0369   0169 3E 64           LD A, CKEY_TIMEOUT
0370   016B 32 0B FF        LD (KEY_TIMEOUT), A
0371   016E             UPDATE_KEY_RET:
0372   016E C9              RET
0373   016F             
0374   016F             TRATAB3:
0375   016F 21 7B 01        LD    HL, KEYSB3
0376   0172 C3 5B 01        JP  UPDATE_KEY_GET
0377   0175             
0378   0175             TRATAB4:
0379   0175 21 83 01        LD    HL, KEYSB4
0380   0178 C3 5B 01        JP  UPDATE_KEY_GET
0381   017B             
0382   017B 000104070F02KEYSB3 .db $00, $01, $04, $07, $0F, $02, $05, $08
0382   0181 0508
0383   0183 0E0306090D0CKEYSB4 .db $0E, $03, $06, $09, $0D, $0C, $0B, $0A
0383   0189 0B0A
0384   018B             
0385   018B             
0386   018B             ; =========================================================
0387   018B             ; Update Flags - Tratamento Int 38h
0388   018B             ; =========================================================
0389   018B             UPDATE_FLAGS:
0390   018B 3A 0F FF        LD    A, (SYSMODE)
0391   018E FE 06           CP    $06
0392   0190 CA 99 01        JP    Z, UPDATE_FLAGS_MAIN
0393   0193 FE 0C           CP    $0C
0394   0195 CA 99 01        JP    Z, UPDATE_FLAGS_MAIN
0395   0198             UPDATE_FLAGS_RET:
0396   0198 C9              RET
0397   0199             
0398   0199             UPDATE_FLAGS_MAIN:
0399   0199 3A 09 FF        LD    A, (INPUT)
0400   019C E6 07           AND   $07
0401   019E             
0402   019E FE 07           CP    $07
0403   01A0 CA C9 01        JP    Z, UPDATE_FLAG_S
0404   01A3 FE 00           CP    $00
0405   01A5 CA D5 01        JP    Z, UPDATE_FLAG_Z
0406   01A8 FE 01           CP    $01
0407   01AA CA E1 01        JP    Z, UPDATE_FLAG_X1
0408   01AD FE 02           CP    $02
0409   01AF CA ED 01        JP    Z, UPDATE_FLAG_H
0410   01B2 FE 03           CP    $03
0411   01B4 CA F9 01        JP    Z, UPDATE_FLAG_X2
0412   01B7 FE 04           CP    $04
0413   01B9 CA 05 02        JP    Z, UPDATE_FLAG_PV
0414   01BC FE 05           CP    $05
0415   01BE CA 11 02        JP    Z, UPDATE_FLAG_N
0416   01C1 FE 06           CP    $06
0417   01C3 CA 1D 02        JP    Z, UPDATE_FLAG_C
0418   01C6 C3 98 01        JP    UPDATE_FLAGS_RET
0419   01C9             
0420   01C9             UPDATE_FLAG_S:
0421   01C9 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0422   01CC 3A 2C FF        LD  A, (CPU_FLAGS)
0423   01CF CB 7F           BIT 7, A
0424   01D1 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0425   01D4 C9              RET
0426   01D5             
0427   01D5             UPDATE_FLAG_Z:
0428   01D5 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0429   01D8 3A 2C FF        LD  A, (CPU_FLAGS)
0430   01DB CB 77           BIT 6, A
0431   01DD CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0432   01E0 C9              RET
0433   01E1             
0434   01E1             UPDATE_FLAG_X1:
0435   01E1 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0436   01E4 3A 2C FF        LD  A, (CPU_FLAGS)
0437   01E7 CB 6F           BIT 5, A
0438   01E9 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0439   01EC C9              RET
0440   01ED             
0441   01ED             UPDATE_FLAG_H:
0442   01ED CD 29 02        CALL  SHOW_DIG_FLAG_ON
0443   01F0 3A 2C FF        LD  A, (CPU_FLAGS)
0444   01F3 CB 67           BIT 4, A
0445   01F5 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0446   01F8 C9              RET
0447   01F9             
0448   01F9             UPDATE_FLAG_X2:
0449   01F9 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0450   01FC 3A 2C FF        LD  A, (CPU_FLAGS)
0451   01FF CB 5F           BIT 3, A
0452   0201 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0453   0204 C9              RET
0454   0205             
0455   0205             UPDATE_FLAG_PV:
0456   0205 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0457   0208 3A 2C FF        LD  A, (CPU_FLAGS)
0458   020B CB 57           BIT 2, A
0459   020D CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0460   0210 C9              RET
0461   0211             
0462   0211             UPDATE_FLAG_N:
0463   0211 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0464   0214 3A 2C FF        LD  A, (CPU_FLAGS)
0465   0217 CB 4F           BIT 1, A
0466   0219 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0467   021C C9              RET
0468   021D             
0469   021D             UPDATE_FLAG_C:
0470   021D CD 29 02        CALL  SHOW_DIG_FLAG_ON
0471   0220 3A 2C FF        LD  A, (CPU_FLAGS)
0472   0223 CB 47           BIT 0, A
0473   0225 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0474   0228 C9              RET
0475   0229             
0476   0229             SHOW_DIG_FLAG_ON:
0477   0229 3A 0C FF        LD  A, (SHOW_DIG)
0478   022C F6 80           OR  $80
0479   022E 32 0C FF        LD  (SHOW_DIG), A
0480   0231 C9              RET
0481   0232             
0482   0232             SHOW_DIG_FLAG_OFF:
0483   0232 3A 0C FF        LD  A, (SHOW_DIG)
0484   0235 E6 7F           AND  $7F
0485   0237 32 0C FF        LD  (SHOW_DIG), A 
0486   023A C9              RET
0487   023B             
0488   023B             ; =========================================================
0489   023B             ; SYS MAIN
0490   023B             ; =========================================================
0491   023B             SYS_MAIN:
0492   023B 3A 0F FF        LD  A, (SYSMODE)
0493   023E FE 00           CP  $00                  ; User mode can back to monitor
0494   0240 CA 4D 08        JP  Z, USER_MODE        
0495   0243             
0496   0243 3A 0F FF        LD  A, (SYSMODE)
0497   0246 FE 01           CP  $01                  ; monitor
0498   0248 CA 63 08        JP  Z, MONITOR_MODE
0499   024B             
0500   024B 3A 0F FF        LD  A,  (SYSMODE)
0501   024E FE 02           CP  $02                  ; Examine RAM
0502   0250 CA D6 02        JP  Z, EXAMINE_RAM
0503   0253             
0504   0253 3A 0F FF        LD  A, (SYSMODE)
0505   0256 FE 03           CP  $03                  ; Modify Data (Memory)
0506   0258 CA 6F 03        JP  Z,  MODIFY_RAM
0507   025B             
0508   025B 3A 0F FF        LD  A, (SYSMODE)
0509   025E FE 04           CP  $04                  ; Show register PC
0510   0260 CA BE 03        JP  Z,  SHOW_REG_PC
0511   0263             
0512   0263 3A 0F FF        LD  A, (SYSMODE)
0513   0266 FE 05           CP  $05                  ; Show register SP
0514   0268 CA 11 04        JP  Z,  SHOW_REG_SP
0515   026B             
0516   026B 3A 0F FF        LD  A, (SYSMODE)
0517   026E FE 06           CP  $06                  ; Show register AF
0518   0270 CA 5C 04        JP  Z,  SHOW_REG_AF
0519   0273             
0520   0273 3A 0F FF        LD  A, (SYSMODE)
0521   0276 FE 07           CP  $07                  ; Show register BC
0522   0278 CA B6 04        JP  Z,  SHOW_REG_BC
0523   027B             
0524   027B 3A 0F FF        LD  A, (SYSMODE)
0525   027E FE 08           CP  $08                  ; Show register DE
0526   0280 CA 0C 05        JP  Z,  SHOW_REG_DE
0527   0283             
0528   0283 3A 0F FF        LD  A, (SYSMODE)
0529   0286 FE 09           CP  $09                  ; Show register HL
0530   0288 CA 62 05        JP  Z,  SHOW_REG_HL
0531   028B             
0532   028B 3A 0F FF        LD  A, (SYSMODE)
0533   028E FE 0A           CP  $0A                  ; Show register IX
0534   0290 CA B8 05        JP  Z,  SHOW_REG_IX
0535   0293             
0536   0293 3A 0F FF        LD  A, (SYSMODE)
0537   0296 FE 0B           CP  $0B                  ; Show register IY
0538   0298 CA 0E 06        JP  Z,  SHOW_REG_IY
0539   029B             
0540   029B 3A 0F FF        LD  A, (SYSMODE)
0541   029E FE 0C           CP  $0C                  ; Show register AF'
0542   02A0 CA 64 06        JP  Z,  SHOW_REG_AFaux
0543   02A3             
0544   02A3 3A 0F FF        LD  A, (SYSMODE)
0545   02A6 FE 0D           CP  $0D                  ; Show register BC'
0546   02A8 CA C3 06        JP  Z,  SHOW_REG_BCaux
0547   02AB             
0548   02AB 3A 0F FF        LD  A, (SYSMODE)
0549   02AE FE 0E           CP  $0E                  ; Show register DE'
0550   02B0 CA 1E 07        JP  Z,  SHOW_REG_DEaux
0551   02B3             
0552   02B3 3A 0F FF        LD  A, (SYSMODE)
0553   02B6 FE 0F           CP  $0F                  ; Show register HL'
0554   02B8 CA 79 07        JP  Z,  SHOW_REG_HLaux
0555   02BB             
0556   02BB             
0557   02BB 3A 0F FF        LD  A, (SYSMODE)        ; Show HALT
0558   02BE FE 76           CP  $76
0559   02C0 CA D4 07        JP  Z, SHOW_HALT
0560   02C3             
0561   02C3 3A 0F FF        LD  A, (SYSMODE)        ; Modify Any
0562   02C6 FE 80           CP  $80
0563   02C8 CA 0D 0A        JP  Z, MD_HL
0564   02CB             
0565   02CB             
0566   02CB 3A 0F FF        LD  A, (SYSMODE)        ; Show ERROR
0567   02CE FE 99           CP  $99
0568   02D0 CA 03 08        JP  Z, SHOW_ERROR
0569   02D3             
0570   02D3 C3 EE 00        JP  EXIT_SYS
0571   02D6             
0572   02D6             
0573   02D6             ; =========================================================
0574   02D6             ; Examine RAM Mode
0575   02D6             ; =========================================================
0576   02D6             EXAMINE_RAM:
0577   02D6 CD 32 08        CALL GET_KEY_A
0578   02D9 FE FF           CP  $FF
0579   02DB CA EE 00        JP  Z, EXIT_SYS
0580   02DE             
0581   02DE F5              PUSH  AF
0582   02DF F5              PUSH  AF
0583   02E0 3A 12 FF        LD  A, (EXM_COUNT)
0584   02E3 FE 03           CP  3
0585   02E5 CA 03 03        JP  Z, EXAMINE_KEY_POS_3
0586   02E8             
0587   02E8 3A 12 FF        LD  A, (EXM_COUNT)
0588   02EB FE 02           CP  2
0589   02ED CA 21 03        JP  Z, EXAMINE_KEY_POS_2
0590   02F0             
0591   02F0 3A 12 FF        LD  A, (EXM_COUNT)
0592   02F3 FE 01           CP  1
0593   02F5 CA 3B 03        JP  Z, EXAMINE_KEY_POS_1
0594   02F8             
0595   02F8 3A 12 FF        LD  A, (EXM_COUNT)
0596   02FB FE 00           CP  0
0597   02FD CA 5C 03        JP  Z, EXAMINE_KEY_POS_0
0598   0300             
0599   0300 C3 EE 00        JP  EXIT_SYS
0600   0303             
0601   0303             EXAMINE_KEY_POS_3:
0602   0303 F1              POP  AF
0603   0304 CB 07           RLC  A
0604   0306 CB 07           RLC  A
0605   0308 CB 07           RLC  A
0606   030A CB 07           RLC  A
0607   030C 67              LD  H, A
0608   030D 22 0D FF        LD  (PC_RAM), HL
0609   0310 F1              POP  AF
0610   0311 CD F2 0A        CALL GET_NUM_FROM_LOW
0611   0314 32 00 FF        LD  (DIG_0), A
0612   0317 3A 12 FF        LD  A, (EXM_COUNT)
0613   031A 3D              DEC A
0614   031B 32 12 FF        LD  (EXM_COUNT), A
0615   031E C3 EE 00        JP  EXIT_SYS
0616   0321             
0617   0321             
0618   0321             EXAMINE_KEY_POS_2:
0619   0321 F1              POP  AF
0620   0322 2A 0D FF        LD  HL, (PC_RAM)
0621   0325 B4              OR  H
0622   0326 67              LD  H, A
0623   0327 22 0D FF        LD  (PC_RAM), HL
0624   032A F1              POP  AF
0625   032B CD F2 0A        CALL GET_NUM_FROM_LOW
0626   032E 32 01 FF        LD  (DIG_1), A
0627   0331 3A 12 FF        LD  A, (EXM_COUNT)
0628   0334 3D              DEC A
0629   0335 32 12 FF        LD  (EXM_COUNT), A
0630   0338 C3 EE 00        JP  EXIT_SYS
0631   033B             
0632   033B             EXAMINE_KEY_POS_1:
0633   033B F1              POP  AF
0634   033C 2A 0D FF        LD  HL, (PC_RAM)
0635   033F CB 07           RLC  A
0636   0341 CB 07           RLC  A
0637   0343 CB 07           RLC  A
0638   0345 CB 07           RLC  A
0639   0347 6F              LD  L, A
0640   0348 22 0D FF        LD  (PC_RAM), HL
0641   034B F1              POP  AF
0642   034C CD F2 0A        CALL GET_NUM_FROM_LOW
0643   034F 32 02 FF        LD  (DIG_2), A
0644   0352 3A 12 FF        LD  A, (EXM_COUNT)
0645   0355 3D              DEC A
0646   0356 32 12 FF        LD  (EXM_COUNT), A
0647   0359 C3 EE 00        JP  EXIT_SYS
0648   035C             
0649   035C             
0650   035C             EXAMINE_KEY_POS_0:
0651   035C F1              POP  AF
0652   035D 2A 0D FF        LD  HL, (PC_RAM)
0653   0360 B5              OR  L
0654   0361 6F              LD  L, A
0655   0362 22 0D FF        LD  (PC_RAM), HL
0656   0365 F1              POP  AF
0657   0366 CD F2 0A        CALL GET_NUM_FROM_LOW
0658   0369 32 03 FF        LD  (DIG_3), A
0659   036C C3 44 09        JP  GO_MONITOR
0660   036F             
0661   036F             ; =========================================================
0662   036F             ; MODIFY RAM Mode
0663   036F             ; =========================================================
0664   036F             MODIFY_RAM:
0665   036F             
0666   036F CD 32 08        CALL GET_KEY_A
0667   0372 FE FF           CP  $FF
0668   0374 CA EE 00        JP  Z, EXIT_SYS
0669   0377             
0670   0377 F5              PUSH  AF
0671   0378 F5              PUSH  AF
0672   0379 3A 13 FF        LD  A, (MDF_COUNT)
0673   037C FE 01           CP  1
0674   037E CA 8C 03        JP  Z, MODIFY_KEY_POS_1
0675   0381             
0676   0381 3A 13 FF        LD  A, (MDF_COUNT)
0677   0384 FE 00           CP  0
0678   0386 CA AA 03        JP  Z, MODIFY_KEY_POS_0
0679   0389             
0680   0389 C3 EE 00        JP  EXIT_SYS
0681   038C             
0682   038C             MODIFY_KEY_POS_1:
0683   038C F1              POP  AF
0684   038D CB 07           RLC  A
0685   038F CB 07           RLC  A
0686   0391 CB 07           RLC  A
0687   0393 CB 07           RLC  A
0688   0395 2A 0D FF        LD  HL, (PC_RAM)
0689   0398 77              LD  (HL), A
0690   0399             
0691   0399 F1              POP  AF
0692   039A CD F2 0A        CALL GET_NUM_FROM_LOW
0693   039D 32 06 FF        LD  (DIG_6), A
0694   03A0 3A 13 FF        LD  A, (MDF_COUNT)
0695   03A3 3D              DEC A
0696   03A4 32 13 FF        LD  (MDF_COUNT), A
0697   03A7 C3 EE 00        JP  EXIT_SYS
0698   03AA             
0699   03AA             MODIFY_KEY_POS_0:
0700   03AA F1              POP  AF
0701   03AB 2A 0D FF        LD  HL, (PC_RAM)
0702   03AE 46              LD  B, (HL)
0703   03AF B0              OR  B
0704   03B0 2A 0D FF        LD  HL, (PC_RAM)
0705   03B3 77              LD  (HL), A
0706   03B4             
0707   03B4 F1              POP  AF
0708   03B5 CD F2 0A        CALL GET_NUM_FROM_LOW
0709   03B8 32 07 FF        LD  (DIG_7), A
0710   03BB C3 44 09        JP  GO_MONITOR
0711   03BE                 
0712   03BE             
0713   03BE             SHOW_REG_PC:
0714   03BE CD 32 08        CALL  GET_KEY_A
0715   03C1 FE 00           CP  $00
0716   03C3 CA 44 09        JP Z, GO_MONITOR
0717   03C6 FE 01           CP  $01
0718   03C8 CA 4F 09        JP Z, GO_SHOW_REG_PC
0719   03CB FE 02           CP  $02
0720   03CD CA 5A 09        JP Z, GO_SHOW_REG_SP
0721   03D0 FE 03           CP  $03
0722   03D2 CA 65 09        JP Z, GO_SHOW_REG_AF
0723   03D5 FE 04           CP  $04
0724   03D7 CA 70 09        JP Z, GO_SHOW_REG_BC
0725   03DA FE 05           CP  $05
0726   03DC CA 7B 09        JP Z, GO_SHOW_REG_DE
0727   03DF FE 06           CP  $06
0728   03E1 CA 86 09        JP Z, GO_SHOW_REG_HL
0729   03E4 FE 07           CP  $07
0730   03E6 CA 91 09        JP Z, GO_SHOW_REG_IX
0731   03E9 FE 08           CP  $08
0732   03EB CA 9C 09        JP Z, GO_SHOW_REG_IY
0733   03EE             
0734   03EE                 ; RUN
0735   03EE FE 0F           CP  $0F
0736   03F0 CA D3 09        JP  Z,  FIRE
0737   03F3             
0738   03F3                 ; Modify
0739   03F3 FE 0D           CP  $0D
0740   03F5 CA DC 09        JP  Z,  MODIFY_ANY
0741   03F8             
0742   03F8 3E 73           LD  A, $73               ; P
0743   03FA 32 00 FF        LD  (DIG_0), A
0744   03FD             
0745   03FD 3E 39           LD  A, $39
0746   03FF 32 01 FF        LD  (DIG_1), A           ; C
0747   0402             
0748   0402 2A 14 FF        LD HL, (USR_PC)
0749   0405 CD A4 0B        CALL PRINT_END_HL
0750   0408             
0751   0408 21 14 FF        LD HL, USR_PC
0752   040B 22 DC FF        LD (ISR_MD_HL), HL
0753   040E             
0754   040E C3 EE 00        JP  EXIT_SYS
0755   0411             
0756   0411             
0757   0411             SHOW_REG_SP:
0758   0411 CD 32 08        CALL  GET_KEY_A
0759   0414 FE 00           CP  $00
0760   0416 CA 44 09        JP Z, GO_MONITOR
0761   0419 FE 01           CP  $01
0762   041B CA 4F 09        JP Z, GO_SHOW_REG_PC
0763   041E FE 02           CP  $02
0764   0420 CA 5A 09        JP Z, GO_SHOW_REG_SP
0765   0423 FE 03           CP  $03
0766   0425 CA 65 09        JP Z, GO_SHOW_REG_AF
0767   0428 FE 04           CP  $04
0768   042A CA 70 09        JP Z, GO_SHOW_REG_BC
0769   042D FE 05           CP  $05
0770   042F CA 7B 09        JP Z, GO_SHOW_REG_DE
0771   0432 FE 06           CP  $06
0772   0434 CA 86 09        JP Z, GO_SHOW_REG_HL
0773   0437 FE 07           CP  $07
0774   0439 CA 91 09        JP Z, GO_SHOW_REG_IX
0775   043C FE 08           CP  $08
0776   043E CA 9C 09        JP Z, GO_SHOW_REG_IY
0777   0441             
0778   0441                 ; RUN
0779   0441 FE 0F           CP  $0F
0780   0443 CA D3 09        JP  Z,  FIRE
0781   0446             
0782   0446 CD B8 0A        CALL  CLEAR_DISPLAY
0783   0449             
0784   0449 3E 6D           LD  A, $6D               ; S
0785   044B 32 00 FF        LD  (DIG_0), A
0786   044E             
0787   044E 3E 73           LD  A, $73               ; P
0788   0450 32 01 FF        LD  (DIG_1), A
0789   0453             
0790   0453 2A 16 FF        LD HL, (USR_SP)
0791   0456 CD A4 0B        CALL PRINT_END_HL
0792   0459 C3 EE 00        JP  EXIT_SYS
0793   045C             
0794   045C             
0795   045C             SHOW_REG_AF:
0796   045C CD 32 08        CALL  GET_KEY_A
0797   045F FE 00           CP  $00
0798   0461 CA 44 09        JP Z, GO_MONITOR
0799   0464 FE 01           CP  $01
0800   0466 CA 4F 09        JP Z, GO_SHOW_REG_PC
0801   0469 FE 02           CP  $02
0802   046B CA 5A 09        JP Z, GO_SHOW_REG_SP
0803   046E FE 03           CP  $03
0804   0470 CA A7 09        JP Z, GO_SHOW_REG_AFaux
0805   0473 FE 04           CP  $04
0806   0475 CA 70 09        JP Z, GO_SHOW_REG_BC
0807   0478 FE 05           CP  $05
0808   047A CA 7B 09        JP Z, GO_SHOW_REG_DE
0809   047D FE 06           CP  $06
0810   047F CA 86 09        JP Z, GO_SHOW_REG_HL
0811   0482 FE 07           CP  $07
0812   0484 CA 91 09        JP Z, GO_SHOW_REG_IX
0813   0487 FE 08           CP  $08
0814   0489 CA 9C 09        JP Z, GO_SHOW_REG_IY
0815   048C             
0816   048C                 ; RUN
0817   048C FE 0F           CP  $0F
0818   048E CA D3 09        JP  Z,  FIRE
0819   0491             
0820   0491                 ; Modify
0821   0491 FE 0D           CP  $0D
0822   0493 CA DC 09        JP  Z,  MODIFY_ANY
0823   0496             
0824   0496 CD B8 0A        CALL  CLEAR_DISPLAY
0825   0499             
0826   0499 3E 77           LD  A, $77               ; A
0827   049B 32 00 FF        LD  (DIG_0), A
0828   049E             
0829   049E 3E 71           LD  A, $71               ; F
0830   04A0 32 01 FF        LD  (DIG_1), A
0831   04A3             
0832   04A3 2A 1E FF        LD  HL, (USR_AF)
0833   04A6 7D              LD  A, L
0834   04A7 32 2C FF        LD (CPU_FLAGS), A
0835   04AA CD A4 0B        CALL PRINT_END_HL
0836   04AD             
0837   04AD 21 1E FF        LD HL, USR_AF
0838   04B0 22 DC FF        LD (ISR_MD_HL), HL
0839   04B3             
0840   04B3 C3 EE 00        JP  EXIT_SYS
0841   04B6             
0842   04B6             
0843   04B6             SHOW_REG_BC:
0844   04B6 CD 32 08        CALL  GET_KEY_A
0845   04B9 FE 00           CP  $00
0846   04BB CA 44 09        JP Z, GO_MONITOR
0847   04BE FE 01           CP  $01
0848   04C0 CA 4F 09        JP Z, GO_SHOW_REG_PC
0849   04C3 FE 02           CP  $02
0850   04C5 CA 5A 09        JP Z, GO_SHOW_REG_SP
0851   04C8 FE 03           CP  $03
0852   04CA CA 65 09        JP Z, GO_SHOW_REG_AF
0853   04CD FE 04           CP  $04
0854   04CF CA B2 09        JP Z, GO_SHOW_REG_BCaux
0855   04D2 FE 05           CP  $05
0856   04D4 CA 7B 09        JP Z, GO_SHOW_REG_DE
0857   04D7 FE 06           CP  $06
0858   04D9 CA 86 09        JP Z, GO_SHOW_REG_HL
0859   04DC FE 07           CP  $07
0860   04DE CA 91 09        JP Z, GO_SHOW_REG_IX
0861   04E1 FE 08           CP  $08
0862   04E3 CA 9C 09        JP Z, GO_SHOW_REG_IY
0863   04E6             
0864   04E6                 ; RUN
0865   04E6 FE 0F           CP  $0F
0866   04E8 CA D3 09        JP  Z,  FIRE
0867   04EB             
0868   04EB                 ; Modify
0869   04EB FE 0D           CP  $0D
0870   04ED CA DC 09        JP  Z,  MODIFY_ANY
0871   04F0             
0872   04F0             
0873   04F0             
0874   04F0 CD B8 0A        CALL  CLEAR_DISPLAY
0875   04F3             
0876   04F3 3E 7C           LD  A, $7C               ; B
0877   04F5 32 00 FF        LD  (DIG_0), A
0878   04F8             
0879   04F8 3E 39           LD  A, $39               ; C
0880   04FA 32 01 FF        LD  (DIG_1), A
0881   04FD             
0882   04FD 2A 1A FF        LD HL, (USR_BC)
0883   0500 CD A4 0B        CALL PRINT_END_HL
0884   0503             
0885   0503 21 1A FF        LD HL, USR_BC
0886   0506 22 DC FF        LD (ISR_MD_HL), HL
0887   0509             
0888   0509 C3 EE 00        JP  EXIT_SYS
0889   050C             
0890   050C             SHOW_REG_DE:
0891   050C CD 32 08        CALL  GET_KEY_A
0892   050F FE 00           CP  $00
0893   0511 CA 44 09        JP Z, GO_MONITOR
0894   0514 FE 01           CP  $01
0895   0516 CA 4F 09        JP Z, GO_SHOW_REG_PC
0896   0519 FE 02           CP  $02
0897   051B CA 5A 09        JP Z, GO_SHOW_REG_SP
0898   051E FE 03           CP  $03
0899   0520 CA 65 09        JP Z, GO_SHOW_REG_AF
0900   0523 FE 04           CP  $04
0901   0525 CA 70 09        JP Z, GO_SHOW_REG_BC
0902   0528 FE 05           CP  $05
0903   052A CA BD 09        JP Z, GO_SHOW_REG_DEaux
0904   052D FE 06           CP  $06
0905   052F CA 86 09        JP Z, GO_SHOW_REG_HL
0906   0532 FE 07           CP  $07
0907   0534 CA 91 09        JP Z, GO_SHOW_REG_IX
0908   0537 FE 08           CP  $08
0909   0539 CA 9C 09        JP Z, GO_SHOW_REG_IY
0910   053C             
0911   053C                 ; RUN
0912   053C FE 0F           CP  $0F
0913   053E CA D3 09        JP  Z,  FIRE
0914   0541             
0915   0541                 ; Modify
0916   0541 FE 0D           CP  $0D
0917   0543 CA DC 09        JP  Z,  MODIFY_ANY
0918   0546             
0919   0546 CD B8 0A        CALL  CLEAR_DISPLAY
0920   0549             
0921   0549 3E 5E           LD  A, $5E               ; D
0922   054B 32 00 FF        LD  (DIG_0), A
0923   054E             
0924   054E 3E 79           LD  A, $79               ; E
0925   0550 32 01 FF        LD  (DIG_1), A
0926   0553             
0927   0553 2A 1C FF        LD HL, (USR_DE)
0928   0556 CD A4 0B        CALL PRINT_END_HL
0929   0559             
0930   0559 21 1C FF        LD HL, USR_DE
0931   055C 22 DC FF        LD (ISR_MD_HL), HL
0932   055F             
0933   055F C3 EE 00        JP  EXIT_SYS
0934   0562             
0935   0562             SHOW_REG_HL:
0936   0562 CD 32 08        CALL  GET_KEY_A
0937   0565 FE 00           CP  $00
0938   0567 CA 44 09        JP Z, GO_MONITOR
0939   056A FE 01           CP  $01
0940   056C CA 4F 09        JP Z, GO_SHOW_REG_PC
0941   056F FE 02           CP  $02
0942   0571 CA 5A 09        JP Z, GO_SHOW_REG_SP
0943   0574 FE 03           CP  $03
0944   0576 CA 65 09        JP Z, GO_SHOW_REG_AF
0945   0579 FE 04           CP  $04
0946   057B CA 70 09        JP Z, GO_SHOW_REG_BC
0947   057E FE 05           CP  $05
0948   0580 CA 7B 09        JP Z, GO_SHOW_REG_DE
0949   0583 FE 06           CP  $06
0950   0585 CA C8 09        JP Z, GO_SHOW_REG_HLaux
0951   0588 FE 07           CP  $07
0952   058A CA 91 09        JP Z, GO_SHOW_REG_IX
0953   058D FE 08           CP  $08
0954   058F CA 9C 09        JP Z, GO_SHOW_REG_IY
0955   0592             
0956   0592                 ; RUN
0957   0592 FE 0F           CP  $0F
0958   0594 CA D3 09        JP  Z,  FIRE
0959   0597             
0960   0597                 ; Modify
0961   0597 FE 0D           CP  $0D
0962   0599 CA DC 09        JP  Z,  MODIFY_ANY
0963   059C             
0964   059C CD B8 0A        CALL  CLEAR_DISPLAY
0965   059F             
0966   059F 3E 76           LD  A, $76               ; H
0967   05A1 32 00 FF        LD  (DIG_0), A
0968   05A4             
0969   05A4 3E 38           LD  A, $38               ; L
0970   05A6 32 01 FF        LD  (DIG_1), A
0971   05A9             
0972   05A9 2A 18 FF        LD HL, (USR_HL)
0973   05AC CD A4 0B        CALL PRINT_END_HL
0974   05AF             
0975   05AF 21 18 FF        LD HL, USR_HL
0976   05B2 22 DC FF        LD (ISR_MD_HL), HL
0977   05B5             
0978   05B5 C3 EE 00        JP  EXIT_SYS
0979   05B8             
0980   05B8             SHOW_REG_IX:
0981   05B8 CD 32 08        CALL  GET_KEY_A
0982   05BB FE 00           CP  $00
0983   05BD CA 44 09        JP Z, GO_MONITOR
0984   05C0 FE 01           CP  $01
0985   05C2 CA 4F 09        JP Z, GO_SHOW_REG_PC
0986   05C5 FE 02           CP  $02
0987   05C7 CA 5A 09        JP Z, GO_SHOW_REG_SP
0988   05CA FE 03           CP  $03
0989   05CC CA 65 09        JP Z, GO_SHOW_REG_AF
0990   05CF FE 04           CP  $04
0991   05D1 CA 70 09        JP Z, GO_SHOW_REG_BC
0992   05D4 FE 05           CP  $05
0993   05D6 CA 7B 09        JP Z, GO_SHOW_REG_DE
0994   05D9 FE 06           CP  $06
0995   05DB CA 86 09        JP Z, GO_SHOW_REG_HL
0996   05DE FE 07           CP  $07
0997   05E0 CA 91 09        JP Z, GO_SHOW_REG_IX
0998   05E3 FE 08           CP  $08
0999   05E5 CA 9C 09        JP Z, GO_SHOW_REG_IY
1000   05E8             
1001   05E8                 ; RUN
1002   05E8 FE 0F           CP  $0F
1003   05EA CA D3 09        JP  Z,  FIRE
1004   05ED             
1005   05ED                 ; Modify
1006   05ED FE 0D           CP  $0D
1007   05EF CA DC 09        JP  Z,  MODIFY_ANY
1008   05F2             
1009   05F2 CD B8 0A        CALL  CLEAR_DISPLAY
1010   05F5             
1011   05F5 3E 06           LD  A, $06               ; I
1012   05F7 32 00 FF        LD  (DIG_0), A
1013   05FA             
1014   05FA 3E 70           LD  A, $70               ; X
1015   05FC 32 01 FF        LD  (DIG_1), A
1016   05FF             
1017   05FF 2A 20 FF        LD HL, (USR_IX)
1018   0602 CD A4 0B        CALL PRINT_END_HL
1019   0605             
1020   0605 21 20 FF        LD HL, USR_IX
1021   0608 22 DC FF        LD (ISR_MD_HL), HL
1022   060B             
1023   060B C3 EE 00        JP  EXIT_SYS
1024   060E             
1025   060E             SHOW_REG_IY:
1026   060E CD 32 08        CALL  GET_KEY_A
1027   0611 FE 00           CP  $00
1028   0613 CA 44 09        JP Z, GO_MONITOR
1029   0616 FE 01           CP  $01
1030   0618 CA 4F 09        JP Z, GO_SHOW_REG_PC
1031   061B FE 02           CP  $02
1032   061D CA 5A 09        JP Z, GO_SHOW_REG_SP
1033   0620 FE 03           CP  $03
1034   0622 CA 65 09        JP Z, GO_SHOW_REG_AF
1035   0625 FE 04           CP  $04
1036   0627 CA 70 09        JP Z, GO_SHOW_REG_BC
1037   062A FE 05           CP  $05
1038   062C CA 7B 09        JP Z, GO_SHOW_REG_DE
1039   062F FE 06           CP  $06
1040   0631 CA 86 09        JP Z, GO_SHOW_REG_HL
1041   0634 FE 07           CP  $07
1042   0636 CA 91 09        JP Z, GO_SHOW_REG_IX
1043   0639 FE 08           CP  $08
1044   063B CA 9C 09        JP Z, GO_SHOW_REG_IY
1045   063E             
1046   063E                 ; RUN
1047   063E FE 0F           CP  $0F
1048   0640 CA D3 09        JP  Z,  FIRE
1049   0643             
1050   0643                 ; Modify
1051   0643 FE 0D           CP  $0D
1052   0645 CA DC 09        JP  Z,  MODIFY_ANY
1053   0648             
1054   0648 CD B8 0A        CALL  CLEAR_DISPLAY
1055   064B             
1056   064B 3E 06           LD  A, $06               ; I
1057   064D 32 00 FF        LD  (DIG_0), A
1058   0650             
1059   0650 3E 6E           LD  A, $6E               ; Y
1060   0652 32 01 FF        LD  (DIG_1), A
1061   0655             
1062   0655 2A 22 FF        LD HL, (USR_IY)
1063   0658 CD A4 0B        CALL PRINT_END_HL
1064   065B             
1065   065B 21 22 FF        LD HL, USR_IY
1066   065E 22 DC FF        LD (ISR_MD_HL), HL
1067   0661             
1068   0661 C3 EE 00        JP  EXIT_SYS
1069   0664             
1070   0664             SHOW_REG_AFaux:
1071   0664 CD 32 08        CALL  GET_KEY_A
1072   0667 FE 00           CP  $00
1073   0669 CA 44 09        JP Z, GO_MONITOR
1074   066C FE 01           CP  $01
1075   066E CA 4F 09        JP Z, GO_SHOW_REG_PC
1076   0671 FE 02           CP  $02
1077   0673 CA 5A 09        JP Z, GO_SHOW_REG_SP
1078   0676 FE 03           CP  $03
1079   0678 CA 65 09        JP Z, GO_SHOW_REG_AF
1080   067B FE 04           CP  $04
1081   067D CA 70 09        JP Z, GO_SHOW_REG_BC
1082   0680 FE 05           CP  $05
1083   0682 CA 7B 09        JP Z, GO_SHOW_REG_DE
1084   0685 FE 06           CP  $06
1085   0687 CA 86 09        JP Z, GO_SHOW_REG_HL
1086   068A FE 07           CP  $07
1087   068C CA 91 09        JP Z, GO_SHOW_REG_IX
1088   068F FE 08           CP  $08
1089   0691 CA 9C 09        JP Z, GO_SHOW_REG_IY
1090   0694             
1091   0694                 ; RUN
1092   0694 FE 0F           CP  $0F
1093   0696 CA D3 09        JP  Z,  FIRE
1094   0699             
1095   0699                 ; Modify
1096   0699 FE 0D           CP  $0D
1097   069B CA DC 09        JP  Z,  MODIFY_ANY
1098   069E             
1099   069E CD B8 0A        CALL  CLEAR_DISPLAY
1100   06A1             
1101   06A1             
1102   06A1 3E 77           LD  A, $77               ; A
1103   06A3 32 00 FF        LD  (DIG_0), A
1104   06A6             
1105   06A6 3E 71           LD  A, $71               ; F
1106   06A8 32 01 FF        LD  (DIG_1), A
1107   06AB             
1108   06AB 3E 20           LD  A, $20               ; '
1109   06AD 32 02 FF        LD  (DIG_2), A
1110   06B0             
1111   06B0 2A 24 FF        LD HL, (USR_AFA)
1112   06B3 7D              LD  A, L
1113   06B4 32 2C FF        LD (CPU_FLAGS), A
1114   06B7 CD A4 0B        CALL PRINT_END_HL
1115   06BA             
1116   06BA 21 24 FF        LD HL, USR_AFA
1117   06BD 22 DC FF        LD (ISR_MD_HL), HL
1118   06C0             
1119   06C0 C3 EE 00        JP  EXIT_SYS
1120   06C3             
1121   06C3             
1122   06C3             SHOW_REG_BCaux:
1123   06C3 CD 32 08        CALL  GET_KEY_A
1124   06C6 FE 00           CP  $00
1125   06C8 CA 44 09        JP Z, GO_MONITOR
1126   06CB FE 01           CP  $01
1127   06CD CA 4F 09        JP Z, GO_SHOW_REG_PC
1128   06D0 FE 02           CP  $02
1129   06D2 CA 5A 09        JP Z, GO_SHOW_REG_SP
1130   06D5 FE 03           CP  $03
1131   06D7 CA 65 09        JP Z, GO_SHOW_REG_AF
1132   06DA FE 04           CP  $04
1133   06DC CA 70 09        JP Z, GO_SHOW_REG_BC
1134   06DF FE 05           CP  $05
1135   06E1 CA 7B 09        JP Z, GO_SHOW_REG_DE
1136   06E4 FE 06           CP  $06
1137   06E6 CA 86 09        JP Z, GO_SHOW_REG_HL
1138   06E9 FE 07           CP  $07
1139   06EB CA 91 09        JP Z, GO_SHOW_REG_IX
1140   06EE FE 08           CP  $08
1141   06F0 CA 9C 09        JP Z, GO_SHOW_REG_IY
1142   06F3             
1143   06F3                 ; RUN
1144   06F3 FE 0F           CP  $0F
1145   06F5 CA D3 09        JP  Z,  FIRE
1146   06F8             
1147   06F8                 ; Modify
1148   06F8 FE 0D           CP  $0D
1149   06FA CA DC 09        JP  Z,  MODIFY_ANY
1150   06FD             
1151   06FD CD B8 0A        CALL  CLEAR_DISPLAY
1152   0700             
1153   0700             
1154   0700 3E 7C           LD  A, $7C               ; B
1155   0702 32 00 FF        LD  (DIG_0), A
1156   0705             
1157   0705 3E 39           LD  A, $39               ; C
1158   0707 32 01 FF        LD  (DIG_1), A
1159   070A             
1160   070A 3E 20           LD  A, $20               ; '
1161   070C 32 02 FF        LD  (DIG_2), A
1162   070F             
1163   070F 2A 26 FF        LD HL, (USR_BCA)
1164   0712 CD A4 0B        CALL PRINT_END_HL
1165   0715             
1166   0715 21 26 FF        LD HL, USR_BCA
1167   0718 22 DC FF        LD (ISR_MD_HL), HL
1168   071B             
1169   071B C3 EE 00        JP  EXIT_SYS
1170   071E             
1171   071E             SHOW_REG_DEaux:
1172   071E CD 32 08        CALL  GET_KEY_A
1173   0721 FE 00           CP  $00
1174   0723 CA 44 09        JP Z, GO_MONITOR
1175   0726 FE 01           CP  $01
1176   0728 CA 4F 09        JP Z, GO_SHOW_REG_PC
1177   072B FE 02           CP  $02
1178   072D CA 5A 09        JP Z, GO_SHOW_REG_SP
1179   0730 FE 03           CP  $03
1180   0732 CA 65 09        JP Z, GO_SHOW_REG_AF
1181   0735 FE 04           CP  $04
1182   0737 CA 70 09        JP Z, GO_SHOW_REG_BC
1183   073A FE 05           CP  $05
1184   073C CA 7B 09        JP Z, GO_SHOW_REG_DE
1185   073F FE 06           CP  $06
1186   0741 CA 86 09        JP Z, GO_SHOW_REG_HL
1187   0744 FE 07           CP  $07
1188   0746 CA 91 09        JP Z, GO_SHOW_REG_IX
1189   0749 FE 08           CP  $08
1190   074B CA 9C 09        JP Z, GO_SHOW_REG_IY
1191   074E             
1192   074E                 ; RUN
1193   074E FE 0F           CP  $0F
1194   0750 CA D3 09        JP  Z,  FIRE
1195   0753             
1196   0753                 ; Modify
1197   0753 FE 0D           CP  $0D
1198   0755 CA DC 09        JP  Z,  MODIFY_ANY
1199   0758             
1200   0758 CD B8 0A        CALL  CLEAR_DISPLAY
1201   075B             
1202   075B 3E 5E           LD  A, $5E               ; D
1203   075D 32 00 FF        LD  (DIG_0), A
1204   0760             
1205   0760 3E 79           LD  A, $79               ; E
1206   0762 32 01 FF        LD  (DIG_1), A
1207   0765             
1208   0765 3E 20           LD  A, $20               ; '
1209   0767 32 02 FF        LD  (DIG_2), A
1210   076A             
1211   076A 2A 28 FF        LD HL, (USR_DEA)
1212   076D CD A4 0B        CALL PRINT_END_HL
1213   0770             
1214   0770 21 28 FF        LD HL, USR_DEA
1215   0773 22 DC FF        LD (ISR_MD_HL), HL
1216   0776             
1217   0776 C3 EE 00        JP  EXIT_SYS
1218   0779             
1219   0779             SHOW_REG_HLaux:
1220   0779 CD 32 08        CALL  GET_KEY_A
1221   077C FE 00           CP  $00
1222   077E CA 44 09        JP Z, GO_MONITOR
1223   0781 FE 01           CP  $01
1224   0783 CA 4F 09        JP Z, GO_SHOW_REG_PC
1225   0786 FE 02           CP  $02
1226   0788 CA 5A 09        JP Z, GO_SHOW_REG_SP
1227   078B FE 03           CP  $03
1228   078D CA 65 09        JP Z, GO_SHOW_REG_AF
1229   0790 FE 04           CP  $04
1230   0792 CA 70 09        JP Z, GO_SHOW_REG_BC
1231   0795 FE 05           CP  $05
1232   0797 CA 7B 09        JP Z, GO_SHOW_REG_DE
1233   079A FE 06           CP  $06
1234   079C CA 86 09        JP Z, GO_SHOW_REG_HL
1235   079F FE 07           CP  $07
1236   07A1 CA 91 09        JP Z, GO_SHOW_REG_IX
1237   07A4 FE 08           CP  $08
1238   07A6 CA 9C 09        JP Z, GO_SHOW_REG_IY
1239   07A9             
1240   07A9                 ; RUN
1241   07A9 FE 0F           CP  $0F
1242   07AB CA D3 09        JP  Z,  FIRE
1243   07AE             
1244   07AE                 ; Modify
1245   07AE FE 0D           CP  $0D
1246   07B0 CA DC 09        JP  Z,  MODIFY_ANY
1247   07B3             
1248   07B3 CD B8 0A        CALL  CLEAR_DISPLAY
1249   07B6             
1250   07B6 3E 76           LD  A, $76               ; H
1251   07B8 32 00 FF        LD  (DIG_0), A
1252   07BB             
1253   07BB 3E 38           LD  A, $38               ; L
1254   07BD 32 01 FF        LD  (DIG_1), A
1255   07C0             
1256   07C0 3E 20           LD  A, $20               ; '
1257   07C2 32 02 FF        LD  (DIG_2), A
1258   07C5             
1259   07C5 2A 2A FF        LD HL, (USR_HLA)
1260   07C8 CD A4 0B        CALL PRINT_END_HL
1261   07CB             
1262   07CB 21 2A FF        LD HL, USR_HLA
1263   07CE 22 DC FF        LD (ISR_MD_HL), HL
1264   07D1             
1265   07D1 C3 EE 00        JP  EXIT_SYS
1266   07D4             
1267   07D4             SHOW_HALT:
1268   07D4 3A 09 FF        LD  A, (INPUT)
1269   07D7 FE FB           CP  $FB
1270   07D9 CA 44 09        JP  Z, GO_MONITOR
1271   07DC             
1272   07DC 3E 40           LD  A, $40               ; -
1273   07DE 32 00 FF        LD  (DIG_0), A
1274   07E1 32 01 FF        LD  (DIG_1), A
1275   07E4             
1276   07E4 3E 76           LD  A, $76               ; H
1277   07E6 32 02 FF        LD  (DIG_2), A
1278   07E9             
1279   07E9 3E 77           LD  A, $77               ; A
1280   07EB 32 03 FF        LD  (DIG_3), A
1281   07EE             
1282   07EE 3E 38           LD  A, $38               ; L
1283   07F0 32 04 FF        LD  (DIG_4), A
1284   07F3             
1285   07F3 3E 78           LD  A, $78               ; T
1286   07F5 32 05 FF        LD  (DIG_5), A
1287   07F8             
1288   07F8 3E 40           LD  A, $40               ; -
1289   07FA 32 06 FF        LD  (DIG_6), A
1290   07FD 32 07 FF        LD  (DIG_7), A
1291   0800             
1292   0800 C3 EE 00        JP EXIT_SYS
1293   0803             
1294   0803             SHOW_ERROR:
1295   0803 3A 09 FF        LD  A, (INPUT)
1296   0806 FE FB           CP  $FB
1297   0808 CA 44 09        JP  Z, GO_MONITOR
1298   080B             
1299   080B 3E 79           LD  A, $79               ; E
1300   080D 32 00 FF        LD  (DIG_0), A
1301   0810             
1302   0810 3E 50           LD  A, $50               ; R
1303   0812 32 01 FF        LD  (DIG_1), A
1304   0815             
1305   0815 3E 50           LD  A, $50               ; R
1306   0817 32 02 FF        LD  (DIG_2), A
1307   081A             
1308   081A 3E 3F           LD  A, $3F               ; O
1309   081C 32 03 FF        LD  (DIG_3), A
1310   081F             
1311   081F 3E 50           LD  A, $50               ; R
1312   0821 32 04 FF        LD  (DIG_4), A
1313   0824             
1314   0824 3E 00           LD  A, $0               ; ''
1315   0826 32 05 FF        LD  (DIG_5), A           
1316   0829 32 06 FF        LD  (DIG_6), A
1317   082C 32 07 FF        LD  (DIG_7), A
1318   082F             
1319   082F C3 EE 00        JP EXIT_SYS
1320   0832             
1321   0832             ; =========================================================
1322   0832             ; GET KEY IN A, IF A == FFh then no KEY
1323   0832             ; =========================================================
1324   0832             GET_KEY_A:
1325   0832 3A 0B FF        LD  A, (KEY_TIMEOUT)
1326   0835 FE 00           CP  0
1327   0837 CA 3D 08        JP  Z, RET_KEY
1328   083A 3E FF           LD  A, $FF
1329   083C C9              RET
1330   083D             
1331   083D             RET_KEY:
1332   083D 3E 64           LD A, CKEY_TIMEOUT
1333   083F 32 0B FF        LD (KEY_TIMEOUT), A
1334   0842             
1335   0842 3A 08 FF        LD  A, (KEY_PRESS)
1336   0845 F5              PUSH  AF
1337   0846 3E FF           LD  A, $FF
1338   0848 32 08 FF        LD  (KEY_PRESS), A
1339   084B F1              POP  AF
1340   084C C9              RET
1341   084D             
1342   084D             
1343   084D             ; =========================================================
1344   084D             ; MONITOR Mode
1345   084D             ; =========================================================
1346   084D             USER_MODE:
1347   084D 3A 09 FF        LD  A, (INPUT)
1348   0850 FE FB           CP  $FB
1349   0852 CA 44 09        JP  Z, GO_MONITOR
1350   0855                 
1351   0855                 ; Copy USER_DISPx to DIG_x
1352   0855 21 D0 FF        LD	HL, USER_DISP0
1353   0858 11 00 FF    	LD	DE, DIG_0
1354   085B 01 08 00    	LD	BC, $0008
1355   085E ED B0       	LDIR
1356   0860             
1357   0860 C3 EE 00        JP  EXIT_SYS
1358   0863             
1359   0863             MONITOR_MODE:
1360   0863                 ; Mostra o endereço
1361   0863 2A 0D FF        LD  HL, (PC_RAM)
1362   0866 CD 47 0B        CALL PRINT_HL
1363   0869             
1364   0869                 ; Limpa digitos
1365   0869 3E 00           LD  A, 0
1366   086B 32 04 FF        LD  (DIG_4), A
1367   086E 32 05 FF        LD  (DIG_5), A
1368   0871             
1369   0871                 ; Mostra os dados no endereço
1370   0871 2A 0D FF        LD  HL, (PC_RAM)
1371   0874 7E              LD  A, (HL)
1372   0875 CD 1A 0B        CALL  PRINT_A
1373   0878             
1374   0878             
1375   0878 CD 32 08        CALL  GET_KEY_A
1376   087B             
1377   087B                 ; Incrementa endereço
1378   087B 32 0A FF        LD (TMP_KEY), A
1379   087E FE 0A           CP  $0A
1380   0880 CA 00 09        JP  Z,  PC_RAM_INC
1381   0883             
1382   0883                 ; Decrementa endereço
1383   0883 3A 0A FF        LD  A, (TMP_KEY)
1384   0886 FE 0B           CP  $0B
1385   0888 CA F6 08        JP  Z,  PC_RAM_DEC
1386   088B             
1387   088B                 ; Examina memoria
1388   088B 3A 0A FF        LD  A, (TMP_KEY)
1389   088E FE 0E           CP  $0E
1390   0890 CA 0A 09        JP  Z,  GO_EXAMINE
1391   0893             
1392   0893                 ; + moDify Memory
1393   0893 3A 0A FF        LD  A, (TMP_KEY)
1394   0896 FE 0C           CP  $0C
1395   0898 CA 25 09        JP  Z,  GO_ADD_MODIFY
1396   089B             
1397   089B                 ; moDify Memory
1398   089B 3A 0A FF        LD  A, (TMP_KEY)
1399   089E FE 0D           CP  $0D
1400   08A0 CA 2F 09        JP  Z,  GO_MODIFY
1401   08A3             
1402   08A3                 ; RUN
1403   08A3 3A 0A FF        LD  A, (TMP_KEY)
1404   08A6 FE 0F           CP  $0F
1405   08A8 CA D3 09        JP  Z,  FIRE
1406   08AB             
1407   08AB                 ; Show register PC
1408   08AB 3A 0A FF        LD  A, (TMP_KEY)
1409   08AE FE 01           CP  $01
1410   08B0 CA 4F 09        JP  Z, GO_SHOW_REG_PC
1411   08B3             
1412   08B3                 ; Show register SP
1413   08B3 3A 0A FF        LD  A, (TMP_KEY)
1414   08B6 FE 02           CP  $02
1415   08B8 CA 5A 09        JP  Z, GO_SHOW_REG_SP
1416   08BB             
1417   08BB                 ; Show register AF
1418   08BB 3A 0A FF        LD  A, (TMP_KEY)
1419   08BE FE 03           CP  $03
1420   08C0 CA 65 09        JP  Z, GO_SHOW_REG_AF
1421   08C3             
1422   08C3                 ; Show register BC
1423   08C3 3A 0A FF        LD  A, (TMP_KEY)
1424   08C6 FE 04           CP  $04
1425   08C8 CA 70 09        JP  Z, GO_SHOW_REG_BC
1426   08CB             
1427   08CB                 ; Show register DE
1428   08CB 3A 0A FF        LD  A, (TMP_KEY)
1429   08CE FE 05           CP  $05
1430   08D0 CA 7B 09        JP  Z, GO_SHOW_REG_DE
1431   08D3             
1432   08D3                 ; Show register HL
1433   08D3 3A 0A FF        LD  A, (TMP_KEY)
1434   08D6 FE 06           CP  $06
1435   08D8 CA 86 09        JP  Z, GO_SHOW_REG_HL
1436   08DB             
1437   08DB                 ; Show register IX
1438   08DB 3A 0A FF        LD  A, (TMP_KEY)
1439   08DE FE 07           CP  $07
1440   08E0 CA 91 09        JP  Z, GO_SHOW_REG_IX
1441   08E3             
1442   08E3                 ; Show register iY
1443   08E3 3A 0A FF        LD  A, (TMP_KEY)
1444   08E6 FE 08           CP  $08
1445   08E8 CA 9C 09        JP  Z, GO_SHOW_REG_IY
1446   08EB             
1447   08EB                 ; Back to user mode
1448   08EB 3A 0A FF        LD  A, (TMP_KEY)
1449   08EE FE 09           CP  $09
1450   08F0 CA 05 0A        JP  Z, GO_USER_MODE
1451   08F3             
1452   08F3 C3 EE 00        JP  EXIT_SYS
1453   08F6                 
1454   08F6             
1455   08F6             PC_RAM_DEC:
1456   08F6 2A 0D FF        LD  HL, (PC_RAM)
1457   08F9 2B              DEC  HL
1458   08FA 22 0D FF        LD  (PC_RAM), HL
1459   08FD C3 EE 00        JP  EXIT_SYS
1460   0900             
1461   0900             PC_RAM_INC:
1462   0900 2A 0D FF        LD  HL, (PC_RAM)
1463   0903 23              INC  HL
1464   0904 22 0D FF        LD  (PC_RAM), HL
1465   0907 C3 EE 00        JP  EXIT_SYS
1466   090A             
1467   090A             GO_EXAMINE:
1468   090A 3E 03           LD  A, $03
1469   090C 32 12 FF        LD (EXM_COUNT), A        ; Set count 4 digits, position display
1470   090F 3E 02           LD  A, $02
1471   0911 32 0F FF        LD (SYSMODE), A          ; Examine mode
1472   0914 3E 40           LD A, 01000000b
1473   0916 32 00 FF        LD (DIG_0), A
1474   0919 32 01 FF        LD (DIG_1), A
1475   091C 32 02 FF        LD (DIG_2), A
1476   091F 32 03 FF        LD (DIG_3), A
1477   0922 C3 EE 00        JP  EXIT_SYS
1478   0925             
1479   0925             GO_ADD_MODIFY:
1480   0925 2A 0D FF        LD  HL, (PC_RAM)
1481   0928 23              INC HL
1482   0929 22 0D FF        LD  (PC_RAM), HL
1483   092C CD 47 0B        CALL  PRINT_HL
1484   092F             GO_MODIFY:
1485   092F 3E 01           LD  A, $01                  ; Set count 2 digits, position display
1486   0931 32 13 FF        LD  (MDF_COUNT), A
1487   0934 3E 03           LD  A, $03                  ; moDify mode (Memory)
1488   0936 32 0F FF        LD  (SYSMODE), A
1489   0939 3E 40           LD  A, 01000000b
1490   093B 32 06 FF        LD  (DIG_6), A
1491   093E 32 07 FF        LD  (DIG_7), A
1492   0941 C3 EE 00        JP  EXIT_SYS
1493   0944             
1494   0944             GO_MONITOR:
1495   0944 CD B8 0A        CALL  CLEAR_DISPLAY
1496   0947 3E 01           LD  A, $01
1497   0949 32 0F FF        LD  (SYSMODE), A
1498   094C C3 EE 00        JP  EXIT_SYS
1499   094F             
1500   094F             GO_SHOW_REG_PC:
1501   094F CD B8 0A        CALL CLEAR_DISPLAY
1502   0952 3E 04           LD  A, $04
1503   0954 32 0F FF        LD  (SYSMODE), A
1504   0957 C3 EE 00        JP  EXIT_SYS
1505   095A             
1506   095A             GO_SHOW_REG_SP:
1507   095A CD B8 0A        CALL CLEAR_DISPLAY
1508   095D 3E 05           LD  A, $05
1509   095F 32 0F FF        LD  (SYSMODE), A
1510   0962 C3 EE 00        JP  EXIT_SYS
1511   0965             
1512   0965             GO_SHOW_REG_AF:
1513   0965 CD B8 0A        CALL CLEAR_DISPLAY
1514   0968 3E 06           LD  A, $06
1515   096A 32 0F FF        LD  (SYSMODE), A
1516   096D C3 EE 00        JP  EXIT_SYS
1517   0970             
1518   0970             GO_SHOW_REG_BC:
1519   0970 CD B8 0A        CALL CLEAR_DISPLAY
1520   0973 3E 07           LD  A, $07
1521   0975 32 0F FF        LD  (SYSMODE), A
1522   0978 C3 EE 00        JP  EXIT_SYS
1523   097B             
1524   097B             GO_SHOW_REG_DE:
1525   097B CD B8 0A        CALL CLEAR_DISPLAY
1526   097E 3E 08           LD  A, $08
1527   0980 32 0F FF        LD  (SYSMODE), A
1528   0983 C3 EE 00        JP  EXIT_SYS
1529   0986             
1530   0986             GO_SHOW_REG_HL:
1531   0986 CD B8 0A        CALL CLEAR_DISPLAY
1532   0989 3E 09           LD  A, $09
1533   098B 32 0F FF        LD  (SYSMODE), A
1534   098E C3 EE 00        JP  EXIT_SYS
1535   0991             
1536   0991             GO_SHOW_REG_IX:
1537   0991 CD B8 0A        CALL CLEAR_DISPLAY
1538   0994 3E 0A           LD  A, $0A
1539   0996 32 0F FF        LD  (SYSMODE), A
1540   0999 C3 EE 00        JP  EXIT_SYS
1541   099C             
1542   099C             GO_SHOW_REG_IY:
1543   099C CD B8 0A        CALL CLEAR_DISPLAY
1544   099F 3E 0B           LD  A, $0B
1545   09A1 32 0F FF        LD  (SYSMODE), A
1546   09A4 C3 EE 00        JP  EXIT_SYS
1547   09A7             
1548   09A7             GO_SHOW_REG_AFaux:
1549   09A7 CD B8 0A        CALL CLEAR_DISPLAY
1550   09AA 3E 0C           LD  A, $0C
1551   09AC 32 0F FF        LD  (SYSMODE), A
1552   09AF C3 EE 00        JP  EXIT_SYS
1553   09B2             
1554   09B2             GO_SHOW_REG_BCaux:
1555   09B2 CD B8 0A        CALL CLEAR_DISPLAY
1556   09B5 3E 0D           LD  A, $0D
1557   09B7 32 0F FF        LD  (SYSMODE), A
1558   09BA C3 EE 00        JP  EXIT_SYS
1559   09BD             
1560   09BD             GO_SHOW_REG_DEaux:
1561   09BD CD B8 0A        CALL CLEAR_DISPLAY
1562   09C0 3E 0E           LD  A, $0E
1563   09C2 32 0F FF        LD  (SYSMODE), A
1564   09C5 C3 EE 00        JP  EXIT_SYS
1565   09C8             
1566   09C8             GO_SHOW_REG_HLaux:
1567   09C8 CD B8 0A        CALL CLEAR_DISPLAY
1568   09CB 3E 0F           LD  A, $0F
1569   09CD 32 0F FF        LD  (SYSMODE), A
1570   09D0 C3 EE 00        JP  EXIT_SYS
1571   09D3             
1572   09D3             
1573   09D3             FIRE:
1574   09D3                 ;LD  A, 1
1575   09D3                 ;LD (SYSMODE), A          ; Monitor mode
1576   09D3 2A 0D FF        LD  HL, (PC_RAM)
1577   09D6 22 14 FF        LD  (USR_PC), HL
1578   09D9 C3 EE 00        JP  EXIT_SYS
1579   09DC             
1580   09DC             MODIFY_ANY:
1581   09DC                 ;;CALL CLEAR_DISPLAY
1582   09DC             
1583   09DC 3E 03           LD  A, $03
1584   09DE 32 12 FF        LD (EXM_COUNT), A        ; Set count 4 digits, position display
1585   09E1             
1586   09E1 3E 00           LD A, 00000000b
1587   09E3 32 02 FF        LD (DIG_2), A
1588   09E6 32 03 FF        LD (DIG_3), A
1589   09E9 3E 40           LD A, 01000000b
1590   09EB 32 04 FF        LD (DIG_4), A
1591   09EE 32 05 FF        LD (DIG_5), A
1592   09F1 32 06 FF        LD (DIG_6), A
1593   09F4 32 07 FF        LD (DIG_7), A
1594   09F7             
1595   09F7 3A 0F FF        LD  A, (SYSMODE)
1596   09FA 32 D8 FF        LD (LAST_SYS), A
1597   09FD             
1598   09FD 3E 80           LD  A, $80
1599   09FF 32 0F FF        LD  (SYSMODE), A
1600   0A02 C3 EE 00        JP EXIT_SYS
1601   0A05             
1602   0A05             
1603   0A05             
1604   0A05             GO_USER_MODE:
1605   0A05 3E 00           LD  A, 0
1606   0A07 32 0F FF        LD  (SYSMODE), A
1607   0A0A C3 EE 00        JP  EXIT_SYS
1608   0A0D             
1609   0A0D             
1610   0A0D             ; =========================================================
1611   0A0D             ; Modify (HL)
1612   0A0D             ; =========================================================
1613   0A0D             MD_HL:
1614   0A0D CD 32 08        CALL GET_KEY_A
1615   0A10 FE FF           CP  $FF
1616   0A12 CA EE 00        JP  Z, EXIT_SYS
1617   0A15             
1618   0A15 F5              PUSH  AF
1619   0A16 F5              PUSH  AF
1620   0A17 3A 12 FF        LD  A, (EXM_COUNT)
1621   0A1A FE 03           CP  3
1622   0A1C CA 3A 0A        JP  Z, MD_HL_KEY_POS_3
1623   0A1F             
1624   0A1F 3A 12 FF        LD  A, (EXM_COUNT)
1625   0A22 FE 02           CP  2
1626   0A24 CA 58 0A        JP  Z, MD_HL_KEY_POS_2
1627   0A27             
1628   0A27 3A 12 FF        LD  A, (EXM_COUNT)
1629   0A2A FE 01           CP  1
1630   0A2C CA 72 0A        JP  Z, MD_HL_KEY_POS_1
1631   0A2F             
1632   0A2F 3A 12 FF        LD  A, (EXM_COUNT)
1633   0A32 FE 00           CP  0
1634   0A34 CA 93 0A        JP  Z, MD_HL_KEY_POS_0
1635   0A37             
1636   0A37 C3 EE 00        JP  EXIT_SYS
1637   0A3A             
1638   0A3A             MD_HL_KEY_POS_3:
1639   0A3A F1              POP  AF
1640   0A3B CB 07           RLC  A
1641   0A3D CB 07           RLC  A
1642   0A3F CB 07           RLC  A
1643   0A41 CB 07           RLC  A
1644   0A43 67              LD  H, A
1645   0A44 22 DE FF        LD  (ISR_MD_TMP), HL
1646   0A47 F1              POP  AF
1647   0A48 CD F2 0A        CALL GET_NUM_FROM_LOW
1648   0A4B 32 04 FF        LD  (DIG_4), A
1649   0A4E 3A 12 FF        LD  A, (EXM_COUNT)
1650   0A51 3D              DEC A
1651   0A52 32 12 FF        LD  (EXM_COUNT), A
1652   0A55 C3 EE 00        JP  EXIT_SYS
1653   0A58             
1654   0A58             
1655   0A58             MD_HL_KEY_POS_2:
1656   0A58 F1              POP  AF
1657   0A59 2A DE FF        LD  HL, (ISR_MD_TMP)
1658   0A5C B4              OR  H
1659   0A5D 67              LD  H, A
1660   0A5E 22 DE FF        LD  (ISR_MD_TMP), HL
1661   0A61 F1              POP  AF
1662   0A62 CD F2 0A        CALL GET_NUM_FROM_LOW
1663   0A65 32 05 FF        LD  (DIG_5), A
1664   0A68 3A 12 FF        LD  A, (EXM_COUNT)
1665   0A6B 3D              DEC A
1666   0A6C 32 12 FF        LD  (EXM_COUNT), A
1667   0A6F C3 EE 00        JP  EXIT_SYS
1668   0A72             
1669   0A72             MD_HL_KEY_POS_1:
1670   0A72 F1              POP  AF
1671   0A73 2A DE FF        LD  HL, (ISR_MD_TMP)
1672   0A76 CB 07           RLC  A
1673   0A78 CB 07           RLC  A
1674   0A7A CB 07           RLC  A
1675   0A7C CB 07           RLC  A
1676   0A7E 6F              LD  L, A
1677   0A7F 22 DE FF        LD  (ISR_MD_TMP), HL
1678   0A82 F1              POP  AF
1679   0A83 CD F2 0A        CALL GET_NUM_FROM_LOW
1680   0A86 32 06 FF        LD  (DIG_6), A
1681   0A89 3A 12 FF        LD  A, (EXM_COUNT)
1682   0A8C 3D              DEC A
1683   0A8D 32 12 FF        LD  (EXM_COUNT), A
1684   0A90 C3 EE 00        JP  EXIT_SYS
1685   0A93             
1686   0A93             
1687   0A93             MD_HL_KEY_POS_0:
1688   0A93 F1              POP  AF
1689   0A94 2A DE FF        LD  HL, (ISR_MD_TMP)
1690   0A97 B5              OR  L
1691   0A98 6F              LD  L, A
1692   0A99 22 DE FF        LD  (ISR_MD_TMP), HL
1693   0A9C F1              POP  AF
1694   0A9D CD F2 0A        CALL GET_NUM_FROM_LOW
1695   0AA0 32 07 FF        LD  (DIG_7), A
1696   0AA3             
1697   0AA3             
1698   0AA3 ED 5B DC FF     LD DE, (ISR_MD_HL) ; endereço de memoria do registrador
1699   0AA7 2A DE FF        LD HL, (ISR_MD_TMP) ; dados
1700   0AAA             
1701   0AAA 7D              LD A, L
1702   0AAB 12              LD (DE), A
1703   0AAC 13              INC DE
1704   0AAD 7C              LD A, H
1705   0AAE 12              LD (DE), A
1706   0AAF             
1707   0AAF 3A D8 FF        LD  A, (LAST_SYS)
1708   0AB2 32 0F FF        LD  (SYSMODE), A
1709   0AB5 C3 EE 00        JP  EXIT_SYS
1710   0AB8             
1711   0AB8             
1712   0AB8             ; =========================================================
1713   0AB8             ; LIMPA DISPLAY
1714   0AB8             ; =========================================================
1715   0AB8             CLEAR_DISPLAY:
1716   0AB8 F5              PUSH  AF
1717   0AB9 3E 00           LD  A, 0
1718   0ABB 32 00 FF        LD  (DIG_0), A
1719   0ABE 32 01 FF        LD  (DIG_1), A
1720   0AC1 32 02 FF        LD  (DIG_2), A
1721   0AC4 32 03 FF        LD  (DIG_3), A
1722   0AC7 32 04 FF        LD  (DIG_4), A
1723   0ACA 32 05 FF        LD  (DIG_5), A
1724   0ACD 32 06 FF        LD  (DIG_6), A
1725   0AD0 32 07 FF        LD  (DIG_7), A
1726   0AD3 F1              POP  AF
1727   0AD4 C9              RET
1728   0AD5             
1729   0AD5             ; =========================================================
1730   0AD5             ; LIMPA USER DISPLAY
1731   0AD5             ; =========================================================
1732   0AD5             CLEAR_USER_DISPLAY:
1733   0AD5 F5              PUSH  AF
1734   0AD6 3E 00           LD  A, 0
1735   0AD8 32 D0 FF        LD  (USER_DISP0), A
1736   0ADB 32 D1 FF        LD  (USER_DISP1), A
1737   0ADE 32 D2 FF        LD  (USER_DISP2), A
1738   0AE1 32 D3 FF        LD  (USER_DISP3), A
1739   0AE4 32 D4 FF        LD  (USER_DISP4), A
1740   0AE7 32 D5 FF        LD  (USER_DISP5), A
1741   0AEA 32 D6 FF        LD  (USER_DISP6), A
1742   0AED 32 D7 FF        LD  (USER_DISP7), A
1743   0AF0 F1              POP  AF
1744   0AF1 C9              RET
1745   0AF2             
1746   0AF2             
1747   0AF2             ; =========================================================
1748   0AF2             ; PEGA LOW NUM EM A E RETORNA CHAR 7SEG EM A
1749   0AF2             ; =========================================================
1750   0AF2             GET_NUM_FROM_LOW:
1751   0AF2 E5              PUSH    HL
1752   0AF3 C5              PUSH    BC
1753   0AF4 21 78 0C        LD      HL, LED_FONT
1754   0AF7 E6 0F           AND     $0F
1755   0AF9 01 00 00        LD      BC, 0
1756   0AFC 4F              LD      C, A
1757   0AFD 09              ADD     HL, BC
1758   0AFE 7E              LD      A, (HL)
1759   0AFF C1              POP     BC
1760   0B00 E1              POP     HL
1761   0B01 C9              RET
1762   0B02             
1763   0B02             ; =========================================================
1764   0B02             ; PEGA HIGH NUM EM A E RETORNA CHAR 7SEG EM A
1765   0B02             ; =========================================================
1766   0B02             GET_NUM_FROM_HIGH:
1767   0B02 E5              PUSH    HL
1768   0B03 C5              PUSH    BC
1769   0B04 21 78 0C        LD      HL, LED_FONT
1770   0B07 E6 F0           AND     $F0
1771   0B09 CB 0F           RRC     A
1772   0B0B CB 0F           RRC     A
1773   0B0D CB 0F           RRC     A
1774   0B0F CB 0F           RRC     A
1775   0B11 01 00 00        LD      BC, 0
1776   0B14 4F              LD      C, A
1777   0B15 09              ADD     HL, BC
1778   0B16 7E              LD      A, (HL)
1779   0B17 C1              POP     BC
1780   0B18 E1              POP     HL
1781   0B19 C9              RET
1782   0B1A             
1783   0B1A             ; =========================================================
1784   0B1A             ; Mostra o que esta em A nos digitos 6 e 7
1785   0B1A             ; =========================================================
1786   0B1A             PRINT_A:
1787   0B1A E5              PUSH    HL
1788   0B1B C5              PUSH    BC
1789   0B1C F5              PUSH    AF
1790   0B1D F5              PUSH    AF
1791   0B1E             
1792   0B1E 21 78 0C        LD	HL, LED_FONT
1793   0B21 E6 0F           AND $0F
1794   0B23 01 00 00        LD      BC, 0
1795   0B26 4F              LD      C, A
1796   0B27 09              ADD HL, BC
1797   0B28 7E              LD  A, (HL)
1798   0B29 32 07 FF        LD  (DIG_7), A
1799   0B2C             
1800   0B2C F1              POP    AF
1801   0B2D 21 78 0C        LD	HL, LED_FONT
1802   0B30 E6 F0           AND  $F0
1803   0B32 CB 0F           RRC  A
1804   0B34 CB 0F           RRC  A
1805   0B36 CB 0F           RRC  A
1806   0B38 CB 0F           RRC  A
1807   0B3A 01 00 00        LD      BC, 0
1808   0B3D 4F              LD      C, A
1809   0B3E 09              ADD HL, BC
1810   0B3F 7E              LD  A, (HL)
1811   0B40 32 06 FF        LD  (DIG_6), A
1812   0B43             
1813   0B43 F1              POP     AF
1814   0B44 C1              POP     BC
1815   0B45 E1              POP     HL
1816   0B46 C9              RET
1817   0B47             
1818   0B47             ; =========================================================
1819   0B47             ; Mostra o que esta em HL - Display(HHLLXXXX)
1820   0B47             ; =========================================================
1821   0B47             PRINT_HL:
1822   0B47 F5              PUSH  AF
1823   0B48 E5              PUSH  HL
1824   0B49 C5              PUSH  BC
1825   0B4A             
1826   0B4A E5              PUSH  HL
1827   0B4B E5              PUSH  HL
1828   0B4C E5              PUSH  HL
1829   0B4D             
1830   0B4D 7D              LD  A, L
1831   0B4E 21 78 0C        LD	HL, LED_FONT
1832   0B51 E6 0F           AND $0F
1833   0B53 01 00 00        LD      BC, 0
1834   0B56 4F              LD      C, A
1835   0B57 09              ADD HL, BC
1836   0B58 7E              LD  A, (HL)
1837   0B59 21 03 FF        LD  HL, DIG_3
1838   0B5C 77              LD  (HL), A
1839   0B5D             
1840   0B5D E1              POP  HL
1841   0B5E 7D              LD  A, L
1842   0B5F 21 78 0C        LD	HL, LED_FONT
1843   0B62 E6 F0           AND  $F0
1844   0B64 CB 0F           RRC  A
1845   0B66 CB 0F           RRC  A
1846   0B68 CB 0F           RRC  A
1847   0B6A CB 0F           RRC  A
1848   0B6C 01 00 00        LD      BC, 0
1849   0B6F 4F              LD      C, A
1850   0B70 09              ADD HL, BC
1851   0B71 7E              LD  A, (HL)
1852   0B72 21 02 FF        LD  HL, DIG_2
1853   0B75 77              LD  (HL), A
1854   0B76             
1855   0B76 E1              POP  HL
1856   0B77 7C              LD  A, H
1857   0B78 21 78 0C        LD	HL, LED_FONT
1858   0B7B E6 0F           AND $0F
1859   0B7D 01 00 00        LD      BC, 0
1860   0B80 4F              LD      C, A
1861   0B81 09              ADD HL, BC
1862   0B82 7E              LD  A, (HL)
1863   0B83 21 01 FF        LD  HL, DIG_1
1864   0B86 77              LD  (HL), A
1865   0B87             
1866   0B87 E1              POP  HL
1867   0B88 7C              LD  A, H
1868   0B89 21 78 0C        LD	HL, LED_FONT
1869   0B8C E6 F0           AND  $F0
1870   0B8E CB 0F           RRC  A
1871   0B90 CB 0F           RRC  A
1872   0B92 CB 0F           RRC  A
1873   0B94 CB 0F           RRC  A
1874   0B96 01 00 00        LD      BC, 0
1875   0B99 4F              LD      C, A
1876   0B9A 09              ADD HL, BC
1877   0B9B 7E              LD  A, (HL)
1878   0B9C 21 00 FF        LD  HL, DIG_0
1879   0B9F 77              LD  (HL), A
1880   0BA0             
1881   0BA0 C1              POP  BC
1882   0BA1 E1              POP  HL
1883   0BA2 F1              POP  AF
1884   0BA3             
1885   0BA3 C9              RET
1886   0BA4             
1887   0BA4             ; =========================================================
1888   0BA4             ; Mostra o que esta em HL - Display(XXXXHHLL)
1889   0BA4             ; =========================================================
1890   0BA4             PRINT_END_HL:
1891   0BA4 F5              PUSH  AF
1892   0BA5 E5              PUSH  HL
1893   0BA6 C5              PUSH  BC
1894   0BA7             
1895   0BA7 E5              PUSH  HL
1896   0BA8 E5              PUSH  HL
1897   0BA9 E5              PUSH  HL
1898   0BAA             
1899   0BAA 7D              LD  A, L
1900   0BAB 21 78 0C        LD	HL, LED_FONT
1901   0BAE E6 0F           AND $0F
1902   0BB0 01 00 00        LD      BC, 0
1903   0BB3 4F              LD      C, A
1904   0BB4 09              ADD HL, BC
1905   0BB5 7E              LD  A, (HL)
1906   0BB6 21 07 FF        LD  HL, DIG_7
1907   0BB9 77              LD  (HL), A
1908   0BBA             
1909   0BBA E1              POP  HL
1910   0BBB 7D              LD  A, L
1911   0BBC 21 78 0C        LD	HL, LED_FONT
1912   0BBF E6 F0           AND  $F0
1913   0BC1 CB 0F           RRC  A
1914   0BC3 CB 0F           RRC  A
1915   0BC5 CB 0F           RRC  A
1916   0BC7 CB 0F           RRC  A
1917   0BC9 01 00 00        LD      BC, 0
1918   0BCC 4F              LD      C, A
1919   0BCD 09              ADD HL, BC
1920   0BCE 7E              LD  A, (HL)
1921   0BCF 21 06 FF        LD  HL, DIG_6
1922   0BD2 77              LD  (HL), A
1923   0BD3             
1924   0BD3 E1              POP  HL
1925   0BD4 7C              LD  A, H
1926   0BD5 21 78 0C        LD	HL, LED_FONT
1927   0BD8 E6 0F           AND $0F
1928   0BDA 01 00 00        LD      BC, 0
1929   0BDD 4F              LD      C, A
1930   0BDE 09              ADD HL, BC
1931   0BDF 7E              LD  A, (HL)
1932   0BE0 21 05 FF        LD  HL, DIG_5
1933   0BE3 77              LD  (HL), A
1934   0BE4             
1935   0BE4 E1              POP  HL
1936   0BE5 7C              LD  A, H
1937   0BE6 21 78 0C        LD	HL, LED_FONT
1938   0BE9 E6 F0           AND  $F0
1939   0BEB CB 0F           RRC  A
1940   0BED CB 0F           RRC  A
1941   0BEF CB 0F           RRC  A
1942   0BF1 CB 0F           RRC  A
1943   0BF3 01 00 00        LD      BC, 0
1944   0BF6 4F              LD      C, A
1945   0BF7 09              ADD HL, BC
1946   0BF8 7E              LD  A, (HL)
1947   0BF9 21 04 FF        LD  HL, DIG_4
1948   0BFC 77              LD  (HL), A
1949   0BFD             
1950   0BFD C1              POP  BC
1951   0BFE E1              POP  HL
1952   0BFF F1              POP  AF
1953   0C00             
1954   0C00 C9              RET
1955   0C01             
1956   0C01             ; =========================================================
1957   0C01             ; Start Sistem ?
1958   0C01             ; =========================================================
1959   0C01             START:
1960   0C01 31 00 FF        LD  SP, STACK
1961   0C04             
1962   0C04                 ; if Moni Back(Reset + Press), then Loader Intel Hex
1963   0C04 DB 40           IN A, (Port40)
1964   0C06 CB 6F           BIT 5, A
1965   0C08 C4 88 0C        CALL NZ, START_INTEL
1966   0C0B             
1967   0C0B             
1968   0C0B 3E 01           LD  A, 1                 ; Monitor mode
1969   0C0D 32 0F FF        LD  (SYSMODE), A
1970   0C10             
1971   0C10             START_COM:
1972   0C10 21 00 80        LD  HL, START_RAM
1973   0C13 22 0D FF        LD  (PC_RAM), HL
1974   0C16             
1975   0C16                 ; start vars
1976   0C16 3E 64           LD  A, CKEY_TIMEOUT
1977   0C18 32 0B FF        LD  (KEY_TIMEOUT), A
1978   0C1B             
1979   0C1B 3E FF           LD A, $FF
1980   0C1D 32 08 FF        LD (KEY_PRESS), A
1981   0C20             
1982   0C20 3E 00           LD  A, $00
1983   0C22 32 00 FF        LD  (DIG_0), A
1984   0C25 32 01 FF        LD  (DIG_1), A
1985   0C28 32 02 FF        LD  (DIG_2), A
1986   0C2B 32 03 FF        LD  (DIG_3), A
1987   0C2E 32 04 FF        LD  (DIG_4), A
1988   0C31 32 05 FF        LD  (DIG_5), A
1989   0C34 32 06 FF        LD  (DIG_6), A
1990   0C37 32 07 FF        LD  (DIG_7), A
1991   0C3A             
1992   0C3A ED 56           IM  1
1993   0C3C FB              EI
1994   0C3D             
1995   0C3D AF              XOR A
1996   0C3E D3 40           OUT (Port40), A
1997   0C40             
1998   0C40             START_LOOP:
1999   0C40 C3 40 0C        JP START_LOOP
2000   0C43             
2001   0C43             START_WARM:
2002   0C43 31 00 FF        LD  SP, STACK
2003   0C46             
2004   0C46 C3 10 0C        JP START_COM
2005   0C49             
2006   0C49             
2007   0C49             ; =========================================================
2008   0C49             ; HL = (HL)
2009   0C49             ; =========================================================
2010   0C49             LD_HL_HL:
2011   0C49 7E          	LD      A,(HL)		;7
2012   0C4A 23          	INC     HL		;6
2013   0C4B 66          	LD      H,(HL)		;7
2014   0C4C 6F          	LD      L,A		;4
2015   0C4D C9          	RET			;10
2016   0C4E             
2017   0C4E             ; =========================================================
2018   0C4E             ; Delay
2019   0C4E             ; =========================================================
2020   0C4E             delay:
2021   0C4E C5          	push bc                       ; 2.75 us
2022   0C4F 06 FF           ld b, 255                     ; 1.75 us
2023   0C51             delay_loop_b:
2024   0C51 0E FF       	ld c, 255                     ; 1.75 us
2025   0C53             delay_loop:
2026   0C53 0D          	dec c                         ; 1 us
2027   0C54 C2 53 0C        jp nz, delay_loop             ; true = 3 us, false 1.75 us
2028   0C57 05              dec b                         ; 1 us
2029   0C58 C2 51 0C        jp nz, delay_loop_b           ; true = 3 us, false 1.75 us
2030   0C5B C1              pop bc                        ; 2.50 us
2031   0C5C C9              ret                           ; 2.50 us
2032   0C5D             
2033   0C5D             
2034   0C5D             ;============================================================================
2035   0C5D             ;	Subroutine	Delay_A
2036   0C5D             ;
2037   0C5D             ;	Entry:	A = Millisecond count
2038   0C5D             ;============================================================================
2039   0C5D E5          DELAY_A:	PUSH	HL			; Save count
2040   0C5E 21 10 FF    		LD	HL,TicCounter
2041   0C61 86          		ADD	A,(HL)			; A = cycle count
2042   0C62 BE          DlyLp		CP	(HL)			; Wait required TicCounter times
2043   0C63 C2 62 0C    		JP	NZ,DlyLp		;  loop if not done
2044   0C66 E1          		POP	HL
2045   0C67 C9          		RET
2046   0C68             
2047   0C68             
2048   0C68 0E 01       DELAY_100mS	LD	C,1
2049   0C6A C5          DELAY_C		PUSH	BC
2050   0C6B 06 00       		LD	B,0
2051   0C6D C5          DELAY_LP	PUSH	BC
2052   0C6E 10 FE       		DJNZ	$		;13   * 256 / 4 = 832uSec
2053   0C70 C1          		POP	BC
2054   0C71 10 FA       		DJNZ	DELAY_LP	;~100mSEC
2055   0C73 0D          		DEC	C
2056   0C74 20 F7       		JR  NZ,	DELAY_LP	;*4 ~= 7mSec
2057   0C76 C1          		POP	BC
2058   0C77 C9          		RET
2059   0C78             
2060   0C78             ; Mapa char to display 0-F
2061   0C78 3F065B4F666DLED_FONT .db $3F, $06, $5B, $4F, $66, $6D, $7D, $07, $7F, $67 ; 0-9
2061   0C7E 7D077F67
2062   0C82 777C395E7971         .DB $77, $7C, $39, $5E, $79, $71                     ; A-F
2063   0C88             
2064   0C88             
2065   0C88             
2066   0C88             
2067   0C88             ; ---------------------------------------------------------
2068   0C88             ;   FFFFFFFF      I     MM           MM
2069   0C88             ;   F             I     M  M       M  M
2070   0C88             ;   F             I     M    M   M    M
2071   0C88             ;   FFFFFFF       I     M      M      M
2072   0C88             ;   F             I     M             M
2073   0C88             ;   F             I     M             M
2074   0C88             ;   F             I     M             M
2075   0C88             ;
2076   0C88             ; ---------------------------------------------------------
2077   0C88             
2078   0C88             
2079   0C88             ; ---------------------------------------------------------
2080   0C88             ;
2081   0C88             ;   SERIAL INTEL HEX LOADDER
2082   0C88             ;
2083   0C88             ;   Serial 4800-N-8-1
2084   0C88             ;
2085   0C88             ; ---------------------------------------------------------
2086   0C88             START_INTEL:
2087   0C88 F3              DI
2088   0C89             
2089   0C89 21 1B 00        LD	HL, B4800
2090   0C8C 22 30 FF    	LD	(BAUD),HL	;DEFAULT SERIAL=4800 BAUD
2091   0C8F             
2092   0C8F 21 86 0D        LD    HL,TXDATA
2093   0C92 22 32 FF        LD    (PUTCH),HL ;USE THE BITBANG SERIAL TRANSMIT
2094   0C95 21 B1 0D        LD    HL,RXDATA
2095   0C98 22 34 FF        LD    (GETCH),HL  ;USE THE BITBANG SERIAL RECEIVE
2096   0C9B             
2097   0C9B 21 14 0E        LD    HL,INITSZ  ;VT100 TERMINAL COMMANDS FOR CLEAR SCREEN,CURSOR HOME
2098   0C9E CD 62 0D        CALL  SNDMSG     ;INITIALISE THE TERMINAL
2099   0CA1                 
2100   0CA1 21 EB 0D        LD    HL,SIGNON
2101   0CA4 CD 62 0D        CALL  SNDMSG     ;SEND THE SIGNON
2102   0CA7             
2103   0CA7 CD CB 0C        CALL INTELFN
2104   0CAA C9              RET
2105   0CAB             
2106   0CAB             INTEL_ERROR:
2107   0CAB 21 40 00        LD HL, INT_ERROR
2108   0CAE 22 2D FF        LD (INT_VEC), HL
2109   0CB1 ED 56           IM 1
2110   0CB3 FB              EI
2111   0CB4             
2112   0CB4             INTEL_ERROR_LOOP:
2113   0CB4 3E 00           LD A, $0
2114   0CB6 D3 40           OUT (Port40), a
2115   0CB8 C3 B4 0C        JP INTEL_ERROR_LOOP
2116   0CBB             
2117   0CBB             INTEL_SUCCESS:
2118   0CBB ED 56           IM 1
2119   0CBD FB              EI
2120   0CBE C9              RET
2121   0CBF             
2122   0CBF             ;-----------------------------------
2123   0CBF             ; OUTPUT A CHARACTER TO THE TERMINAL
2124   0CBF             ;-----------------------------------       
2125   0CBF DD 2A 32 FF OUTCH:  LD   IX,(PUTCH)
2126   0CC3 DD E9              JP   (IX)
2127   0CC5             ;------------------------------------
2128   0CC5             ; INPUT A CHARACTER FROM THE TERMINAL
2129   0CC5             ;------------------------------------
2130   0CC5 DD 2A 34 FF INCH:  LD   IX,(GETCH)
2131   0CC9 DD E9             JP   (IX)
2132   0CCB             
2133   0CCB             ;------------
2134   0CCB             ; ASCII CODES
2135   0CCB             ;------------
2136   0CCB             ESC:    .EQU   1BH
2137   0CCB             CR:     .EQU   0DH
2138   0CCB             LF:     .EQU   0AH
2139   0CCB             
2140   0CCB             
2141   0CCB             ;-=========================== INTEL
2142   0CCB             
2143   0CCB             ;------------------------------------
2144   0CCB             ; FUNCTION 1 RECEIVE INTEL HEX FORMAT
2145   0CCB             ;------------------------------------
2146   0CCB             INTELFN:
2147   0CCB CD DA 0C        CALL  INTELH
2148   0CCE C2 AB 0C        JP    NZ, INTEL_ERROR      ;SHOW THE ERROR 
2149   0CD1             
2150   0CD1 21 01 0E        LD    HL,SUCCESS
2151   0CD4 CD 62 0D        CALL  SNDMSG     ;SEND THE SUCCESS
2152   0CD7             
2153   0CD7 C3 BB 0C        JP    INTEL_SUCCESS        ;JUST RETURN IF ALL OK
2154   0CDA             ;-----------------------
2155   0CDA             ; RECEIVE INTEL HEX FILE
2156   0CDA             ;-----------------------
2157   0CDA DD 21 00 FF INTELH:	LD	IX,STACK	;POINT TO SYSTEM VARIABLES
2158   0CDE             ;
2159   0CDE             ; WAIT FOR RECORD MARK
2160   0CDE             ;
2161   0CDE AF          INTEL1:	XOR	A
2162   0CDF DD 77 03    	LD	(IX+3),A	;CLEAR CHECKSUM
2163   0CE2 CD B1 0D    	CALL	RXDATA	;WAIT FOR THE RECORD MARK
2164   0CE5 FE 3A       	CP	':'	;TO BE TRANSMITTED
2165   0CE7 20 F5       	JR	NZ,INTEL1	;NOT RECORD MARK
2166   0CE9             
2167   0CE9             ;
2168   0CE9             ; GET RECORD LENGTH
2169   0CE9             ;
2170   0CE9 CD 36 0D    	CALL	GETBYT
2171   0CEC DD 77 00    	LD	(IX+0),A	;NUMBER OF DATA BYTES
2172   0CEF             ;
2173   0CEF             ; GET ADDRESS FIELD
2174   0CEF             ;
2175   0CEF CD 36 0D    	CALL	GETBYT
2176   0CF2 DD 77 02    	LD	(IX+2),A	;LOAD ADDRESS HIGH BYTE
2177   0CF5 CD 36 0D    	CALL	GETBYT
2178   0CF8 DD 77 01    	LD	(IX+1),A	;LOAD ADDRESS LOW BYTE
2179   0CFB             ;
2180   0CFB             ; GET RECORD TYPE
2181   0CFB             ;
2182   0CFB CD 36 0D    	CALL	GETBYT
2183   0CFE 20 24       	JR	NZ,INTEL4	;END OF FILE RECORD
2184   0D00             ;
2185   0D00             ; READ IN THE DATA
2186   0D00             ;
2187   0D00 DD 46 00    	LD	B,(IX+0)	;NUMBER OF DATA BYTES
2188   0D03 DD 66 02    	LD	H,(IX+2)	;LOAD ADDRESS HIGH BYTE
2189   0D06 DD 6E 01    	LD	L,(IX+1)	;LOAD ADDRESS LOW BYTE
2190   0D09             
2191   0D09 CD 36 0D    INTEL2:	CALL	GETBYT	;GET DATA BYTE
2192   0D0C 77          	LD	(HL),A	;STORE DATA BYTE
2193   0D0D 23          	INC	HL
2194   0D0E 10 F9       	DJNZ	INTEL2	;LOAD MORE BYTES
2195   0D10             ;
2196   0D10             ; GET CHECKSUM AND COMPARE
2197   0D10             ;
2198   0D10 DD 7E 03    	LD	A,(IX+3)	;CONVERT CHECKSUM TO
2199   0D13 ED 44       	NEG		;TWO'S COMPLEMENT
2200   0D15 DD 77 04    	LD	(IX+4),A	;SAVE COMPUTED CHECKSUM
2201   0D18 CD 36 0D    	CALL	GETBYT
2202   0D1B DD 77 03    	LD	(IX+3),A	;SAVE RECORD CHECKSUM
2203   0D1E DD BE 04    	CP	(IX+4)	;COMPARE CHECKSUM
2204   0D21 28 BB       	JR	Z,INTEL1	;CHECKSUM OK,NEXT RECORD
2205   0D23 C9              RET             ;NZ=CHECKSUM ERROR
2206   0D24             ;
2207   0D24             ; END OF FILE RECORD
2208   0D24             ;
2209   0D24 DD 7E 03    INTEL4:	LD	A,(IX+3)	;CONVERT CHECKSUM TO
2210   0D27 ED 44       	NEG		;TWO'S COMPLEMENT
2211   0D29 DD 77 04    	LD	(IX+4),A	;SAVE COMPUTED CHECKSUM
2212   0D2C CD 36 0D    	CALL	GETBYT
2213   0D2F DD 77 03    	LD	(IX+3),A	;SAVE EOF CHECKSUM
2214   0D32 DD BE 04    	CP	(IX+4)	;COMPARE CHECKSUM
2215   0D35 C9          	RET  	    ;NZ=CHECKSUM ERROR
2216   0D36             
2217   0D36             ;--------------------------
2218   0D36             ; GET BYTE FROM SERIAL PORT
2219   0D36             ;--------------------------
2220   0D36 C5          GETBYT:	PUSH	BC
2221   0D37 CD B1 0D    	CALL	RXDATA
2222   0D3A CB 77       	BIT	6,A
2223   0D3C 28 02       	JR	Z,GETBT1
2224   0D3E C6 09       	ADD	A,09H
2225   0D40 E6 0F       GETBT1:	AND	0FH
2226   0D42 CB 27       	SLA 	A
2227   0D44 CB 27       	SLA	A
2228   0D46 CB 27       	SLA	A
2229   0D48 CB 27       	SLA	A
2230   0D4A 4F          	LD	C,A
2231   0D4B             ;
2232   0D4B             ; GET LOW NYBBLE
2233   0D4B             ;
2234   0D4B CD B1 0D    	CALL	RXDATA
2235   0D4E CB 77       	BIT	6,A
2236   0D50 28 02       	JR	Z,GETBT2
2237   0D52 C6 09       	ADD	A,09H
2238   0D54 E6 0F       GETBT2:	AND	0FH
2239   0D56 B1          	OR	C
2240   0D57 47          	LD	B,A
2241   0D58 DD 86 03    	ADD	A,(IX+3)
2242   0D5B DD 77 03    	LD	(IX+3),A	;ADD TO CHECKSUM
2243   0D5E 78          	LD	A,B
2244   0D5F A7          	AND	A	;CLEAR CARRY
2245   0D60 C1              POP	BC
2246   0D61 C9          	RET
2247   0D62             
2248   0D62             ;=========================== INTEL FIM
2249   0D62             
2250   0D62             
2251   0D62             ;-----------------------------------------
2252   0D62             ; SEND AN ASCII STRING OUT THE SERIAL PORT
2253   0D62             ;-----------------------------------------
2254   0D62             ; 
2255   0D62             ; SENDS A ZERO TERMINATED STRING OR 
2256   0D62             ; 128 CHARACTERS MAX. OUT THE SERIAL PORT
2257   0D62             ;
2258   0D62             ;      ENTRY : HL = POINTER TO 00H TERMINATED STRING
2259   0D62             ;      EXIT  : NONE
2260   0D62             ;
2261   0D62             ;       MODIFIES : A,B,C
2262   0D62             ;          
2263   0D62 06 80       SNDMSG: LD    B,128         ;128 CHARS MAX
2264   0D64 7E          SDMSG1: LD    A,(HL)        ;GET THE CHAR
2265   0D65 FE 00              CP    00H          ;ZERO TERMINATOR?
2266   0D67 28 06              JR    Z,SDMSG2      ;FOUND A ZERO TERMINATOR, EXIT  
2267   0D69 CD BF 0C           CALL  OUTCH         ;TRANSMIT THE CHAR
2268   0D6C 23                 INC   HL
2269   0D6D 10 F5              DJNZ  SDMSG1        ;128 CHARS MAX!    
2270   0D6F C9          SDMSG2: RET
2271   0D70             
2272   0D70             ;-----------------
2273   0D70             ; ONE SECOND DELAY
2274   0D70             ;-----------------
2275   0D70             ;
2276   0D70             ; ENTRY : NONE
2277   0D70             ; EXIT : FLAG REGISTER MODIFIED
2278   0D70             ;
2279   0D70 C5          DELONE:	PUSH	BC
2280   0D71 D5          	PUSH	DE
2281   0D72 E5          	PUSH	HL
2282   0D73 11 01 00    	LD	DE,0001H
2283   0D76 21 70 08    	LD	HL,0870H
2284   0D79 06 92       DELON1:	LD	B,92H
2285   0D7B 10 FE       DELON2:	DJNZ	DELON2	;INNER LOOP
2286   0D7D ED 52       	SBC	HL,DE
2287   0D7F D2 79 0D    	JP	NC,DELON1	;OUTER LOOP
2288   0D82 E1          	POP	HL
2289   0D83 D1          	POP	DE
2290   0D84 C1          	POP	BC
2291   0D85 C9          	RET
2292   0D86             
2293   0D86             ;------------------------
2294   0D86             ; SERIAL TRANSMIT ROUTINE
2295   0D86             ;------------------------
2296   0D86             ;TRANSMIT BYTE SERIALLY ON DOUT
2297   0D86             ;
2298   0D86             ; ENTRY : A = BYTE TO TRANSMIT
2299   0D86             ;  EXIT : NO REGISTERS MODIFIED
2300   0D86             ;
2301   0D86 F5          TXDATA:	PUSH	AF
2302   0D87 C5          	PUSH	BC
2303   0D88 E5          	PUSH	HL
2304   0D89 2A 30 FF    	LD	HL,(BAUD)
2305   0D8C 4F          	LD	C,A
2306   0D8D             ;
2307   0D8D             ; TRANSMIT START BIT
2308   0D8D             ;
2309   0D8D AF          	XOR	A
2310   0D8E D3 C0       	OUT	(SERIAL_TX_PORT),A
2311   0D90 CD DE 0D    	CALL	BITIME
2312   0D93             ;
2313   0D93             ; TRANSMIT DATA
2314   0D93             ;
2315   0D93 06 08       	LD	B,08H
2316   0D95 CB 09       	RRC	C
2317   0D97 CB 09       NXTBIT:	RRC	C	;SHIFT BITS TO D6,
2318   0D99 79          	LD	A,C	;LSB FIRST AND OUTPUT
2319   0D9A E6 40       	AND	40H	;THEM FOR ONE BIT TIME.
2320   0D9C D3 C0       	OUT	(SERIAL_TX_PORT),A
2321   0D9E CD DE 0D    	CALL	BITIME
2322   0DA1 10 F4       	DJNZ	NXTBIT
2323   0DA3             ;
2324   0DA3             ; SEND STOP BITS
2325   0DA3             ;
2326   0DA3 3E 40       	LD	A,40H
2327   0DA5 D3 C0       	OUT	(SERIAL_TX_PORT),A
2328   0DA7 CD DE 0D    	CALL	BITIME
2329   0DAA CD DE 0D    	CALL	BITIME
2330   0DAD E1          	POP	HL
2331   0DAE C1          	POP	BC
2332   0DAF F1          	POP	AF
2333   0DB0 C9          	RET
2334   0DB1             ;-----------------------
2335   0DB1             ; SERIAL RECEIVE ROUTINE
2336   0DB1             ;-----------------------
2337   0DB1             ;RECEIVE SERIAL BYTE FROM DIN
2338   0DB1             ;
2339   0DB1             ; ENTRY : NONE
2340   0DB1             ;  EXIT : A= RECEIVED BYTE IF CARRY CLEAR
2341   0DB1             ;
2342   0DB1             ; REGISTERS MODIFIED A AND F
2343   0DB1             ;
2344   0DB1 C5          RXDATA:	PUSH	BC
2345   0DB2 E5          	PUSH	HL
2346   0DB3             ;
2347   0DB3             ; WAIT FOR START BIT 
2348   0DB3             ;
2349   0DB3 DB C0       RXDAT1: IN	A,(SERIAL_RX_PORT)
2350   0DB5 CB 7F       	    BIT	7,A
2351   0DB7 20 FA       	    JR	NZ,RXDAT1	;NO START BIT
2352   0DB9             ;
2353   0DB9             ; DETECTED START BIT
2354   0DB9             ;
2355   0DB9 2A 30 FF    	LD	HL,(BAUD)
2356   0DBC CB 3C       	SRL	H
2357   0DBE CB 1D       	RR	L 	;DELAY FOR HALF BIT TIME
2358   0DC0 CD DE 0D    	CALL 	BITIME
2359   0DC3 DB C0       	IN	A,(SERIAL_RX_PORT)
2360   0DC5 CB 7F       	BIT	7,A
2361   0DC7 20 EA       	JR	NZ,RXDAT1	;START BIT NOT VALID
2362   0DC9             ;
2363   0DC9             ; DETECTED VALID START BIT,READ IN DATA
2364   0DC9             ;
2365   0DC9 06 08       	LD	B,08H
2366   0DCB 2A 30 FF    RXDAT2:	LD	HL,(BAUD)
2367   0DCE CD DE 0D    	CALL	BITIME	;DELAY ONE BIT TIME
2368   0DD1 DB C0       	IN	A,(SERIAL_RX_PORT)
2369   0DD3 CB 17       	RL	A
2370   0DD5 CB 19       	RR	C	;SHIFT BIT INTO DATA REG
2371   0DD7 10 F2       	DJNZ	RXDAT2
2372   0DD9 79          	LD	A,C
2373   0DDA B7          	OR	A	;CLEAR CARRY FLAG
2374   0DDB E1              POP	HL
2375   0DDC C1          	POP	BC
2376   0DDD C9          	RET
2377   0DDE             ;---------------
2378   0DDE             ; BIT TIME DELAY
2379   0DDE             ;---------------
2380   0DDE             ;DELAY FOR ONE SERIAL BIT TIME
2381   0DDE             ;ENTRY : HL = DELAY TIME
2382   0DDE             ; NO REGISTERS MODIFIED
2383   0DDE             ;
2384   0DDE E5          BITIME:	PUSH	HL
2385   0DDF D5          	PUSH	DE
2386   0DE0 11 01 00    	LD	DE,0001H
2387   0DE3 ED 52       BITIM1:	SBC	HL,DE
2388   0DE5 D2 E3 0D    	JP	NC,BITIM1
2389   0DE8 D1          	POP	DE
2390   0DE9 E1          	POP	HL
2391   0DEA C9          	RET
2392   0DEB             
2393   0DEB             
2394   0DEB 0D0A4C6F6164SIGNON:      .DB     CR,LF,"Load intel hex...",CR,LF,00H
2394   0DF1 20696E74656C206865782E2E2E0D0A00
2395   0E01 4C6F61642073SUCCESS:      .DB    "Load success... ",CR,LF,00H
2395   0E07 7563636573732E2E2E200D0A00
2396   0E14 1B5B481B5B32INITSZ:      .DB     27,"[H",27,"[2J",00H
2396   0E1A 4A00
2397   0E1C             
2398   0E1C             ; =========================================================
2399   0E1C             ; Tabela display
2400   0E1C             ; =========================================================
2401   0E1C             ; 
2402   0E1C             ;   0 - $3F     A - $77     K - $7A     U - $1C     . - $80
2403   0E1C             ;   1 - $06     B - $7C     L - $38     V - $3E     Ñ - $55
2404   0E1C             ;   2 - $5B     C - $39     M - $37     W - $1D     : - $41
2405   0E1C             ;   3 - $4F     D - $5E     N - $54     X - $70     ; - $88
2406   0E1C             ;   4 - $66     E - $79     O - $3F     Y - $6E     _ - $08
2407   0E1C             ;   5 - $6D     F - $71     P - $73     Z - $49     ~ - $01
2408   0E1C             ;   6 - $7D     G - $6F     Q - $67                 ' - $20
2409   0E1C             ;   7 - $07     H - $76     R - $50     + - $46     
2410   0E1C             ;   8 - $7F     I - $06     S - $6D     , - $04     
2411   0E1C             ;   9 - $67     J - $1E     T - $78     - - $40     
2412   0E1C             
2413   0E1C             .end
tasm: Number of errors = 0
