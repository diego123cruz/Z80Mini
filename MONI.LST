0001   0000             ; ---------------------------------------------------------
0002   0000             ;   Z80 Mini  -  inicio 01/2022
0003   0000             ;   Diego Cruz - github.com/diego123cruz
0004   0000             ;
0005   0000             ;   Hardware baseado em: http://www.sunrise-ev.com/z80.htm
0006   0000             ;   Software próprio - em construção
0007   0000             ; ---------------------------------------------------------
0008   0000             ;   Z80@4Mhz
0009   0000             ;   ROM 32k - 28C256
0010   0000             ;   RAM 32k - 65256
0011   0000             ;   Display 7 segmentos 8 digitos
0012   0000             ;   Teclado 16 teclas + Fn (Tecla de função? ou outra coisa?)
0013   0000             ;   Entrada 40h
0014   0000             ;   Saida 40h
0015   0000             ;
0016   0000             ;
0017   0000             ; ---------------------------------------------------------
0018   0000             ;   Display 7 Segmentos - In(Port40) AND 00000111b
0019   0000             ; ---------------------------------------------------------
0020   0000             ;
0021   0000             ;   ------------------------------------------------
0022   0000             ;   | 00h | 01h | 02h | 03h | 04h | 05h | 06h | 07h |
0023   0000             ;   ------------------------------------------------
0024   0000             ;
0025   0000             ;               A(0)
0026   0000             ;            ---------
0027   0000             ;           |         |
0028   0000             ;      F(5) |         | B(1)
0029   0000             ;           |   G(6)  |
0030   0000             ;            ---------
0031   0000             ;           |         |
0032   0000             ;      E(4) |         | C(2)
0033   0000             ;           |         |
0034   0000             ;            ---------         Ponto(7)
0035   0000             ;               D(3) 
0036   0000             ;
0037   0000             ;
0038   0000             ;
0039   0000             ;
0040   0000             ;
0041   0000             ; ---------------------------------------------------------
0042   0000             ; Teclado 
0043   0000             ; ---------------------------------------------------------
0044   0000             ;   
0045   0000             ;   Keys:        
0046   0000             ;       Fn - In(Port40) AND 00010000b - pulldown
0047   0000             ;       0 - In(Port40) AND 00000111b
0048   0000             ;
0049   0000             ;
0050   0000             ;
0051   0000             ;
0052   0000             
0053   0000             
0054   0000             ; ---------------------------------------------------------
0055   0000             ; Constantes
0056   0000             ; ---------------------------------------------------------
0057   0000             
0058   0000             Port40        .equ    $40
0059   0000             PortC0        .equ    $C0
0060   0000             START_RAM     .equ    $8000
0061   0000             STACK         .equ    $FF00  
0062   0000             CKEY_TIMEOUT  .equ    100  ; 100ms +-
0063   0000             
0064   0000             ; BAUD RATE CONSTANTS
0065   0000             B300:	.EQU	0220H	;300 BAUD
0066   0000             B1200:	.EQU	0080H	;1200 BAUD
0067   0000             B2400:	.EQU	003FH	;2400 BAUD
0068   0000             B4800:	.EQU	001BH	;4800 BAUD - Default
0069   0000             B9600:	.EQU	000BH	;9600 BAUD
0070   0000             
0071   0000             ; ---------------------------------------------------------
0072   0000             ; RAM MAP - Monitor | $FF00 - $FFFF
0073   0000             ; ---------------------------------------------------------
0074   0000             ; Cada digito fica em um ponto da memoria RAM
0075   0000             DIG_0       .equ    $FF00   ;(1) endereço do digito 0 na memoria RAM
0076   0000             DIG_1       .equ    $FF01   ;(1) endereço do digito 1 na memoria RAM
0077   0000             DIG_2       .equ    $FF02   ;(1) endereço do digito 2 na memoria RAM
0078   0000             DIG_3       .equ    $FF03   ;(1) endereço do digito 3 na memoria RAM
0079   0000             DIG_4       .equ    $FF04   ;(1) endereço do digito 4 na memoria RAM
0080   0000             DIG_5       .equ    $FF05   ;(1) endereço do digito 5 na memoria RAM
0081   0000             DIG_6       .equ    $FF06   ;(1) endereço do digito 6 na memoria RAM
0082   0000             DIG_7       .equ    $FF07   ;(1) endereço do digito 7 na memoria RAM
0083   0000             KEY_PRESS   .equ    $FF08   ;(1) key atual
0084   0000             INPUT       .equ    $FF09   ;(1) temp input from int
0085   0000             TMP_KEY     .equ    $FF0A   ;(1) tmp key
0086   0000             KEY_TIMEOUT .equ    $FF0B   ;(1) tempo para retornar a tecla, CKEY_TIMEOUT
0087   0000             SHOW_DIG    .equ    $FF0C   ;(1) Atual digito no display
0088   0000             PC_RAM      .equ    $FF0D   ;(2) save pc to user start $8000
0089   0000             
0090   0000             SYSMODE     .equ    $FF0F   ;(1) System mode. 
0091   0000                                         ; 0 - User Mode
0092   0000                                         ; 1 - Monitor
0093   0000                                         ; 2 - Examine Memoria
0094   0000                                         ; 3 - Change Data(Memory)
0095   0000                                         ; 4 - Show register PC
0096   0000                                         ; 5 - Show register SP
0097   0000                                         ; 6 - Show register AF
0098   0000                                         ; 7 - Show register BC
0099   0000                                         ; 8 - Show register DE
0100   0000                                         ; 9 - Show register HL
0101   0000                                         ; A - Show register IX
0102   0000                                         ; B - Show register IY
0103   0000                                         ; C - Show register AF'
0104   0000                                         ; D - Show register BC'
0105   0000                                         ; E - Show register DE'
0106   0000                                         ; F - Show register HL'
0107   0000                                         ; 76 - HALT
0108   0000             TicCounter  .equ    $FF10   ;(2) TicCounter inc 1ms
0109   0000             EXM_COUNT   .equ    $FF12   ;(1) Count digits Examine function, 4 digits
0110   0000             MDF_COUNT   .equ    $FF13   ;(1) Count digits moDify function, 2 digits
0111   0000             USR_PC      .equ    $FF14   ;(2) PC 
0112   0000             USR_SP      .equ    $FF16   ;(2) SP
0113   0000             USR_HL      .equ    $FF18   ;(2) HL
0114   0000             USR_BC      .equ    $FF1A   ;(2) BC
0115   0000             USR_DE      .equ    $FF1C   ;(2) DE
0116   0000             USR_AF      .equ    $FF1E   ;(2) AF
0117   0000             USR_IX      .equ    $FF20   ;(2) IX
0118   0000             USR_IY      .equ    $FF22   ;(2) IY
0119   0000             USR_AFA     .equ    $FF24   ;(2) AF' (Aux)
0120   0000             USR_BCA     .equ    $FF26   ;(2) BC' (Aux)
0121   0000             USR_DEA     .equ    $FF28   ;(2) DE' (Aux)
0122   0000             USR_HLA     .equ    $FF2A   ;(2) HL' (Aux)
0123   0000             ; SP Temp   .equ    $FF2C
0124   0000             CPU_FLAGS   .equ    $FF2C   ;(1) Flags atual (AF ou AF') SYSMODE
0125   0000             INT_VEC     .equ    $FF2D   ;(2) vector int38
0126   0000             
0127   0000             ; Serial intel hex loader
0128   0000             BAUD	    .equ	$FF30	;(2) BAUD RATE
0129   0000             PUTCH       .equ    $FF32   ;(2) OUTPUT A CHARACTER TO SERIAL
0130   0000             GETCH       .equ    $FF34   ;(2) WAIT FOR A CHARACTER FROM SERIAL
0131   0000             
0132   0000             
0133   0000             ; Copy USER_DISPx to DIG_x WHEN USER_MODE
0134   0000             USER_DISP0  .equ    $FFD0   ; Mode User - Display Dig 0  - 01234567
0135   0000             USER_DISP1  .equ    $FFD1   ; Mode User - Display Dig 1  - 01234567
0136   0000             USER_DISP2  .equ    $FFD2   ; Mode User - Display Dig 2  - 01234567
0137   0000             USER_DISP3  .equ    $FFD3   ; Mode User - Display Dig 3  - 01234567
0138   0000             USER_DISP4  .equ    $FFD4   ; Mode User - Display Dig 4  - 01234567
0139   0000             USER_DISP5  .equ    $FFD5   ; Mode User - Display Dig 5  - 01234567
0140   0000             USER_DISP6  .equ    $FFD6   ; Mode User - Display Dig 6  - 01234567
0141   0000             USER_DISP7  .equ    $FFD7   ; Mode User - Display Dig 7  - 01234567
0142   0000             
0143   0000             
0144   0000             
0145   0000             ; =========================================================
0146   0000             ; Start ROM
0147   0000             ; =========================================================
0148   0000             .org    $0000
0149   0000 21 66 00        LD  HL, INT38
0150   0003 22 2D FF        LD  (INT_VEC), HL
0151   0006 C3 A9 0A        JP  START
0152   0009             
0153   0009             ; =========================================================
0154   0009             ; Livre para colocar funções 0003h - 0037h 
0155   0009             ; =========================================================
0156   0009             
0157   0009             ; DELAY_100mS
0158   0009             
0159   0009             ; char7segFromA
0160   0009             
0161   0009             ; animacaoLeds
0162   0009             
0163   0009             ; Limpar RAM (FF).... etc
0164   0009             
0165   0009             
0166   0009             ; =========================================================
0167   0009             ; Int 38h - Monitor 
0168   0009             ; =========================================================
0169   0038             .org    $38
0170   0038 F3              DI
0171   0039 22 18 FF        LD (USR_HL), HL          ; Save HL
0172   003C 2A 2D FF        LD HL, (INT_VEC)
0173   003F E9              JP (HL)
0174   0040             
0175   0040             INT_ERROR:
0176   0040 F3              DI
0177   0041 F5              PUSH AF
0178   0042 E5              PUSH HL
0179   0043             
0180   0043 21 66 00        LD  HL, INT38
0181   0046 22 2D FF        LD  (INT_VEC), HL
0182   0049             
0183   0049 3E 99           LD A, $99
0184   004B 32 0F FF        LD (SYSMODE), A
0185   004E             
0186   004E E1              POP HL
0187   004F F1              POP AF
0188   0050                 
0189   0050 C3 EF 0A        JP START_WARM
0190   0053             
0191   0053             INT_HALT:
0192   0053 F3              DI
0193   0054 F5              PUSH AF
0194   0055 E5              PUSH HL
0195   0056             
0196   0056 21 66 00        LD  HL, INT38
0197   0059 22 2D FF        LD  (INT_VEC), HL
0198   005C             
0199   005C 3E 76           LD A, $76
0200   005E 32 0F FF        LD (SYSMODE), A
0201   0061             
0202   0061 E1              POP HL
0203   0062 F1              POP AF
0204   0063                 
0205   0063 C3 EF 0A        JP START_WARM
0206   0066             
0207   0066             
0208   0066             INT38:
0209   0066 ED 73 16 FF     LD (USR_SP), SP          ; Save SP
0210   006A                 ;LD (USR_HL), HL          ; Save HL
0211   006A E1              POP  HL                  ; Recupera PC da stack
0212   006B 22 14 FF        LD (USR_PC), HL          ; Save PC
0213   006E E5              PUSH HL                  ;
0214   006F 21 2C FF        LD HL, $FF2C             ; Carrega Temp SP to HL
0215   0072 F9              LD SP, HL                ; Set temp HL
0216   0073 D9              EXX                      ; Inverte HL e HL', DE.... BC....
0217   0074 E5              PUSH  HL                 ; Save HL'
0218   0075 D5              PUSH  DE                 ; Save DE'                
0219   0076 C5              PUSH  BC                 ; Save BC'
0220   0077 08              EX    AF, AF'
0221   0078 F5              PUSH  AF                 ; Save AF'
0222   0079 08              EX    AF, AF'
0223   007A D9              EXX                      ; Troca HL' e HL,, DE... BC...
0224   007B FD E5           PUSH  IY                 ; Save IY
0225   007D DD E5           PUSH  IX                 ; Save IX
0226   007F F5              PUSH  AF                 ; Save AF
0227   0080 D5              PUSH  DE                 ; Save DE
0228   0081 C5              PUSH  BC                 ; Save BC
0229   0082 2A 16 FF        LD HL, (USR_SP)          ; Recupera SP
0230   0085 F9              LD SP, HL                ; Devolve SP original
0231   0086             
0232   0086                 ; check HALT
0233   0086 2A 16 FF        LD HL, (USR_SP)
0234   0089 CD F7 0A        CALL LD_HL_HL
0235   008C 2B              DEC HL
0236   008D 7E              LD  A, (HL)
0237   008E FE 76           CP  $76    ; halt code
0238   0090 CA 96 00        JP  Z, C_HALT
0239   0093 C3 CA 00        jp SKIP_CHK
0240   0096             
0241   0096             C_HALT:
0242   0096 21 53 00        LD HL, INT_HALT
0243   0099 22 2D FF        LD (INT_VEC), HL
0244   009C             
0245   009C 3E 76           LD A, $76
0246   009E 32 0F FF        LD  (SYSMODE), A
0247   00A1             
0248   00A1 E1              POP HL                   ; Troca o PC
0249   00A2 2A 14 FF        LD HL, (USR_PC)          ; Recupera PC
0250   00A5 E5              PUSH HL                  ; Devolve PC to stack
0251   00A6             
0252   00A6 2A 24 FF        LD HL, (USR_AFA)          ; Load AF' in HL
0253   00A9 E5              PUSH  HL                 ; Push AF'
0254   00AA F1              POP AF                   ; Recovery AF'
0255   00AB 08              EX AF, AF'
0256   00AC             
0257   00AC 2A 2A FF        LD HL, (USR_HLA)          ; Recovery HL'
0258   00AF ED 5B 28 FF     LD DE, (USR_DEA)          ; Recovery DE'
0259   00B3 ED 4B 26 FF     LD BC, (USR_BCA)          ; Recovery BC'
0260   00B7 D9              EXX
0261   00B8             
0262   00B8 2A 1E FF        LD HL, (USR_AF)          ; Load AF in HL
0263   00BB E5              PUSH  HL                 ; Push AF
0264   00BC F1              POP AF                   ; Recovery AF
0265   00BD             
0266   00BD 2A 18 FF        LD HL, (USR_HL)          ; Recovery HL
0267   00C0 ED 5B 1C FF     LD DE, (USR_DE)          ; Recovery DE
0268   00C4 ED 4B 1A FF     LD BC, (USR_BC)          ; Recovery BC
0269   00C8             
0270   00C8 FB              EI
0271   00C9 76              HALT                     ; aguarda proxima int
0272   00CA             
0273   00CA             SKIP_CHK:
0274   00CA                 ; TicCounter
0275   00CA 2A 10 FF        LD  HL, (TicCounter)     ; Increment 1ms, used to DELAY_A
0276   00CD 23              INC  HL
0277   00CE 22 10 FF        LD  (TicCounter), HL
0278   00D1             
0279   00D1                 ; Timeout Key
0280   00D1 3A 0B FF         LD A, (KEY_TIMEOUT)
0281   00D4 FE 00            CP 0
0282   00D6 CA DD 00         JP Z, ENTER_MAIN
0283   00D9 3D               DEC A
0284   00DA 32 0B FF         LD (KEY_TIMEOUT), A
0285   00DD             
0286   00DD                 ; Main
0287   00DD             ENTER_MAIN:
0288   00DD CD 18 01        CALL UPDATE_DISPLAYS
0289   00E0 CD 34 01        CALL UPDATE_KEYS
0290   00E3 CD 83 01        CALL UPDATE_FLAGS
0291   00E6             
0292   00E6                 ; Show atual digit
0293   00E6 3A 0C FF        LD  A, (SHOW_DIG)
0294   00E9 D3 40           OUT (Port40), A
0295   00EB             
0296   00EB                 ;CALL    TRATAMENTO_INT38H; Get key, update display   
0297   00EB C3 33 02        JP      SYS_MAIN         ; Execute function monitor
0298   00EE             
0299   00EE             EXIT_SYS:
0300   00EE E1              POP HL                   ; Troca o PC
0301   00EF 2A 14 FF        LD HL, (USR_PC)          ; Recupera PC
0302   00F2 E5              PUSH HL                  ; Devolve PC to stack
0303   00F3             
0304   00F3 2A 24 FF        LD HL, (USR_AFA)          ; Load AF' in HL
0305   00F6 E5              PUSH  HL                 ; Push AF'
0306   00F7 F1              POP AF                   ; Recovery AF'
0307   00F8 08              EX AF, AF'
0308   00F9             
0309   00F9 2A 2A FF        LD HL, (USR_HLA)          ; Recovery HL'
0310   00FC ED 5B 28 FF     LD DE, (USR_DEA)          ; Recovery DE'
0311   0100 ED 4B 26 FF     LD BC, (USR_BCA)          ; Recovery BC'
0312   0104 D9              EXX
0313   0105             
0314   0105 2A 1E FF        LD HL, (USR_AF)          ; Load AF in HL
0315   0108 E5              PUSH  HL                 ; Push AF
0316   0109 F1              POP AF                   ; Recovery AF
0317   010A             
0318   010A 2A 18 FF        LD HL, (USR_HL)          ; Recovery HL
0319   010D ED 5B 1C FF     LD DE, (USR_DE)          ; Recovery DE
0320   0111 ED 4B 1A FF     LD BC, (USR_BC)          ; Recovery BC
0321   0115             
0322   0115 FB              EI                       ; Enable interrupt
0323   0116 ED 4D           RETI                     ; Return interrupt
0324   0118             
0325   0118             
0326   0118             ; =========================================================
0327   0118             ; Update display - Tratamento Int 38h
0328   0118             ; =========================================================
0329   0118             UPDATE_DISPLAYS:    
0330   0118 DB 40           IN    A, (Port40)
0331   011A 32 09 FF        LD    (INPUT), A
0332   011D E6 07           AND   $07
0333   011F FE 08           CP    $08
0334   0121 D2 33 01        JP    NC, UPDATE_DISPLAYS_RET ; IF A > 7 RET
0335   0124 3C              INC   A
0336   0125 FE 08           CP    $08
0337   0127 C2 2C 01        JP    NZ, UPDATE_DISPLAYS_OK
0338   012A 3E 00           LD    A, $00
0339   012C             UPDATE_DISPLAYS_OK:
0340   012C 26 FF           LD    H, $FF
0341   012E 6F              LD    L, A
0342   012F 7E              LD    A, (HL)
0343   0130 32 0C FF        LD   (SHOW_DIG), A
0344   0133             UPDATE_DISPLAYS_RET:
0345   0133 C9              RET
0346   0134             
0347   0134             ; =========================================================
0348   0134             ; Update KEY - Tratamento Int 38h
0349   0134             ; =========================================================
0350   0134             UPDATE_KEYS:    
0351   0134 DB 40           IN    A, (Port40)
0352   0136 32 09 FF        LD    (INPUT), A
0353   0139 E6 07           AND   $07
0354   013B FE 08           CP    $08
0355   013D D2 66 01        JP    NC, UPDATE_KEY_RET ; IF A > 7 RET
0356   0140 3A 09 FF        LD  A,  (INPUT)
0357   0143 CB 5F           BIT  3, A
0358   0145 CA 67 01        JP  Z, TRATAB3
0359   0148 3A 09 FF        LD  A,  (INPUT)
0360   014B CB 67           BIT  4, A
0361   014D CA 6D 01        JP  Z, TRATAB4
0362   0150 C3 66 01        JP  UPDATE_KEY_RET
0363   0153             UPDATE_KEY_GET:
0364   0153 32 09 FF        LD    (INPUT), A
0365   0156 E6 07           AND   $07
0366   0158 01 00 00        LD    BC, 0
0367   015B 4F              LD    C, A
0368   015C 09              ADD   HL, BC
0369   015D 7E              LD    A, (HL)
0370   015E 32 08 FF        LD   (KEY_PRESS), A
0371   0161 3E 64           LD A, CKEY_TIMEOUT
0372   0163 32 0B FF        LD (KEY_TIMEOUT), A
0373   0166             UPDATE_KEY_RET:
0374   0166 C9              RET
0375   0167             
0376   0167             TRATAB3:
0377   0167 21 73 01        LD    HL, KEYSB3
0378   016A C3 53 01        JP  UPDATE_KEY_GET
0379   016D             
0380   016D             TRATAB4:
0381   016D 21 7B 01        LD    HL, KEYSB4
0382   0170 C3 53 01        JP  UPDATE_KEY_GET
0383   0173             
0384   0173 000104070F02KEYSB3 .db $00, $01, $04, $07, $0F, $02, $05, $08
0384   0179 0508
0385   017B 0E0306090D0CKEYSB4 .db $0E, $03, $06, $09, $0D, $0C, $0B, $0A
0385   0181 0B0A
0386   0183             
0387   0183             
0388   0183             ; =========================================================
0389   0183             ; Update Flags - Tratamento Int 38h
0390   0183             ; =========================================================
0391   0183             UPDATE_FLAGS:
0392   0183 3A 0F FF        LD    A, (SYSMODE)
0393   0186 FE 06           CP    $06
0394   0188 CA 91 01        JP    Z, UPDATE_FLAGS_MAIN
0395   018B FE 0C           CP    $0C
0396   018D CA 91 01        JP    Z, UPDATE_FLAGS_MAIN
0397   0190             UPDATE_FLAGS_RET:
0398   0190 C9              RET
0399   0191             
0400   0191             UPDATE_FLAGS_MAIN:
0401   0191 3A 09 FF        LD    A, (INPUT)
0402   0194 E6 07           AND   $07
0403   0196             
0404   0196 FE 07           CP    $07
0405   0198 CA C1 01        JP    Z, UPDATE_FLAG_S
0406   019B FE 00           CP    $00
0407   019D CA CD 01        JP    Z, UPDATE_FLAG_Z
0408   01A0 FE 01           CP    $01
0409   01A2 CA D9 01        JP    Z, UPDATE_FLAG_X1
0410   01A5 FE 02           CP    $02
0411   01A7 CA E5 01        JP    Z, UPDATE_FLAG_H
0412   01AA FE 03           CP    $03
0413   01AC CA F1 01        JP    Z, UPDATE_FLAG_X2
0414   01AF FE 04           CP    $04
0415   01B1 CA FD 01        JP    Z, UPDATE_FLAG_PV
0416   01B4 FE 05           CP    $05
0417   01B6 CA 09 02        JP    Z, UPDATE_FLAG_N
0418   01B9 FE 06           CP    $06
0419   01BB CA 15 02        JP    Z, UPDATE_FLAG_C
0420   01BE C3 90 01        JP    UPDATE_FLAGS_RET
0421   01C1             
0422   01C1             UPDATE_FLAG_S:
0423   01C1 CD 21 02        CALL  SHOW_DIG_FLAG_ON
0424   01C4 3A 2C FF        LD  A, (CPU_FLAGS)
0425   01C7 CB 7F           BIT 7, A
0426   01C9 CC 2A 02        CALL Z, SHOW_DIG_FLAG_OFF
0427   01CC C9              RET
0428   01CD             
0429   01CD             UPDATE_FLAG_Z:
0430   01CD CD 21 02        CALL  SHOW_DIG_FLAG_ON
0431   01D0 3A 2C FF        LD  A, (CPU_FLAGS)
0432   01D3 CB 77           BIT 6, A
0433   01D5 CC 2A 02        CALL Z, SHOW_DIG_FLAG_OFF
0434   01D8 C9              RET
0435   01D9             
0436   01D9             UPDATE_FLAG_X1:
0437   01D9 CD 21 02        CALL  SHOW_DIG_FLAG_ON
0438   01DC 3A 2C FF        LD  A, (CPU_FLAGS)
0439   01DF CB 6F           BIT 5, A
0440   01E1 CC 2A 02        CALL Z, SHOW_DIG_FLAG_OFF
0441   01E4 C9              RET
0442   01E5             
0443   01E5             UPDATE_FLAG_H:
0444   01E5 CD 21 02        CALL  SHOW_DIG_FLAG_ON
0445   01E8 3A 2C FF        LD  A, (CPU_FLAGS)
0446   01EB CB 67           BIT 4, A
0447   01ED CC 2A 02        CALL Z, SHOW_DIG_FLAG_OFF
0448   01F0 C9              RET
0449   01F1             
0450   01F1             UPDATE_FLAG_X2:
0451   01F1 CD 21 02        CALL  SHOW_DIG_FLAG_ON
0452   01F4 3A 2C FF        LD  A, (CPU_FLAGS)
0453   01F7 CB 5F           BIT 3, A
0454   01F9 CC 2A 02        CALL Z, SHOW_DIG_FLAG_OFF
0455   01FC C9              RET
0456   01FD             
0457   01FD             UPDATE_FLAG_PV:
0458   01FD CD 21 02        CALL  SHOW_DIG_FLAG_ON
0459   0200 3A 2C FF        LD  A, (CPU_FLAGS)
0460   0203 CB 57           BIT 2, A
0461   0205 CC 2A 02        CALL Z, SHOW_DIG_FLAG_OFF
0462   0208 C9              RET
0463   0209             
0464   0209             UPDATE_FLAG_N:
0465   0209 CD 21 02        CALL  SHOW_DIG_FLAG_ON
0466   020C 3A 2C FF        LD  A, (CPU_FLAGS)
0467   020F CB 4F           BIT 1, A
0468   0211 CC 2A 02        CALL Z, SHOW_DIG_FLAG_OFF
0469   0214 C9              RET
0470   0215             
0471   0215             UPDATE_FLAG_C:
0472   0215 CD 21 02        CALL  SHOW_DIG_FLAG_ON
0473   0218 3A 2C FF        LD  A, (CPU_FLAGS)
0474   021B CB 47           BIT 0, A
0475   021D CC 2A 02        CALL Z, SHOW_DIG_FLAG_OFF
0476   0220 C9              RET
0477   0221             
0478   0221             SHOW_DIG_FLAG_ON:
0479   0221 3A 0C FF        LD  A, (SHOW_DIG)
0480   0224 F6 80           OR  $80
0481   0226 32 0C FF        LD  (SHOW_DIG), A
0482   0229 C9              RET
0483   022A             
0484   022A             SHOW_DIG_FLAG_OFF:
0485   022A 3A 0C FF        LD  A, (SHOW_DIG)
0486   022D E6 7F           AND  $7F
0487   022F 32 0C FF        LD  (SHOW_DIG), A 
0488   0232 C9              RET
0489   0233             
0490   0233             ; =========================================================
0491   0233             ; SYS MAIN
0492   0233             ; =========================================================
0493   0233             SYS_MAIN:
0494   0233 3A 0F FF        LD  A, (SYSMODE)
0495   0236 FE 00           CP  $00                  ; User mode can back to monitor
0496   0238 CA C4 07        JP  Z, USER_MODE        
0497   023B             
0498   023B 3A 0F FF        LD  A, (SYSMODE)
0499   023E FE 01           CP  $01                  ; monitor
0500   0240 CA DA 07        JP  Z, MONITOR_MODE
0501   0243             
0502   0243 3A 0F FF        LD  A,  (SYSMODE)
0503   0246 FE 02           CP  $02                  ; Examine RAM
0504   0248 CA C6 02        JP  Z, EXAMINE_RAM
0505   024B             
0506   024B 3A 0F FF        LD  A, (SYSMODE)
0507   024E FE 03           CP  $03                  ; Modify Data (Memory)
0508   0250 CA 5F 03        JP  Z,  MODIFY_RAM
0509   0253             
0510   0253 3A 0F FF        LD  A, (SYSMODE)
0511   0256 FE 04           CP  $04                  ; Show register PC
0512   0258 CA AE 03        JP  Z,  SHOW_REG_PC
0513   025B             
0514   025B 3A 0F FF        LD  A, (SYSMODE)
0515   025E FE 05           CP  $05                  ; Show register SP
0516   0260 CA F6 03        JP  Z,  SHOW_REG_SP
0517   0263             
0518   0263 3A 0F FF        LD  A, (SYSMODE)
0519   0266 FE 06           CP  $06                  ; Show register AF
0520   0268 CA 41 04        JP  Z,  SHOW_REG_AF
0521   026B             
0522   026B 3A 0F FF        LD  A, (SYSMODE)
0523   026E FE 07           CP  $07                  ; Show register BC
0524   0270 CA 90 04        JP  Z,  SHOW_REG_BC
0525   0273             
0526   0273 3A 0F FF        LD  A, (SYSMODE)
0527   0276 FE 08           CP  $08                  ; Show register DE
0528   0278 CA DB 04        JP  Z,  SHOW_REG_DE
0529   027B             
0530   027B 3A 0F FF        LD  A, (SYSMODE)
0531   027E FE 09           CP  $09                  ; Show register HL
0532   0280 CA 26 05        JP  Z,  SHOW_REG_HL
0533   0283             
0534   0283 3A 0F FF        LD  A, (SYSMODE)
0535   0286 FE 0A           CP  $0A                  ; Show register IX
0536   0288 CA 71 05        JP  Z,  SHOW_REG_IX
0537   028B             
0538   028B 3A 0F FF        LD  A, (SYSMODE)
0539   028E FE 0B           CP  $0B                  ; Show register IY
0540   0290 CA BC 05        JP  Z,  SHOW_REG_IY
0541   0293             
0542   0293 3A 0F FF        LD  A, (SYSMODE)
0543   0296 FE 0C           CP  $0C                  ; Show register AF'
0544   0298 CA 07 06        JP  Z,  SHOW_REG_AFaux
0545   029B             
0546   029B 3A 0F FF        LD  A, (SYSMODE)
0547   029E FE 0D           CP  $0D                  ; Show register BC'
0548   02A0 CA 5B 06        JP  Z,  SHOW_REG_BCaux
0549   02A3             
0550   02A3 3A 0F FF        LD  A, (SYSMODE)
0551   02A6 FE 0E           CP  $0E                  ; Show register DE'
0552   02A8 CA AB 06        JP  Z,  SHOW_REG_DEaux
0553   02AB             
0554   02AB 3A 0F FF        LD  A, (SYSMODE)
0555   02AE FE 0F           CP  $0F                  ; Show register HL'
0556   02B0 CA FB 06        JP  Z,  SHOW_REG_HLaux
0557   02B3             
0558   02B3             
0559   02B3 3A 0F FF        LD  A, (SYSMODE)        ; Show HALT
0560   02B6 FE 76           CP  $76
0561   02B8 CA 4B 07        JP  Z, SHOW_HALT
0562   02BB             
0563   02BB 3A 0F FF        LD  A, (SYSMODE)        ; Show ERROR
0564   02BE FE 99           CP  $99
0565   02C0 CA 7A 07        JP  Z, SHOW_ERROR
0566   02C3             
0567   02C3 C3 EE 00        JP  EXIT_SYS
0568   02C6             
0569   02C6             
0570   02C6             ; =========================================================
0571   02C6             ; Examine RAM Mode
0572   02C6             ; =========================================================
0573   02C6             EXAMINE_RAM:
0574   02C6 CD A9 07        CALL GET_KEY_A
0575   02C9 FE FF           CP  $FF
0576   02CB CA EE 00        JP  Z, EXIT_SYS
0577   02CE             
0578   02CE F5              PUSH  AF
0579   02CF F5              PUSH  AF
0580   02D0 3A 12 FF        LD  A, (EXM_COUNT)
0581   02D3 FE 03           CP  3
0582   02D5 CA F3 02        JP  Z, EXAMINE_KEY_POS_3
0583   02D8             
0584   02D8 3A 12 FF        LD  A, (EXM_COUNT)
0585   02DB FE 02           CP  2
0586   02DD CA 11 03        JP  Z, EXAMINE_KEY_POS_2
0587   02E0             
0588   02E0 3A 12 FF        LD  A, (EXM_COUNT)
0589   02E3 FE 01           CP  1
0590   02E5 CA 2B 03        JP  Z, EXAMINE_KEY_POS_1
0591   02E8             
0592   02E8 3A 12 FF        LD  A, (EXM_COUNT)
0593   02EB FE 00           CP  0
0594   02ED CA 4C 03        JP  Z, EXAMINE_KEY_POS_0
0595   02F0             
0596   02F0 C3 EE 00        JP  EXIT_SYS
0597   02F3             
0598   02F3             EXAMINE_KEY_POS_3:
0599   02F3 F1              POP  AF
0600   02F4 CB 07           RLC  A
0601   02F6 CB 07           RLC  A
0602   02F8 CB 07           RLC  A
0603   02FA CB 07           RLC  A
0604   02FC 67              LD  H, A
0605   02FD 22 0D FF        LD  (PC_RAM), HL
0606   0300 F1              POP  AF
0607   0301 CD 9A 09        CALL GET_NUM_FROM_LOW
0608   0304 32 00 FF        LD  (DIG_0), A
0609   0307 3A 12 FF        LD  A, (EXM_COUNT)
0610   030A 3D              DEC A
0611   030B 32 12 FF        LD  (EXM_COUNT), A
0612   030E C3 EE 00        JP  EXIT_SYS
0613   0311             
0614   0311             
0615   0311             EXAMINE_KEY_POS_2:
0616   0311 F1              POP  AF
0617   0312 2A 0D FF        LD  HL, (PC_RAM)
0618   0315 B4              OR  H
0619   0316 67              LD  H, A
0620   0317 22 0D FF        LD  (PC_RAM), HL
0621   031A F1              POP  AF
0622   031B CD 9A 09        CALL GET_NUM_FROM_LOW
0623   031E 32 01 FF        LD  (DIG_1), A
0624   0321 3A 12 FF        LD  A, (EXM_COUNT)
0625   0324 3D              DEC A
0626   0325 32 12 FF        LD  (EXM_COUNT), A
0627   0328 C3 EE 00        JP  EXIT_SYS
0628   032B             
0629   032B             EXAMINE_KEY_POS_1:
0630   032B F1              POP  AF
0631   032C 2A 0D FF        LD  HL, (PC_RAM)
0632   032F CB 07           RLC  A
0633   0331 CB 07           RLC  A
0634   0333 CB 07           RLC  A
0635   0335 CB 07           RLC  A
0636   0337 6F              LD  L, A
0637   0338 22 0D FF        LD  (PC_RAM), HL
0638   033B F1              POP  AF
0639   033C CD 9A 09        CALL GET_NUM_FROM_LOW
0640   033F 32 02 FF        LD  (DIG_2), A
0641   0342 3A 12 FF        LD  A, (EXM_COUNT)
0642   0345 3D              DEC A
0643   0346 32 12 FF        LD  (EXM_COUNT), A
0644   0349 C3 EE 00        JP  EXIT_SYS
0645   034C             
0646   034C             
0647   034C             EXAMINE_KEY_POS_0:
0648   034C F1              POP  AF
0649   034D 2A 0D FF        LD  HL, (PC_RAM)
0650   0350 B5              OR  L
0651   0351 6F              LD  L, A
0652   0352 22 0D FF        LD  (PC_RAM), HL
0653   0355 F1              POP  AF
0654   0356 CD 9A 09        CALL GET_NUM_FROM_LOW
0655   0359 32 03 FF        LD  (DIG_3), A
0656   035C C3 BB 08        JP  GO_MONITOR
0657   035F             
0658   035F             ; =========================================================
0659   035F             ; MODIFY RAM Mode
0660   035F             ; =========================================================
0661   035F             MODIFY_RAM:
0662   035F             
0663   035F CD A9 07        CALL GET_KEY_A
0664   0362 FE FF           CP  $FF
0665   0364 CA EE 00        JP  Z, EXIT_SYS
0666   0367             
0667   0367 F5              PUSH  AF
0668   0368 F5              PUSH  AF
0669   0369 3A 13 FF        LD  A, (MDF_COUNT)
0670   036C FE 01           CP  1
0671   036E CA 7C 03        JP  Z, MODIFY_KEY_POS_1
0672   0371             
0673   0371 3A 13 FF        LD  A, (MDF_COUNT)
0674   0374 FE 00           CP  0
0675   0376 CA 9A 03        JP  Z, MODIFY_KEY_POS_0
0676   0379             
0677   0379 C3 EE 00        JP  EXIT_SYS
0678   037C             
0679   037C             MODIFY_KEY_POS_1:
0680   037C F1              POP  AF
0681   037D CB 07           RLC  A
0682   037F CB 07           RLC  A
0683   0381 CB 07           RLC  A
0684   0383 CB 07           RLC  A
0685   0385 2A 0D FF        LD  HL, (PC_RAM)
0686   0388 77              LD  (HL), A
0687   0389             
0688   0389 F1              POP  AF
0689   038A CD 9A 09        CALL GET_NUM_FROM_LOW
0690   038D 32 06 FF        LD  (DIG_6), A
0691   0390 3A 13 FF        LD  A, (MDF_COUNT)
0692   0393 3D              DEC A
0693   0394 32 13 FF        LD  (MDF_COUNT), A
0694   0397 C3 EE 00        JP  EXIT_SYS
0695   039A             
0696   039A             MODIFY_KEY_POS_0:
0697   039A F1              POP  AF
0698   039B 2A 0D FF        LD  HL, (PC_RAM)
0699   039E 46              LD  B, (HL)
0700   039F B0              OR  B
0701   03A0 2A 0D FF        LD  HL, (PC_RAM)
0702   03A3 77              LD  (HL), A
0703   03A4             
0704   03A4 F1              POP  AF
0705   03A5 CD 9A 09        CALL GET_NUM_FROM_LOW
0706   03A8 32 07 FF        LD  (DIG_7), A
0707   03AB C3 BB 08        JP  GO_MONITOR
0708   03AE                 
0709   03AE             
0710   03AE             SHOW_REG_PC:
0711   03AE CD A9 07        CALL  GET_KEY_A
0712   03B1 FE 00           CP  $00
0713   03B3 CA BB 08        JP Z, GO_MONITOR
0714   03B6 FE 01           CP  $01
0715   03B8 CA C6 08        JP Z, GO_SHOW_REG_PC
0716   03BB FE 02           CP  $02
0717   03BD CA D1 08        JP Z, GO_SHOW_REG_SP
0718   03C0 FE 03           CP  $03
0719   03C2 CA DC 08        JP Z, GO_SHOW_REG_AF
0720   03C5 FE 04           CP  $04
0721   03C7 CA E7 08        JP Z, GO_SHOW_REG_BC
0722   03CA FE 05           CP  $05
0723   03CC CA F2 08        JP Z, GO_SHOW_REG_DE
0724   03CF FE 06           CP  $06
0725   03D1 CA FD 08        JP Z, GO_SHOW_REG_HL
0726   03D4 FE 07           CP  $07
0727   03D6 CA 08 09        JP Z, GO_SHOW_REG_IX
0728   03D9 FE 08           CP  $08
0729   03DB CA 13 09        JP Z, GO_SHOW_REG_IY
0730   03DE             
0731   03DE 3E 50           LD  A, $50               ; R
0732   03E0 32 00 FF        LD  (DIG_0), A
0733   03E3             
0734   03E3 3E 73           LD  A, $73               ; P
0735   03E5 32 01 FF        LD  (DIG_1), A
0736   03E8             
0737   03E8 3E 39           LD  A, $39
0738   03EA 32 02 FF        LD  (DIG_2), A           ; C
0739   03ED             
0740   03ED 2A 14 FF        LD HL, (USR_PC)
0741   03F0 CD 4C 0A        CALL PRINT_END_HL
0742   03F3 C3 EE 00        JP  EXIT_SYS
0743   03F6             
0744   03F6             
0745   03F6             SHOW_REG_SP:
0746   03F6 CD A9 07        CALL  GET_KEY_A
0747   03F9 FE 00           CP  $00
0748   03FB CA BB 08        JP Z, GO_MONITOR
0749   03FE FE 01           CP  $01
0750   0400 CA C6 08        JP Z, GO_SHOW_REG_PC
0751   0403 FE 02           CP  $02
0752   0405 CA D1 08        JP Z, GO_SHOW_REG_SP
0753   0408 FE 03           CP  $03
0754   040A CA DC 08        JP Z, GO_SHOW_REG_AF
0755   040D FE 04           CP  $04
0756   040F CA E7 08        JP Z, GO_SHOW_REG_BC
0757   0412 FE 05           CP  $05
0758   0414 CA F2 08        JP Z, GO_SHOW_REG_DE
0759   0417 FE 06           CP  $06
0760   0419 CA FD 08        JP Z, GO_SHOW_REG_HL
0761   041C FE 07           CP  $07
0762   041E CA 08 09        JP Z, GO_SHOW_REG_IX
0763   0421 FE 08           CP  $08
0764   0423 CA 13 09        JP Z, GO_SHOW_REG_IY
0765   0426             
0766   0426 CD 60 09        CALL  CLEAR_DISPLAY
0767   0429             
0768   0429 3E 50           LD  A, $50               ; R
0769   042B 32 00 FF        LD  (DIG_0), A
0770   042E             
0771   042E 3E 6D           LD  A, $6D               ; S
0772   0430 32 01 FF        LD  (DIG_1), A
0773   0433             
0774   0433 3E 73           LD  A, $73               ; P
0775   0435 32 02 FF        LD  (DIG_2), A
0776   0438             
0777   0438 2A 16 FF        LD HL, (USR_SP)
0778   043B CD 4C 0A        CALL PRINT_END_HL
0779   043E C3 EE 00        JP  EXIT_SYS
0780   0441             
0781   0441             
0782   0441             SHOW_REG_AF:
0783   0441 CD A9 07        CALL  GET_KEY_A
0784   0444 FE 00           CP  $00
0785   0446 CA BB 08        JP Z, GO_MONITOR
0786   0449 FE 01           CP  $01
0787   044B CA C6 08        JP Z, GO_SHOW_REG_PC
0788   044E FE 02           CP  $02
0789   0450 CA D1 08        JP Z, GO_SHOW_REG_SP
0790   0453 FE 03           CP  $03
0791   0455 CA 1E 09        JP Z, GO_SHOW_REG_AFaux
0792   0458 FE 04           CP  $04
0793   045A CA E7 08        JP Z, GO_SHOW_REG_BC
0794   045D FE 05           CP  $05
0795   045F CA F2 08        JP Z, GO_SHOW_REG_DE
0796   0462 FE 06           CP  $06
0797   0464 CA FD 08        JP Z, GO_SHOW_REG_HL
0798   0467 FE 07           CP  $07
0799   0469 CA 08 09        JP Z, GO_SHOW_REG_IX
0800   046C FE 08           CP  $08
0801   046E CA 13 09        JP Z, GO_SHOW_REG_IY
0802   0471             
0803   0471 CD 60 09        CALL  CLEAR_DISPLAY
0804   0474             
0805   0474 3E 50           LD  A, $50               ; R
0806   0476 32 00 FF        LD  (DIG_0), A
0807   0479             
0808   0479 3E 77           LD  A, $77               ; A
0809   047B 32 01 FF        LD  (DIG_1), A
0810   047E             
0811   047E 3E 71           LD  A, $71               ; F
0812   0480 32 02 FF        LD  (DIG_2), A
0813   0483             
0814   0483 2A 1E FF        LD  HL, (USR_AF)
0815   0486 7D              LD  A, L
0816   0487 32 2C FF        LD (CPU_FLAGS), A
0817   048A CD 4C 0A        CALL PRINT_END_HL
0818   048D C3 EE 00        JP  EXIT_SYS
0819   0490             
0820   0490             
0821   0490             SHOW_REG_BC:
0822   0490 CD A9 07        CALL  GET_KEY_A
0823   0493 FE 00           CP  $00
0824   0495 CA BB 08        JP Z, GO_MONITOR
0825   0498 FE 01           CP  $01
0826   049A CA C6 08        JP Z, GO_SHOW_REG_PC
0827   049D FE 02           CP  $02
0828   049F CA D1 08        JP Z, GO_SHOW_REG_SP
0829   04A2 FE 03           CP  $03
0830   04A4 CA DC 08        JP Z, GO_SHOW_REG_AF
0831   04A7 FE 04           CP  $04
0832   04A9 CA 29 09        JP Z, GO_SHOW_REG_BCaux
0833   04AC FE 05           CP  $05
0834   04AE CA F2 08        JP Z, GO_SHOW_REG_DE
0835   04B1 FE 06           CP  $06
0836   04B3 CA FD 08        JP Z, GO_SHOW_REG_HL
0837   04B6 FE 07           CP  $07
0838   04B8 CA 08 09        JP Z, GO_SHOW_REG_IX
0839   04BB FE 08           CP  $08
0840   04BD CA 13 09        JP Z, GO_SHOW_REG_IY
0841   04C0             
0842   04C0 CD 60 09        CALL  CLEAR_DISPLAY
0843   04C3             
0844   04C3 3E 50           LD  A, $50               ; R
0845   04C5 32 00 FF        LD  (DIG_0), A
0846   04C8             
0847   04C8 3E 7C           LD  A, $7C               ; B
0848   04CA 32 01 FF        LD  (DIG_1), A
0849   04CD             
0850   04CD 3E 39           LD  A, $39               ; C
0851   04CF 32 02 FF        LD  (DIG_2), A
0852   04D2             
0853   04D2 2A 1A FF        LD HL, (USR_BC)
0854   04D5 CD 4C 0A        CALL PRINT_END_HL
0855   04D8 C3 EE 00        JP  EXIT_SYS
0856   04DB             
0857   04DB             SHOW_REG_DE:
0858   04DB CD A9 07        CALL  GET_KEY_A
0859   04DE FE 00           CP  $00
0860   04E0 CA BB 08        JP Z, GO_MONITOR
0861   04E3 FE 01           CP  $01
0862   04E5 CA C6 08        JP Z, GO_SHOW_REG_PC
0863   04E8 FE 02           CP  $02
0864   04EA CA D1 08        JP Z, GO_SHOW_REG_SP
0865   04ED FE 03           CP  $03
0866   04EF CA DC 08        JP Z, GO_SHOW_REG_AF
0867   04F2 FE 04           CP  $04
0868   04F4 CA E7 08        JP Z, GO_SHOW_REG_BC
0869   04F7 FE 05           CP  $05
0870   04F9 CA 34 09        JP Z, GO_SHOW_REG_DEaux
0871   04FC FE 06           CP  $06
0872   04FE CA FD 08        JP Z, GO_SHOW_REG_HL
0873   0501 FE 07           CP  $07
0874   0503 CA 08 09        JP Z, GO_SHOW_REG_IX
0875   0506 FE 08           CP  $08
0876   0508 CA 13 09        JP Z, GO_SHOW_REG_IY
0877   050B             
0878   050B CD 60 09        CALL  CLEAR_DISPLAY
0879   050E             
0880   050E 3E 50           LD  A, $50               ; R
0881   0510 32 00 FF        LD  (DIG_0), A
0882   0513             
0883   0513 3E 5E           LD  A, $5E               ; D
0884   0515 32 01 FF        LD  (DIG_1), A
0885   0518             
0886   0518 3E 79           LD  A, $79               ; E
0887   051A 32 02 FF        LD  (DIG_2), A
0888   051D             
0889   051D 2A 1C FF        LD HL, (USR_DE)
0890   0520 CD 4C 0A        CALL PRINT_END_HL
0891   0523 C3 EE 00        JP  EXIT_SYS
0892   0526             
0893   0526             SHOW_REG_HL:
0894   0526 CD A9 07        CALL  GET_KEY_A
0895   0529 FE 00           CP  $00
0896   052B CA BB 08        JP Z, GO_MONITOR
0897   052E FE 01           CP  $01
0898   0530 CA C6 08        JP Z, GO_SHOW_REG_PC
0899   0533 FE 02           CP  $02
0900   0535 CA D1 08        JP Z, GO_SHOW_REG_SP
0901   0538 FE 03           CP  $03
0902   053A CA DC 08        JP Z, GO_SHOW_REG_AF
0903   053D FE 04           CP  $04
0904   053F CA E7 08        JP Z, GO_SHOW_REG_BC
0905   0542 FE 05           CP  $05
0906   0544 CA F2 08        JP Z, GO_SHOW_REG_DE
0907   0547 FE 06           CP  $06
0908   0549 CA 3F 09        JP Z, GO_SHOW_REG_HLaux
0909   054C FE 07           CP  $07
0910   054E CA 08 09        JP Z, GO_SHOW_REG_IX
0911   0551 FE 08           CP  $08
0912   0553 CA 13 09        JP Z, GO_SHOW_REG_IY
0913   0556             
0914   0556 CD 60 09        CALL  CLEAR_DISPLAY
0915   0559             
0916   0559 3E 50           LD  A, $50               ; R
0917   055B 32 00 FF        LD  (DIG_0), A
0918   055E             
0919   055E 3E 76           LD  A, $76               ; H
0920   0560 32 01 FF        LD  (DIG_1), A
0921   0563             
0922   0563 3E 38           LD  A, $38               ; L
0923   0565 32 02 FF        LD  (DIG_2), A
0924   0568             
0925   0568 2A 18 FF        LD HL, (USR_HL)
0926   056B CD 4C 0A        CALL PRINT_END_HL
0927   056E C3 EE 00        JP  EXIT_SYS
0928   0571             
0929   0571             SHOW_REG_IX:
0930   0571 CD A9 07        CALL  GET_KEY_A
0931   0574 FE 00           CP  $00
0932   0576 CA BB 08        JP Z, GO_MONITOR
0933   0579 FE 01           CP  $01
0934   057B CA C6 08        JP Z, GO_SHOW_REG_PC
0935   057E FE 02           CP  $02
0936   0580 CA D1 08        JP Z, GO_SHOW_REG_SP
0937   0583 FE 03           CP  $03
0938   0585 CA DC 08        JP Z, GO_SHOW_REG_AF
0939   0588 FE 04           CP  $04
0940   058A CA E7 08        JP Z, GO_SHOW_REG_BC
0941   058D FE 05           CP  $05
0942   058F CA F2 08        JP Z, GO_SHOW_REG_DE
0943   0592 FE 06           CP  $06
0944   0594 CA FD 08        JP Z, GO_SHOW_REG_HL
0945   0597 FE 07           CP  $07
0946   0599 CA 08 09        JP Z, GO_SHOW_REG_IX
0947   059C FE 08           CP  $08
0948   059E CA 13 09        JP Z, GO_SHOW_REG_IY
0949   05A1             
0950   05A1 CD 60 09        CALL  CLEAR_DISPLAY
0951   05A4             
0952   05A4 3E 50           LD  A, $50               ; R
0953   05A6 32 00 FF        LD  (DIG_0), A
0954   05A9             
0955   05A9 3E 06           LD  A, $06               ; I
0956   05AB 32 01 FF        LD  (DIG_1), A
0957   05AE             
0958   05AE 3E 70           LD  A, $70               ; X
0959   05B0 32 02 FF        LD  (DIG_2), A
0960   05B3             
0961   05B3 2A 20 FF        LD HL, (USR_IX)
0962   05B6 CD 4C 0A        CALL PRINT_END_HL
0963   05B9 C3 EE 00        JP  EXIT_SYS
0964   05BC             
0965   05BC             SHOW_REG_IY:
0966   05BC CD A9 07        CALL  GET_KEY_A
0967   05BF FE 00           CP  $00
0968   05C1 CA BB 08        JP Z, GO_MONITOR
0969   05C4 FE 01           CP  $01
0970   05C6 CA C6 08        JP Z, GO_SHOW_REG_PC
0971   05C9 FE 02           CP  $02
0972   05CB CA D1 08        JP Z, GO_SHOW_REG_SP
0973   05CE FE 03           CP  $03
0974   05D0 CA DC 08        JP Z, GO_SHOW_REG_AF
0975   05D3 FE 04           CP  $04
0976   05D5 CA E7 08        JP Z, GO_SHOW_REG_BC
0977   05D8 FE 05           CP  $05
0978   05DA CA F2 08        JP Z, GO_SHOW_REG_DE
0979   05DD FE 06           CP  $06
0980   05DF CA FD 08        JP Z, GO_SHOW_REG_HL
0981   05E2 FE 07           CP  $07
0982   05E4 CA 08 09        JP Z, GO_SHOW_REG_IX
0983   05E7 FE 08           CP  $08
0984   05E9 CA 13 09        JP Z, GO_SHOW_REG_IY
0985   05EC             
0986   05EC CD 60 09        CALL  CLEAR_DISPLAY
0987   05EF             
0988   05EF 3E 50           LD  A, $50               ; R
0989   05F1 32 00 FF        LD  (DIG_0), A
0990   05F4             
0991   05F4 3E 06           LD  A, $06               ; I
0992   05F6 32 01 FF        LD  (DIG_1), A
0993   05F9             
0994   05F9 3E 6E           LD  A, $6E               ; Y
0995   05FB 32 02 FF        LD  (DIG_2), A
0996   05FE             
0997   05FE 2A 22 FF        LD HL, (USR_IY)
0998   0601 CD 4C 0A        CALL PRINT_END_HL
0999   0604 C3 EE 00        JP  EXIT_SYS
1000   0607             
1001   0607             SHOW_REG_AFaux:
1002   0607 CD A9 07        CALL  GET_KEY_A
1003   060A FE 00           CP  $00
1004   060C CA BB 08        JP Z, GO_MONITOR
1005   060F FE 01           CP  $01
1006   0611 CA C6 08        JP Z, GO_SHOW_REG_PC
1007   0614 FE 02           CP  $02
1008   0616 CA D1 08        JP Z, GO_SHOW_REG_SP
1009   0619 FE 03           CP  $03
1010   061B CA DC 08        JP Z, GO_SHOW_REG_AF
1011   061E FE 04           CP  $04
1012   0620 CA E7 08        JP Z, GO_SHOW_REG_BC
1013   0623 FE 05           CP  $05
1014   0625 CA F2 08        JP Z, GO_SHOW_REG_DE
1015   0628 FE 06           CP  $06
1016   062A CA FD 08        JP Z, GO_SHOW_REG_HL
1017   062D FE 07           CP  $07
1018   062F CA 08 09        JP Z, GO_SHOW_REG_IX
1019   0632 FE 08           CP  $08
1020   0634 CA 13 09        JP Z, GO_SHOW_REG_IY
1021   0637             
1022   0637 CD 60 09        CALL  CLEAR_DISPLAY
1023   063A             
1024   063A 3E 50           LD  A, $50               ; R
1025   063C 32 00 FF        LD  (DIG_0), A
1026   063F             
1027   063F 3E 77           LD  A, $77               ; A
1028   0641 32 01 FF        LD  (DIG_1), A
1029   0644             
1030   0644 3E 71           LD  A, $71               ; F
1031   0646 32 02 FF        LD  (DIG_2), A
1032   0649             
1033   0649 3E 20           LD  A, $20               ; '
1034   064B 32 03 FF        LD  (DIG_3), A
1035   064E             
1036   064E 2A 24 FF        LD HL, (USR_AFA)
1037   0651 7D              LD  A, L
1038   0652 32 2C FF        LD (CPU_FLAGS), A
1039   0655 CD 4C 0A        CALL PRINT_END_HL
1040   0658 C3 EE 00        JP  EXIT_SYS
1041   065B             
1042   065B             
1043   065B             SHOW_REG_BCaux:
1044   065B CD A9 07        CALL  GET_KEY_A
1045   065E FE 00           CP  $00
1046   0660 CA BB 08        JP Z, GO_MONITOR
1047   0663 FE 01           CP  $01
1048   0665 CA C6 08        JP Z, GO_SHOW_REG_PC
1049   0668 FE 02           CP  $02
1050   066A CA D1 08        JP Z, GO_SHOW_REG_SP
1051   066D FE 03           CP  $03
1052   066F CA DC 08        JP Z, GO_SHOW_REG_AF
1053   0672 FE 04           CP  $04
1054   0674 CA E7 08        JP Z, GO_SHOW_REG_BC
1055   0677 FE 05           CP  $05
1056   0679 CA F2 08        JP Z, GO_SHOW_REG_DE
1057   067C FE 06           CP  $06
1058   067E CA FD 08        JP Z, GO_SHOW_REG_HL
1059   0681 FE 07           CP  $07
1060   0683 CA 08 09        JP Z, GO_SHOW_REG_IX
1061   0686 FE 08           CP  $08
1062   0688 CA 13 09        JP Z, GO_SHOW_REG_IY
1063   068B             
1064   068B CD 60 09        CALL  CLEAR_DISPLAY
1065   068E             
1066   068E 3E 50           LD  A, $50               ; R
1067   0690 32 00 FF        LD  (DIG_0), A
1068   0693             
1069   0693 3E 7C           LD  A, $7C               ; B
1070   0695 32 01 FF        LD  (DIG_1), A
1071   0698             
1072   0698 3E 39           LD  A, $39               ; C
1073   069A 32 02 FF        LD  (DIG_2), A
1074   069D             
1075   069D 3E 20           LD  A, $20               ; '
1076   069F 32 03 FF        LD  (DIG_3), A
1077   06A2             
1078   06A2 2A 26 FF        LD HL, (USR_BCA)
1079   06A5 CD 4C 0A        CALL PRINT_END_HL
1080   06A8 C3 EE 00        JP  EXIT_SYS
1081   06AB             
1082   06AB             SHOW_REG_DEaux:
1083   06AB CD A9 07        CALL  GET_KEY_A
1084   06AE FE 00           CP  $00
1085   06B0 CA BB 08        JP Z, GO_MONITOR
1086   06B3 FE 01           CP  $01
1087   06B5 CA C6 08        JP Z, GO_SHOW_REG_PC
1088   06B8 FE 02           CP  $02
1089   06BA CA D1 08        JP Z, GO_SHOW_REG_SP
1090   06BD FE 03           CP  $03
1091   06BF CA DC 08        JP Z, GO_SHOW_REG_AF
1092   06C2 FE 04           CP  $04
1093   06C4 CA E7 08        JP Z, GO_SHOW_REG_BC
1094   06C7 FE 05           CP  $05
1095   06C9 CA F2 08        JP Z, GO_SHOW_REG_DE
1096   06CC FE 06           CP  $06
1097   06CE CA FD 08        JP Z, GO_SHOW_REG_HL
1098   06D1 FE 07           CP  $07
1099   06D3 CA 08 09        JP Z, GO_SHOW_REG_IX
1100   06D6 FE 08           CP  $08
1101   06D8 CA 13 09        JP Z, GO_SHOW_REG_IY
1102   06DB             
1103   06DB CD 60 09        CALL  CLEAR_DISPLAY
1104   06DE             
1105   06DE 3E 50           LD  A, $50               ; R
1106   06E0 32 00 FF        LD  (DIG_0), A
1107   06E3             
1108   06E3 3E 5E           LD  A, $5E               ; D
1109   06E5 32 01 FF        LD  (DIG_1), A
1110   06E8             
1111   06E8 3E 79           LD  A, $79               ; E
1112   06EA 32 02 FF        LD  (DIG_2), A
1113   06ED             
1114   06ED 3E 20           LD  A, $20               ; '
1115   06EF 32 03 FF        LD  (DIG_3), A
1116   06F2             
1117   06F2 2A 28 FF        LD HL, (USR_DEA)
1118   06F5 CD 4C 0A        CALL PRINT_END_HL
1119   06F8 C3 EE 00        JP  EXIT_SYS
1120   06FB             
1121   06FB             SHOW_REG_HLaux:
1122   06FB CD A9 07        CALL  GET_KEY_A
1123   06FE FE 00           CP  $00
1124   0700 CA BB 08        JP Z, GO_MONITOR
1125   0703 FE 01           CP  $01
1126   0705 CA C6 08        JP Z, GO_SHOW_REG_PC
1127   0708 FE 02           CP  $02
1128   070A CA D1 08        JP Z, GO_SHOW_REG_SP
1129   070D FE 03           CP  $03
1130   070F CA DC 08        JP Z, GO_SHOW_REG_AF
1131   0712 FE 04           CP  $04
1132   0714 CA E7 08        JP Z, GO_SHOW_REG_BC
1133   0717 FE 05           CP  $05
1134   0719 CA F2 08        JP Z, GO_SHOW_REG_DE
1135   071C FE 06           CP  $06
1136   071E CA FD 08        JP Z, GO_SHOW_REG_HL
1137   0721 FE 07           CP  $07
1138   0723 CA 08 09        JP Z, GO_SHOW_REG_IX
1139   0726 FE 08           CP  $08
1140   0728 CA 13 09        JP Z, GO_SHOW_REG_IY
1141   072B             
1142   072B CD 60 09        CALL  CLEAR_DISPLAY
1143   072E             
1144   072E 3E 50           LD  A, $50               ; R
1145   0730 32 00 FF        LD  (DIG_0), A
1146   0733             
1147   0733 3E 76           LD  A, $76               ; H
1148   0735 32 01 FF        LD  (DIG_1), A
1149   0738             
1150   0738 3E 38           LD  A, $38               ; L
1151   073A 32 02 FF        LD  (DIG_2), A
1152   073D             
1153   073D 3E 20           LD  A, $20               ; '
1154   073F 32 03 FF        LD  (DIG_3), A
1155   0742             
1156   0742 2A 2A FF        LD HL, (USR_HLA)
1157   0745 CD 4C 0A        CALL PRINT_END_HL
1158   0748 C3 EE 00        JP  EXIT_SYS
1159   074B             
1160   074B             SHOW_HALT:
1161   074B 3A 09 FF        LD  A, (INPUT)
1162   074E FE FB           CP  $FB
1163   0750 CA BB 08        JP  Z, GO_MONITOR
1164   0753             
1165   0753 3E 40           LD  A, $40               ; -
1166   0755 32 00 FF        LD  (DIG_0), A
1167   0758 32 01 FF        LD  (DIG_1), A
1168   075B             
1169   075B 3E 76           LD  A, $76               ; H
1170   075D 32 02 FF        LD  (DIG_2), A
1171   0760             
1172   0760 3E 77           LD  A, $77               ; A
1173   0762 32 03 FF        LD  (DIG_3), A
1174   0765             
1175   0765 3E 38           LD  A, $38               ; L
1176   0767 32 04 FF        LD  (DIG_4), A
1177   076A             
1178   076A 3E 78           LD  A, $78               ; T
1179   076C 32 05 FF        LD  (DIG_5), A
1180   076F             
1181   076F 3E 40           LD  A, $40               ; -
1182   0771 32 06 FF        LD  (DIG_6), A
1183   0774 32 07 FF        LD  (DIG_7), A
1184   0777             
1185   0777 C3 EE 00        JP EXIT_SYS
1186   077A             
1187   077A             SHOW_ERROR:
1188   077A 3A 09 FF        LD  A, (INPUT)
1189   077D FE FB           CP  $FB
1190   077F CA BB 08        JP  Z, GO_MONITOR
1191   0782             
1192   0782 3E 79           LD  A, $79               ; E
1193   0784 32 00 FF        LD  (DIG_0), A
1194   0787             
1195   0787 3E 50           LD  A, $50               ; R
1196   0789 32 01 FF        LD  (DIG_1), A
1197   078C             
1198   078C 3E 50           LD  A, $50               ; R
1199   078E 32 02 FF        LD  (DIG_2), A
1200   0791             
1201   0791 3E 3F           LD  A, $3F               ; O
1202   0793 32 03 FF        LD  (DIG_3), A
1203   0796             
1204   0796 3E 50           LD  A, $50               ; R
1205   0798 32 04 FF        LD  (DIG_4), A
1206   079B             
1207   079B 3E 00           LD  A, $0               ; ''
1208   079D 32 05 FF        LD  (DIG_5), A           
1209   07A0 32 06 FF        LD  (DIG_6), A
1210   07A3 32 07 FF        LD  (DIG_7), A
1211   07A6             
1212   07A6 C3 EE 00        JP EXIT_SYS
1213   07A9             
1214   07A9             ; =========================================================
1215   07A9             ; GET KEY IN A, IF A == FFh then no KEY
1216   07A9             ; =========================================================
1217   07A9             GET_KEY_A:
1218   07A9 3A 0B FF        LD  A, (KEY_TIMEOUT)
1219   07AC FE 00           CP  0
1220   07AE CA B4 07        JP  Z, RET_KEY
1221   07B1 3E FF           LD  A, $FF
1222   07B3 C9              RET
1223   07B4             
1224   07B4             RET_KEY:
1225   07B4 3E 64           LD A, CKEY_TIMEOUT
1226   07B6 32 0B FF        LD (KEY_TIMEOUT), A
1227   07B9             
1228   07B9 3A 08 FF        LD  A, (KEY_PRESS)
1229   07BC F5              PUSH  AF
1230   07BD 3E FF           LD  A, $FF
1231   07BF 32 08 FF        LD  (KEY_PRESS), A
1232   07C2 F1              POP  AF
1233   07C3 C9              RET
1234   07C4             
1235   07C4             
1236   07C4             ; =========================================================
1237   07C4             ; MONITOR Mode
1238   07C4             ; =========================================================
1239   07C4             USER_MODE:
1240   07C4 3A 09 FF        LD  A, (INPUT)
1241   07C7 FE FB           CP  $FB
1242   07C9 CA BB 08        JP  Z, GO_MONITOR
1243   07CC                 
1244   07CC                 ; Copy USER_DISPx to DIG_x
1245   07CC 21 D0 FF        LD	HL, USER_DISP0
1246   07CF 11 00 FF    	LD	DE, DIG_0
1247   07D2 01 08 00    	LD	BC, $0008
1248   07D5 ED B0       	LDIR
1249   07D7             
1250   07D7 C3 EE 00        JP  EXIT_SYS
1251   07DA             
1252   07DA             MONITOR_MODE:
1253   07DA                 ; Mostra o endereço
1254   07DA 2A 0D FF        LD  HL, (PC_RAM)
1255   07DD CD EF 09        CALL PRINT_HL
1256   07E0             
1257   07E0                 ; Limpa digitos
1258   07E0 3E 00           LD  A, 0
1259   07E2 32 04 FF        LD  (DIG_4), A
1260   07E5 32 05 FF        LD  (DIG_5), A
1261   07E8             
1262   07E8                 ; Mostra os dados no endereço
1263   07E8 2A 0D FF        LD  HL, (PC_RAM)
1264   07EB 7E              LD  A, (HL)
1265   07EC CD C2 09        CALL  PRINT_A
1266   07EF             
1267   07EF             
1268   07EF CD A9 07        CALL  GET_KEY_A
1269   07F2             
1270   07F2                 ; Incrementa endereço
1271   07F2 32 0A FF        LD (TMP_KEY), A
1272   07F5 FE 0A           CP  $0A
1273   07F7 CA 77 08        JP  Z,  PC_RAM_INC
1274   07FA             
1275   07FA                 ; Decrementa endereço
1276   07FA 3A 0A FF        LD  A, (TMP_KEY)
1277   07FD FE 0B           CP  $0B
1278   07FF CA 6D 08        JP  Z,  PC_RAM_DEC
1279   0802             
1280   0802                 ; Examina memoria
1281   0802 3A 0A FF        LD  A, (TMP_KEY)
1282   0805 FE 0E           CP  $0E
1283   0807 CA 81 08        JP  Z,  GO_EXAMINE
1284   080A             
1285   080A                 ; + moDify Memory
1286   080A 3A 0A FF        LD  A, (TMP_KEY)
1287   080D FE 0C           CP  $0C
1288   080F CA 9C 08        JP  Z,  GO_ADD_MODIFY
1289   0812             
1290   0812                 ; moDify Memory
1291   0812 3A 0A FF        LD  A, (TMP_KEY)
1292   0815 FE 0D           CP  $0D
1293   0817 CA A6 08        JP  Z,  GO_MODIFY
1294   081A             
1295   081A                 ; RUN
1296   081A 3A 0A FF        LD  A, (TMP_KEY)
1297   081D FE 0F           CP  $0F
1298   081F CA 4A 09        JP  Z,  FIRE
1299   0822             
1300   0822                 ; Show register PC
1301   0822 3A 0A FF        LD  A, (TMP_KEY)
1302   0825 FE 01           CP  $01
1303   0827 CA C6 08        JP  Z, GO_SHOW_REG_PC
1304   082A             
1305   082A                 ; Show register SP
1306   082A 3A 0A FF        LD  A, (TMP_KEY)
1307   082D FE 02           CP  $02
1308   082F CA D1 08        JP  Z, GO_SHOW_REG_SP
1309   0832             
1310   0832                 ; Show register AF
1311   0832 3A 0A FF        LD  A, (TMP_KEY)
1312   0835 FE 03           CP  $03
1313   0837 CA DC 08        JP  Z, GO_SHOW_REG_AF
1314   083A             
1315   083A                 ; Show register BC
1316   083A 3A 0A FF        LD  A, (TMP_KEY)
1317   083D FE 04           CP  $04
1318   083F CA E7 08        JP  Z, GO_SHOW_REG_BC
1319   0842             
1320   0842                 ; Show register DE
1321   0842 3A 0A FF        LD  A, (TMP_KEY)
1322   0845 FE 05           CP  $05
1323   0847 CA F2 08        JP  Z, GO_SHOW_REG_DE
1324   084A             
1325   084A                 ; Show register HL
1326   084A 3A 0A FF        LD  A, (TMP_KEY)
1327   084D FE 06           CP  $06
1328   084F CA FD 08        JP  Z, GO_SHOW_REG_HL
1329   0852             
1330   0852                 ; Show register IX
1331   0852 3A 0A FF        LD  A, (TMP_KEY)
1332   0855 FE 07           CP  $07
1333   0857 CA 08 09        JP  Z, GO_SHOW_REG_IX
1334   085A             
1335   085A                 ; Show register iY
1336   085A 3A 0A FF        LD  A, (TMP_KEY)
1337   085D FE 08           CP  $08
1338   085F CA 13 09        JP  Z, GO_SHOW_REG_IY
1339   0862             
1340   0862                 ; Back to user mode
1341   0862 3A 0A FF        LD  A, (TMP_KEY)
1342   0865 FE 09           CP  $09
1343   0867 CA 58 09        JP  Z, GO_USER_MODE
1344   086A             
1345   086A C3 EE 00        JP  EXIT_SYS
1346   086D                 
1347   086D             
1348   086D             PC_RAM_DEC:
1349   086D 2A 0D FF        LD  HL, (PC_RAM)
1350   0870 2B              DEC  HL
1351   0871 22 0D FF        LD  (PC_RAM), HL
1352   0874 C3 EE 00        JP  EXIT_SYS
1353   0877             
1354   0877             PC_RAM_INC:
1355   0877 2A 0D FF        LD  HL, (PC_RAM)
1356   087A 23              INC  HL
1357   087B 22 0D FF        LD  (PC_RAM), HL
1358   087E C3 EE 00        JP  EXIT_SYS
1359   0881             
1360   0881             GO_EXAMINE:
1361   0881 3E 03           LD  A, $03
1362   0883 32 12 FF        LD (EXM_COUNT), A        ; Set count 4 digits, position display
1363   0886 3E 02           LD  A, $02
1364   0888 32 0F FF        LD (SYSMODE), A          ; Examine mode
1365   088B 3E 40           LD A, 01000000b
1366   088D 32 00 FF        LD (DIG_0), A
1367   0890 32 01 FF        LD (DIG_1), A
1368   0893 32 02 FF        LD (DIG_2), A
1369   0896 32 03 FF        LD (DIG_3), A
1370   0899 C3 EE 00        JP  EXIT_SYS
1371   089C             
1372   089C             GO_ADD_MODIFY:
1373   089C 2A 0D FF        LD  HL, (PC_RAM)
1374   089F 23              INC HL
1375   08A0 22 0D FF        LD  (PC_RAM), HL
1376   08A3 CD EF 09        CALL  PRINT_HL
1377   08A6             GO_MODIFY:
1378   08A6 3E 01           LD  A, $01                  ; Set count 2 digits, position display
1379   08A8 32 13 FF        LD  (MDF_COUNT), A
1380   08AB 3E 03           LD  A, $03                  ; moDify mode (Memory)
1381   08AD 32 0F FF        LD  (SYSMODE), A
1382   08B0 3E 40           LD  A, 01000000b
1383   08B2 32 06 FF        LD  (DIG_6), A
1384   08B5 32 07 FF        LD  (DIG_7), A
1385   08B8 C3 EE 00        JP  EXIT_SYS
1386   08BB             
1387   08BB             GO_MONITOR:
1388   08BB CD 60 09        CALL  CLEAR_DISPLAY
1389   08BE 3E 01           LD  A, $01
1390   08C0 32 0F FF        LD  (SYSMODE), A
1391   08C3 C3 EE 00        JP  EXIT_SYS
1392   08C6             
1393   08C6             GO_SHOW_REG_PC:
1394   08C6 CD 60 09        CALL CLEAR_DISPLAY
1395   08C9 3E 04           LD  A, $04
1396   08CB 32 0F FF        LD  (SYSMODE), A
1397   08CE C3 EE 00        JP  EXIT_SYS
1398   08D1             
1399   08D1             GO_SHOW_REG_SP:
1400   08D1 CD 60 09        CALL CLEAR_DISPLAY
1401   08D4 3E 05           LD  A, $05
1402   08D6 32 0F FF        LD  (SYSMODE), A
1403   08D9 C3 EE 00        JP  EXIT_SYS
1404   08DC             
1405   08DC             GO_SHOW_REG_AF:
1406   08DC CD 60 09        CALL CLEAR_DISPLAY
1407   08DF 3E 06           LD  A, $06
1408   08E1 32 0F FF        LD  (SYSMODE), A
1409   08E4 C3 EE 00        JP  EXIT_SYS
1410   08E7             
1411   08E7             GO_SHOW_REG_BC:
1412   08E7 CD 60 09        CALL CLEAR_DISPLAY
1413   08EA 3E 07           LD  A, $07
1414   08EC 32 0F FF        LD  (SYSMODE), A
1415   08EF C3 EE 00        JP  EXIT_SYS
1416   08F2             
1417   08F2             GO_SHOW_REG_DE:
1418   08F2 CD 60 09        CALL CLEAR_DISPLAY
1419   08F5 3E 08           LD  A, $08
1420   08F7 32 0F FF        LD  (SYSMODE), A
1421   08FA C3 EE 00        JP  EXIT_SYS
1422   08FD             
1423   08FD             GO_SHOW_REG_HL:
1424   08FD CD 60 09        CALL CLEAR_DISPLAY
1425   0900 3E 09           LD  A, $09
1426   0902 32 0F FF        LD  (SYSMODE), A
1427   0905 C3 EE 00        JP  EXIT_SYS
1428   0908             
1429   0908             GO_SHOW_REG_IX:
1430   0908 CD 60 09        CALL CLEAR_DISPLAY
1431   090B 3E 0A           LD  A, $0A
1432   090D 32 0F FF        LD  (SYSMODE), A
1433   0910 C3 EE 00        JP  EXIT_SYS
1434   0913             
1435   0913             GO_SHOW_REG_IY:
1436   0913 CD 60 09        CALL CLEAR_DISPLAY
1437   0916 3E 0B           LD  A, $0B
1438   0918 32 0F FF        LD  (SYSMODE), A
1439   091B C3 EE 00        JP  EXIT_SYS
1440   091E             
1441   091E             GO_SHOW_REG_AFaux:
1442   091E CD 60 09        CALL CLEAR_DISPLAY
1443   0921 3E 0C           LD  A, $0C
1444   0923 32 0F FF        LD  (SYSMODE), A
1445   0926 C3 EE 00        JP  EXIT_SYS
1446   0929             
1447   0929             GO_SHOW_REG_BCaux:
1448   0929 CD 60 09        CALL CLEAR_DISPLAY
1449   092C 3E 0D           LD  A, $0D
1450   092E 32 0F FF        LD  (SYSMODE), A
1451   0931 C3 EE 00        JP  EXIT_SYS
1452   0934             
1453   0934             GO_SHOW_REG_DEaux:
1454   0934 CD 60 09        CALL CLEAR_DISPLAY
1455   0937 3E 0E           LD  A, $0E
1456   0939 32 0F FF        LD  (SYSMODE), A
1457   093C C3 EE 00        JP  EXIT_SYS
1458   093F             
1459   093F             GO_SHOW_REG_HLaux:
1460   093F CD 60 09        CALL CLEAR_DISPLAY
1461   0942 3E 0F           LD  A, $0F
1462   0944 32 0F FF        LD  (SYSMODE), A
1463   0947 C3 EE 00        JP  EXIT_SYS
1464   094A             
1465   094A             
1466   094A             FIRE:
1467   094A 3E 01           LD  A, 1
1468   094C 32 0F FF        LD (SYSMODE), A          ; Monitor mode
1469   094F 2A 0D FF        LD  HL, (PC_RAM)
1470   0952 22 14 FF        LD  (USR_PC), HL
1471   0955 C3 EE 00        JP  EXIT_SYS
1472   0958             
1473   0958             GO_USER_MODE:
1474   0958 3E 00           LD  A, 0
1475   095A 32 0F FF        LD  (SYSMODE), A
1476   095D C3 EE 00        JP  EXIT_SYS
1477   0960             
1478   0960             ; =========================================================
1479   0960             ; LIMPA DISPLAY
1480   0960             ; =========================================================
1481   0960             CLEAR_DISPLAY:
1482   0960 F5              PUSH  AF
1483   0961 3E 00           LD  A, 0
1484   0963 32 00 FF        LD  (DIG_0), A
1485   0966 32 01 FF        LD  (DIG_1), A
1486   0969 32 02 FF        LD  (DIG_2), A
1487   096C 32 03 FF        LD  (DIG_3), A
1488   096F 32 04 FF        LD  (DIG_4), A
1489   0972 32 05 FF        LD  (DIG_5), A
1490   0975 32 06 FF        LD  (DIG_6), A
1491   0978 32 07 FF        LD  (DIG_7), A
1492   097B F1              POP  AF
1493   097C C9              RET
1494   097D             
1495   097D             ; =========================================================
1496   097D             ; LIMPA USER DISPLAY
1497   097D             ; =========================================================
1498   097D             CLEAR_USER_DISPLAY:
1499   097D F5              PUSH  AF
1500   097E 3E 00           LD  A, 0
1501   0980 32 D0 FF        LD  (USER_DISP0), A
1502   0983 32 D1 FF        LD  (USER_DISP1), A
1503   0986 32 D2 FF        LD  (USER_DISP2), A
1504   0989 32 D3 FF        LD  (USER_DISP3), A
1505   098C 32 D4 FF        LD  (USER_DISP4), A
1506   098F 32 D5 FF        LD  (USER_DISP5), A
1507   0992 32 D6 FF        LD  (USER_DISP6), A
1508   0995 32 D7 FF        LD  (USER_DISP7), A
1509   0998 F1              POP  AF
1510   0999 C9              RET
1511   099A             
1512   099A             
1513   099A             ; =========================================================
1514   099A             ; PEGA LOW NUM EM A E RETORNA CHAR 7SEG EM A
1515   099A             ; =========================================================
1516   099A             GET_NUM_FROM_LOW:
1517   099A E5              PUSH    HL
1518   099B C5              PUSH    BC
1519   099C 21 26 0B        LD      HL, LED_FONT
1520   099F E6 0F           AND     $0F
1521   09A1 01 00 00        LD      BC, 0
1522   09A4 4F              LD      C, A
1523   09A5 09              ADD     HL, BC
1524   09A6 7E              LD      A, (HL)
1525   09A7 C1              POP     BC
1526   09A8 E1              POP     HL
1527   09A9 C9              RET
1528   09AA             
1529   09AA             ; =========================================================
1530   09AA             ; PEGA HIGH NUM EM A E RETORNA CHAR 7SEG EM A
1531   09AA             ; =========================================================
1532   09AA             GET_NUM_FROM_HIGH:
1533   09AA E5              PUSH    HL
1534   09AB C5              PUSH    BC
1535   09AC 21 26 0B        LD      HL, LED_FONT
1536   09AF E6 F0           AND     $F0
1537   09B1 CB 0F           RRC     A
1538   09B3 CB 0F           RRC     A
1539   09B5 CB 0F           RRC     A
1540   09B7 CB 0F           RRC     A
1541   09B9 01 00 00        LD      BC, 0
1542   09BC 4F              LD      C, A
1543   09BD 09              ADD     HL, BC
1544   09BE 7E              LD      A, (HL)
1545   09BF C1              POP     BC
1546   09C0 E1              POP     HL
1547   09C1 C9              RET
1548   09C2             
1549   09C2             ; =========================================================
1550   09C2             ; Mostra o que esta em A nos digitos 6 e 7
1551   09C2             ; =========================================================
1552   09C2             PRINT_A:
1553   09C2 E5              PUSH    HL
1554   09C3 C5              PUSH    BC
1555   09C4 F5              PUSH    AF
1556   09C5 F5              PUSH    AF
1557   09C6             
1558   09C6 21 26 0B        LD	HL, LED_FONT
1559   09C9 E6 0F           AND $0F
1560   09CB 01 00 00        LD      BC, 0
1561   09CE 4F              LD      C, A
1562   09CF 09              ADD HL, BC
1563   09D0 7E              LD  A, (HL)
1564   09D1 32 07 FF        LD  (DIG_7), A
1565   09D4             
1566   09D4 F1              POP    AF
1567   09D5 21 26 0B        LD	HL, LED_FONT
1568   09D8 E6 F0           AND  $F0
1569   09DA CB 0F           RRC  A
1570   09DC CB 0F           RRC  A
1571   09DE CB 0F           RRC  A
1572   09E0 CB 0F           RRC  A
1573   09E2 01 00 00        LD      BC, 0
1574   09E5 4F              LD      C, A
1575   09E6 09              ADD HL, BC
1576   09E7 7E              LD  A, (HL)
1577   09E8 32 06 FF        LD  (DIG_6), A
1578   09EB             
1579   09EB F1              POP     AF
1580   09EC C1              POP     BC
1581   09ED E1              POP     HL
1582   09EE C9              RET
1583   09EF             
1584   09EF             ; =========================================================
1585   09EF             ; Mostra o que esta em HL - Display(HHLLXXXX)
1586   09EF             ; =========================================================
1587   09EF             PRINT_HL:
1588   09EF F5              PUSH  AF
1589   09F0 E5              PUSH  HL
1590   09F1 C5              PUSH  BC
1591   09F2             
1592   09F2 E5              PUSH  HL
1593   09F3 E5              PUSH  HL
1594   09F4 E5              PUSH  HL
1595   09F5             
1596   09F5 7D              LD  A, L
1597   09F6 21 26 0B        LD	HL, LED_FONT
1598   09F9 E6 0F           AND $0F
1599   09FB 01 00 00        LD      BC, 0
1600   09FE 4F              LD      C, A
1601   09FF 09              ADD HL, BC
1602   0A00 7E              LD  A, (HL)
1603   0A01 21 03 FF        LD  HL, DIG_3
1604   0A04 77              LD  (HL), A
1605   0A05             
1606   0A05 E1              POP  HL
1607   0A06 7D              LD  A, L
1608   0A07 21 26 0B        LD	HL, LED_FONT
1609   0A0A E6 F0           AND  $F0
1610   0A0C CB 0F           RRC  A
1611   0A0E CB 0F           RRC  A
1612   0A10 CB 0F           RRC  A
1613   0A12 CB 0F           RRC  A
1614   0A14 01 00 00        LD      BC, 0
1615   0A17 4F              LD      C, A
1616   0A18 09              ADD HL, BC
1617   0A19 7E              LD  A, (HL)
1618   0A1A 21 02 FF        LD  HL, DIG_2
1619   0A1D 77              LD  (HL), A
1620   0A1E             
1621   0A1E E1              POP  HL
1622   0A1F 7C              LD  A, H
1623   0A20 21 26 0B        LD	HL, LED_FONT
1624   0A23 E6 0F           AND $0F
1625   0A25 01 00 00        LD      BC, 0
1626   0A28 4F              LD      C, A
1627   0A29 09              ADD HL, BC
1628   0A2A 7E              LD  A, (HL)
1629   0A2B 21 01 FF        LD  HL, DIG_1
1630   0A2E 77              LD  (HL), A
1631   0A2F             
1632   0A2F E1              POP  HL
1633   0A30 7C              LD  A, H
1634   0A31 21 26 0B        LD	HL, LED_FONT
1635   0A34 E6 F0           AND  $F0
1636   0A36 CB 0F           RRC  A
1637   0A38 CB 0F           RRC  A
1638   0A3A CB 0F           RRC  A
1639   0A3C CB 0F           RRC  A
1640   0A3E 01 00 00        LD      BC, 0
1641   0A41 4F              LD      C, A
1642   0A42 09              ADD HL, BC
1643   0A43 7E              LD  A, (HL)
1644   0A44 21 00 FF        LD  HL, DIG_0
1645   0A47 77              LD  (HL), A
1646   0A48             
1647   0A48 C1              POP  BC
1648   0A49 E1              POP  HL
1649   0A4A F1              POP  AF
1650   0A4B             
1651   0A4B C9              RET
1652   0A4C             
1653   0A4C             ; =========================================================
1654   0A4C             ; Mostra o que esta em HL - Display(XXXXHHLL)
1655   0A4C             ; =========================================================
1656   0A4C             PRINT_END_HL:
1657   0A4C F5              PUSH  AF
1658   0A4D E5              PUSH  HL
1659   0A4E C5              PUSH  BC
1660   0A4F             
1661   0A4F E5              PUSH  HL
1662   0A50 E5              PUSH  HL
1663   0A51 E5              PUSH  HL
1664   0A52             
1665   0A52 7D              LD  A, L
1666   0A53 21 26 0B        LD	HL, LED_FONT
1667   0A56 E6 0F           AND $0F
1668   0A58 01 00 00        LD      BC, 0
1669   0A5B 4F              LD      C, A
1670   0A5C 09              ADD HL, BC
1671   0A5D 7E              LD  A, (HL)
1672   0A5E 21 07 FF        LD  HL, DIG_7
1673   0A61 77              LD  (HL), A
1674   0A62             
1675   0A62 E1              POP  HL
1676   0A63 7D              LD  A, L
1677   0A64 21 26 0B        LD	HL, LED_FONT
1678   0A67 E6 F0           AND  $F0
1679   0A69 CB 0F           RRC  A
1680   0A6B CB 0F           RRC  A
1681   0A6D CB 0F           RRC  A
1682   0A6F CB 0F           RRC  A
1683   0A71 01 00 00        LD      BC, 0
1684   0A74 4F              LD      C, A
1685   0A75 09              ADD HL, BC
1686   0A76 7E              LD  A, (HL)
1687   0A77 21 06 FF        LD  HL, DIG_6
1688   0A7A 77              LD  (HL), A
1689   0A7B             
1690   0A7B E1              POP  HL
1691   0A7C 7C              LD  A, H
1692   0A7D 21 26 0B        LD	HL, LED_FONT
1693   0A80 E6 0F           AND $0F
1694   0A82 01 00 00        LD      BC, 0
1695   0A85 4F              LD      C, A
1696   0A86 09              ADD HL, BC
1697   0A87 7E              LD  A, (HL)
1698   0A88 21 05 FF        LD  HL, DIG_5
1699   0A8B 77              LD  (HL), A
1700   0A8C             
1701   0A8C E1              POP  HL
1702   0A8D 7C              LD  A, H
1703   0A8E 21 26 0B        LD	HL, LED_FONT
1704   0A91 E6 F0           AND  $F0
1705   0A93 CB 0F           RRC  A
1706   0A95 CB 0F           RRC  A
1707   0A97 CB 0F           RRC  A
1708   0A99 CB 0F           RRC  A
1709   0A9B 01 00 00        LD      BC, 0
1710   0A9E 4F              LD      C, A
1711   0A9F 09              ADD HL, BC
1712   0AA0 7E              LD  A, (HL)
1713   0AA1 21 04 FF        LD  HL, DIG_4
1714   0AA4 77              LD  (HL), A
1715   0AA5             
1716   0AA5 C1              POP  BC
1717   0AA6 E1              POP  HL
1718   0AA7 F1              POP  AF
1719   0AA8             
1720   0AA8 C9              RET
1721   0AA9             
1722   0AA9             ; =========================================================
1723   0AA9             ; Start Sistem ?
1724   0AA9             ; =========================================================
1725   0AA9             START:
1726   0AA9 31 00 FF        LD  SP, STACK
1727   0AAC E5              PUSH HL                  ; Save HL
1728   0AAD F5              PUSH AF                  ; Save AF
1729   0AAE             
1730   0AAE                 ; if Moni Back(Reset + Press), then Loader Intel Hex
1731   0AAE DB 40           IN A, (Port40)
1732   0AB0 CB 6F           BIT 5, A
1733   0AB2 C4 36 0B        CALL NZ, START_INTEL
1734   0AB5             
1735   0AB5             
1736   0AB5 3E 01           LD  A, 1                 ; Monitor mode
1737   0AB7 32 0F FF        LD  (SYSMODE), A
1738   0ABA             
1739   0ABA             START_COM:
1740   0ABA 21 00 80        LD  HL, START_RAM
1741   0ABD 22 0D FF        LD  (PC_RAM), HL
1742   0AC0             
1743   0AC0                 ; start vars
1744   0AC0 3E 64           LD  A, CKEY_TIMEOUT
1745   0AC2 32 0B FF        LD  (KEY_TIMEOUT), A
1746   0AC5             
1747   0AC5 3E FF           LD A, $FF
1748   0AC7 32 08 FF        LD (KEY_PRESS), A
1749   0ACA             
1750   0ACA 3E 00           LD  A, $00
1751   0ACC 32 00 FF        LD  (DIG_0), A
1752   0ACF 32 01 FF        LD  (DIG_1), A
1753   0AD2 32 02 FF        LD  (DIG_2), A
1754   0AD5 32 03 FF        LD  (DIG_3), A
1755   0AD8 32 04 FF        LD  (DIG_4), A
1756   0ADB 32 05 FF        LD  (DIG_5), A
1757   0ADE 32 06 FF        LD  (DIG_6), A
1758   0AE1 32 07 FF        LD  (DIG_7), A
1759   0AE4             
1760   0AE4 ED 56           IM  1
1761   0AE6 FB              EI
1762   0AE7             
1763   0AE7 AF              XOR A
1764   0AE8 D3 40           OUT (Port40), A
1765   0AEA             
1766   0AEA F1              POP AF                   ; Recovery AF
1767   0AEB E1              POP HL                   ; Recovery HL
1768   0AEC             START_LOOP:
1769   0AEC C3 EC 0A        JP START_LOOP
1770   0AEF             
1771   0AEF             START_WARM:
1772   0AEF 31 00 FF        LD  SP, STACK
1773   0AF2 E5              PUSH HL                  ; Save HL
1774   0AF3 F5              PUSH AF                  ; Save AF
1775   0AF4 C3 BA 0A        JP START_COM
1776   0AF7             
1777   0AF7             
1778   0AF7             ; =========================================================
1779   0AF7             ; HL = (HL)
1780   0AF7             ; =========================================================
1781   0AF7             LD_HL_HL:
1782   0AF7 7E          	LD      A,(HL)		;7
1783   0AF8 23          	INC     HL		;6
1784   0AF9 66          	LD      H,(HL)		;7
1785   0AFA 6F          	LD      L,A		;4
1786   0AFB C9          	RET			;10
1787   0AFC             
1788   0AFC             ; =========================================================
1789   0AFC             ; Delay
1790   0AFC             ; =========================================================
1791   0AFC             delay:
1792   0AFC C5          	push bc                       ; 2.75 us
1793   0AFD 06 FF           ld b, 255                     ; 1.75 us
1794   0AFF             delay_loop_b:
1795   0AFF 0E FF       	ld c, 255                     ; 1.75 us
1796   0B01             delay_loop:
1797   0B01 0D          	dec c                         ; 1 us
1798   0B02 C2 01 0B        jp nz, delay_loop             ; true = 3 us, false 1.75 us
1799   0B05 05              dec b                         ; 1 us
1800   0B06 C2 FF 0A        jp nz, delay_loop_b           ; true = 3 us, false 1.75 us
1801   0B09 C1              pop bc                        ; 2.50 us
1802   0B0A C9              ret                           ; 2.50 us
1803   0B0B             
1804   0B0B             
1805   0B0B             ;============================================================================
1806   0B0B             ;	Subroutine	Delay_A
1807   0B0B             ;
1808   0B0B             ;	Entry:	A = Millisecond count
1809   0B0B             ;============================================================================
1810   0B0B E5          DELAY_A:	PUSH	HL			; Save count
1811   0B0C 21 10 FF    		LD	HL,TicCounter
1812   0B0F 86          		ADD	A,(HL)			; A = cycle count
1813   0B10 BE          DlyLp		CP	(HL)			; Wait required TicCounter times
1814   0B11 C2 10 0B    		JP	NZ,DlyLp		;  loop if not done
1815   0B14 E1          		POP	HL
1816   0B15 C9          		RET
1817   0B16             
1818   0B16             
1819   0B16 0E 01       DELAY_100mS	LD	C,1
1820   0B18 C5          DELAY_C		PUSH	BC
1821   0B19 06 00       		LD	B,0
1822   0B1B C5          DELAY_LP	PUSH	BC
1823   0B1C 10 FE       		DJNZ	$		;13   * 256 / 4 = 832uSec
1824   0B1E C1          		POP	BC
1825   0B1F 10 FA       		DJNZ	DELAY_LP	;~100mSEC
1826   0B21 0D          		DEC	C
1827   0B22 20 F7       		JR  NZ,	DELAY_LP	;*4 ~= 7mSec
1828   0B24 C1          		POP	BC
1829   0B25 C9          		RET
1830   0B26             
1831   0B26             ; Mapa char to display 0-F
1832   0B26 3F065B4F666DLED_FONT .db $3F, $06, $5B, $4F, $66, $6D, $7D, $07, $7F, $67 ; 0-9
1832   0B2C 7D077F67
1833   0B30 777C395E7971         .DB $77, $7C, $39, $5E, $79, $71                     ; A-F
1834   0B36             
1835   0B36             
1836   0B36             
1837   0B36             
1838   0B36             ; ---------------------------------------------------------
1839   0B36             ;   FFFFFFFF      I     MM           MM
1840   0B36             ;   F             I     M  M       M  M
1841   0B36             ;   F             I     M    M   M    M
1842   0B36             ;   FFFFFFF       I     M      M      M
1843   0B36             ;   F             I     M             M
1844   0B36             ;   F             I     M             M
1845   0B36             ;   F             I     M             M
1846   0B36             ;
1847   0B36             ; ---------------------------------------------------------
1848   0B36             
1849   0B36             
1850   0B36             ; ---------------------------------------------------------
1851   0B36             ;
1852   0B36             ;   SERIAL INTEL HEX LOADDER
1853   0B36             ;
1854   0B36             ;   Serial 4800-N-8-1
1855   0B36             ;
1856   0B36             ; ---------------------------------------------------------
1857   0B36             START_INTEL:
1858   0B36 F3              DI
1859   0B37             
1860   0B37 21 1B 00        LD	HL, B4800
1861   0B3A 22 30 FF    	LD	(BAUD),HL	;DEFAULT SERIAL=4800 BAUD
1862   0B3D             
1863   0B3D 21 34 0C        LD    HL,TXDATA
1864   0B40 22 32 FF        LD    (PUTCH),HL ;USE THE BITBANG SERIAL TRANSMIT
1865   0B43 21 5D 0C        LD    HL,RXDATA
1866   0B46 22 34 FF        LD    (GETCH),HL  ;USE THE BITBANG SERIAL RECEIVE
1867   0B49             
1868   0B49 21 C2 0C        LD    HL,INITSZ  ;VT100 TERMINAL COMMANDS FOR CLEAR SCREEN,CURSOR HOME
1869   0B4C CD 10 0C        CALL  SNDMSG     ;INITIALISE THE TERMINAL
1870   0B4F                 
1871   0B4F 21 99 0C        LD    HL,SIGNON
1872   0B52 CD 10 0C        CALL  SNDMSG     ;SEND THE SIGNON
1873   0B55             
1874   0B55 CD 79 0B        CALL INTELFN
1875   0B58 C9              RET
1876   0B59             
1877   0B59             INTEL_ERROR:
1878   0B59 21 40 00        LD HL, INT_ERROR
1879   0B5C 22 2D FF        LD (INT_VEC), HL
1880   0B5F ED 56           IM 1
1881   0B61 FB              EI
1882   0B62             
1883   0B62             INTEL_ERROR_LOOP:
1884   0B62 3E 00           LD A, $0
1885   0B64 D3 40           OUT (Port40), a
1886   0B66 C3 62 0B        JP INTEL_ERROR_LOOP
1887   0B69             
1888   0B69             INTEL_SUCCESS:
1889   0B69 ED 56           IM 1
1890   0B6B FB              EI
1891   0B6C C9              RET
1892   0B6D             
1893   0B6D             ;-----------------------------------
1894   0B6D             ; OUTPUT A CHARACTER TO THE TERMINAL
1895   0B6D             ;-----------------------------------       
1896   0B6D DD 2A 32 FF OUTCH:  LD   IX,(PUTCH)
1897   0B71 DD E9              JP   (IX)
1898   0B73             ;------------------------------------
1899   0B73             ; INPUT A CHARACTER FROM THE TERMINAL
1900   0B73             ;------------------------------------
1901   0B73 DD 2A 34 FF INCH:  LD   IX,(GETCH)
1902   0B77 DD E9             JP   (IX)
1903   0B79             
1904   0B79             ;------------
1905   0B79             ; ASCII CODES
1906   0B79             ;------------
1907   0B79             ESC:    .EQU   1BH
1908   0B79             CR:     .EQU   0DH
1909   0B79             LF:     .EQU   0AH
1910   0B79             
1911   0B79             
1912   0B79             ;-=========================== INTEL
1913   0B79             
1914   0B79             ;------------------------------------
1915   0B79             ; FUNCTION 1 RECEIVE INTEL HEX FORMAT
1916   0B79             ;------------------------------------
1917   0B79             INTELFN:
1918   0B79 CD 88 0B        CALL  INTELH
1919   0B7C C2 59 0B        JP    NZ, INTEL_ERROR      ;SHOW THE ERROR 
1920   0B7F             
1921   0B7F 21 AF 0C        LD    HL,SUCCESS
1922   0B82 CD 10 0C        CALL  SNDMSG     ;SEND THE SUCCESS
1923   0B85             
1924   0B85 C3 69 0B        JP    INTEL_SUCCESS        ;JUST RETURN IF ALL OK
1925   0B88             ;-----------------------
1926   0B88             ; RECEIVE INTEL HEX FILE
1927   0B88             ;-----------------------
1928   0B88 DD 21 00 FF INTELH:	LD	IX,STACK	;POINT TO SYSTEM VARIABLES
1929   0B8C             ;
1930   0B8C             ; WAIT FOR RECORD MARK
1931   0B8C             ;
1932   0B8C AF          INTEL1:	XOR	A
1933   0B8D DD 77 03    	LD	(IX+3),A	;CLEAR CHECKSUM
1934   0B90 CD 5D 0C    	CALL	RXDATA	;WAIT FOR THE RECORD MARK
1935   0B93 FE 3A       	CP	':'	;TO BE TRANSMITTED
1936   0B95 20 F5       	JR	NZ,INTEL1	;NOT RECORD MARK
1937   0B97             
1938   0B97             ;
1939   0B97             ; GET RECORD LENGTH
1940   0B97             ;
1941   0B97 CD E4 0B    	CALL	GETBYT
1942   0B9A DD 77 00    	LD	(IX+0),A	;NUMBER OF DATA BYTES
1943   0B9D             ;
1944   0B9D             ; GET ADDRESS FIELD
1945   0B9D             ;
1946   0B9D CD E4 0B    	CALL	GETBYT
1947   0BA0 DD 77 02    	LD	(IX+2),A	;LOAD ADDRESS HIGH BYTE
1948   0BA3 CD E4 0B    	CALL	GETBYT
1949   0BA6 DD 77 01    	LD	(IX+1),A	;LOAD ADDRESS LOW BYTE
1950   0BA9             ;
1951   0BA9             ; GET RECORD TYPE
1952   0BA9             ;
1953   0BA9 CD E4 0B    	CALL	GETBYT
1954   0BAC 20 24       	JR	NZ,INTEL4	;END OF FILE RECORD
1955   0BAE             ;
1956   0BAE             ; READ IN THE DATA
1957   0BAE             ;
1958   0BAE DD 46 00    	LD	B,(IX+0)	;NUMBER OF DATA BYTES
1959   0BB1 DD 66 02    	LD	H,(IX+2)	;LOAD ADDRESS HIGH BYTE
1960   0BB4 DD 6E 01    	LD	L,(IX+1)	;LOAD ADDRESS LOW BYTE
1961   0BB7             
1962   0BB7 CD E4 0B    INTEL2:	CALL	GETBYT	;GET DATA BYTE
1963   0BBA 77          	LD	(HL),A	;STORE DATA BYTE
1964   0BBB 23          	INC	HL
1965   0BBC 10 F9       	DJNZ	INTEL2	;LOAD MORE BYTES
1966   0BBE             ;
1967   0BBE             ; GET CHECKSUM AND COMPARE
1968   0BBE             ;
1969   0BBE DD 7E 03    	LD	A,(IX+3)	;CONVERT CHECKSUM TO
1970   0BC1 ED 44       	NEG		;TWO'S COMPLEMENT
1971   0BC3 DD 77 04    	LD	(IX+4),A	;SAVE COMPUTED CHECKSUM
1972   0BC6 CD E4 0B    	CALL	GETBYT
1973   0BC9 DD 77 03    	LD	(IX+3),A	;SAVE RECORD CHECKSUM
1974   0BCC DD BE 04    	CP	(IX+4)	;COMPARE CHECKSUM
1975   0BCF 28 BB       	JR	Z,INTEL1	;CHECKSUM OK,NEXT RECORD
1976   0BD1 C9              RET             ;NZ=CHECKSUM ERROR
1977   0BD2             ;
1978   0BD2             ; END OF FILE RECORD
1979   0BD2             ;
1980   0BD2 DD 7E 03    INTEL4:	LD	A,(IX+3)	;CONVERT CHECKSUM TO
1981   0BD5 ED 44       	NEG		;TWO'S COMPLEMENT
1982   0BD7 DD 77 04    	LD	(IX+4),A	;SAVE COMPUTED CHECKSUM
1983   0BDA CD E4 0B    	CALL	GETBYT
1984   0BDD DD 77 03    	LD	(IX+3),A	;SAVE EOF CHECKSUM
1985   0BE0 DD BE 04    	CP	(IX+4)	;COMPARE CHECKSUM
1986   0BE3 C9          	RET  	    ;NZ=CHECKSUM ERROR
1987   0BE4             
1988   0BE4             ;--------------------------
1989   0BE4             ; GET BYTE FROM SERIAL PORT
1990   0BE4             ;--------------------------
1991   0BE4 C5          GETBYT:	PUSH	BC
1992   0BE5 CD 5D 0C    	CALL	RXDATA
1993   0BE8 CB 77       	BIT	6,A
1994   0BEA 28 02       	JR	Z,GETBT1
1995   0BEC C6 09       	ADD	A,09H
1996   0BEE E6 0F       GETBT1:	AND	0FH
1997   0BF0 CB 27       	SLA 	A
1998   0BF2 CB 27       	SLA	A
1999   0BF4 CB 27       	SLA	A
2000   0BF6 CB 27       	SLA	A
2001   0BF8 4F          	LD	C,A
2002   0BF9             ;
2003   0BF9             ; GET LOW NYBBLE
2004   0BF9             ;
2005   0BF9 CD 5D 0C    	CALL	RXDATA
2006   0BFC CB 77       	BIT	6,A
2007   0BFE 28 02       	JR	Z,GETBT2
2008   0C00 C6 09       	ADD	A,09H
2009   0C02 E6 0F       GETBT2:	AND	0FH
2010   0C04 B1          	OR	C
2011   0C05 47          	LD	B,A
2012   0C06 DD 86 03    	ADD	A,(IX+3)
2013   0C09 DD 77 03    	LD	(IX+3),A	;ADD TO CHECKSUM
2014   0C0C 78          	LD	A,B
2015   0C0D A7          	AND	A	;CLEAR CARRY
2016   0C0E C1              POP	BC
2017   0C0F C9          	RET
2018   0C10             
2019   0C10             ;=========================== INTEL FIM
2020   0C10             
2021   0C10             
2022   0C10             ;-----------------------------------------
2023   0C10             ; SEND AN ASCII STRING OUT THE SERIAL PORT
2024   0C10             ;-----------------------------------------
2025   0C10             ; 
2026   0C10             ; SENDS A ZERO TERMINATED STRING OR 
2027   0C10             ; 128 CHARACTERS MAX. OUT THE SERIAL PORT
2028   0C10             ;
2029   0C10             ;      ENTRY : HL = POINTER TO 00H TERMINATED STRING
2030   0C10             ;      EXIT  : NONE
2031   0C10             ;
2032   0C10             ;       MODIFIES : A,B,C
2033   0C10             ;          
2034   0C10 06 80       SNDMSG: LD    B,128         ;128 CHARS MAX
2035   0C12 7E          SDMSG1: LD    A,(HL)        ;GET THE CHAR
2036   0C13 FE 00              CP    00H          ;ZERO TERMINATOR?
2037   0C15 28 06              JR    Z,SDMSG2      ;FOUND A ZERO TERMINATOR, EXIT  
2038   0C17 CD 6D 0B           CALL  OUTCH         ;TRANSMIT THE CHAR
2039   0C1A 23                 INC   HL
2040   0C1B 10 F5              DJNZ  SDMSG1        ;128 CHARS MAX!    
2041   0C1D C9          SDMSG2: RET
2042   0C1E             
2043   0C1E             ;-----------------
2044   0C1E             ; ONE SECOND DELAY
2045   0C1E             ;-----------------
2046   0C1E             ;
2047   0C1E             ; ENTRY : NONE
2048   0C1E             ; EXIT : FLAG REGISTER MODIFIED
2049   0C1E             ;
2050   0C1E C5          DELONE:	PUSH	BC
2051   0C1F D5          	PUSH	DE
2052   0C20 E5          	PUSH	HL
2053   0C21 11 01 00    	LD	DE,0001H
2054   0C24 21 70 08    	LD	HL,0870H
2055   0C27 06 92       DELON1:	LD	B,92H
2056   0C29 10 FE       DELON2:	DJNZ	DELON2	;INNER LOOP
2057   0C2B ED 52       	SBC	HL,DE
2058   0C2D D2 27 0C    	JP	NC,DELON1	;OUTER LOOP
2059   0C30 E1          	POP	HL
2060   0C31 D1          	POP	DE
2061   0C32 C1          	POP	BC
2062   0C33 C9          	RET
2063   0C34             
2064   0C34             ;------------------------
2065   0C34             ; SERIAL TRANSMIT ROUTINE
2066   0C34             ;------------------------
2067   0C34             ;TRANSMIT BYTE SERIALLY ON DOUT
2068   0C34             ;
2069   0C34             ; ENTRY : A = BYTE TO TRANSMIT
2070   0C34             ;  EXIT : NO REGISTERS MODIFIED
2071   0C34             ;
2072   0C34 F5          TXDATA:	PUSH	AF
2073   0C35 C5          	PUSH	BC
2074   0C36 E5          	PUSH	HL
2075   0C37 2A 30 FF    	LD	HL,(BAUD)
2076   0C3A 4F          	LD	C,A
2077   0C3B             ;
2078   0C3B             ; TRANSMIT START BIT
2079   0C3B             ;
2080   0C3B AF          	XOR	A
2081   0C3C D3 40       	OUT	(Port40),A
2082   0C3E CD 8C 0C    	CALL	BITIME
2083   0C41             ;
2084   0C41             ; TRANSMIT DATA
2085   0C41             ;
2086   0C41 06 08       	LD	B,08H
2087   0C43             	;RRC	C
2088   0C43 CB 09       NXTBIT:	RRC	C	;SHIFT BITS TO D6,
2089   0C45 79          	LD	A,C	;LSB FIRST AND OUTPUT
2090   0C46 E6 80       	AND	80H	;THEM FOR ONE BIT TIME.
2091   0C48 D3 40       	OUT	(Port40),A
2092   0C4A CD 8C 0C    	CALL	BITIME
2093   0C4D 10 F4       	DJNZ	NXTBIT
2094   0C4F             ;
2095   0C4F             ; SEND STOP BITS
2096   0C4F             ;
2097   0C4F 3E 80       	LD	A,80H
2098   0C51 D3 40       	OUT	(Port40),A
2099   0C53 CD 8C 0C    	CALL	BITIME
2100   0C56 CD 8C 0C    	CALL	BITIME
2101   0C59 E1          	POP	HL
2102   0C5A C1          	POP	BC
2103   0C5B F1          	POP	AF
2104   0C5C C9          	RET
2105   0C5D             
2106   0C5D             ;-----------------------
2107   0C5D             ; SERIAL RECEIVE ROUTINE
2108   0C5D             ;-----------------------
2109   0C5D             ;RECEIVE SERIAL BYTE FROM DIN
2110   0C5D             ;
2111   0C5D             ; ENTRY : NONE
2112   0C5D             ;  EXIT : A= RECEIVED BYTE IF CARRY CLEAR
2113   0C5D             ;
2114   0C5D             ; REGISTERS MODIFIED A AND F
2115   0C5D             ;
2116   0C5D C5          RXDATA:	PUSH	BC
2117   0C5E E5          	PUSH	HL
2118   0C5F             ;
2119   0C5F             ; WAIT FOR START BIT 
2120   0C5F             ;
2121   0C5F DB 40       RXDAT1: IN	A,(Port40)
2122   0C61             ;        IN	A,(KEYBUF)
2123   0C61 CB 77       	    BIT	6,A
2124   0C63 20 FA       	    JR	NZ,RXDAT1	;NO START BIT
2125   0C65             ;
2126   0C65             ; DETECTED START BIT
2127   0C65             ;
2128   0C65 2A 30 FF    	LD	HL,(BAUD)
2129   0C68 CB 3C       	SRL	H
2130   0C6A CB 1D       	RR	L 	;DELAY FOR HALF BIT TIME
2131   0C6C CD 8C 0C    	CALL 	BITIME
2132   0C6F DB 40       	IN	A,(Port40)
2133   0C71             ;    IN	A,(KEYBUF)
2134   0C71 CB 77       	BIT	6,A
2135   0C73 20 EA       	JR	NZ,RXDAT1	;START BIT NOT VALID
2136   0C75             ;
2137   0C75             ; DETECTED VALID START BIT,READ IN DATA
2138   0C75             ;
2139   0C75 06 08       	LD	B,08H
2140   0C77 2A 30 FF    RXDAT2:	LD	HL,(BAUD)
2141   0C7A CD 8C 0C    	CALL	BITIME	;DELAY ONE BIT TIME
2142   0C7D DB 40       	IN	A,(Port40)
2143   0C7F             ;    IN	A,(KEYBUF)
2144   0C7F CB 17       	RL	A
2145   0C81 CB 17           RL	A
2146   0C83 CB 19       	RR	C	;SHIFT BIT INTO DATA REG
2147   0C85 10 F0       	DJNZ	RXDAT2
2148   0C87 79          	LD	A,C
2149   0C88 B7          	OR	A	;CLEAR CARRY FLAG
2150   0C89 E1              POP	HL
2151   0C8A C1          	POP	BC
2152   0C8B C9          	RET
2153   0C8C             ;---------------
2154   0C8C             ; BIT TIME DELAY
2155   0C8C             ;---------------
2156   0C8C             ;DELAY FOR ONE SERIAL BIT TIME
2157   0C8C             ;ENTRY : HL = DELAY TIME
2158   0C8C             ; NO REGISTERS MODIFIED
2159   0C8C             ;
2160   0C8C E5          BITIME:	PUSH	HL
2161   0C8D D5          	PUSH	DE
2162   0C8E 11 01 00    	LD	DE,0001H
2163   0C91 ED 52       BITIM1:	SBC	HL,DE
2164   0C93 D2 91 0C    	JP	NC,BITIM1
2165   0C96 D1          	POP	DE
2166   0C97 E1          	POP	HL
2167   0C98 C9          	RET
2168   0C99             
2169   0C99             
2170   0C99 0D0A4C6F6164SIGNON:      .DB     CR,LF,"Load intel hex...",CR,LF,00H
2170   0C9F 20696E74656C206865782E2E2E0D0A00
2171   0CAF 4C6F61642073SUCCESS:      .DB    "Load success... ",CR,LF,00H
2171   0CB5 7563636573732E2E2E200D0A00
2172   0CC2 1B5B481B5B32INITSZ:      .DB     27,"[H",27,"[2J",00H
2172   0CC8 4A00
2173   0CCA             
2174   0CCA             ; =========================================================
2175   0CCA             ; Tabela display
2176   0CCA             ; =========================================================
2177   0CCA             ; 
2178   0CCA             ;   0 - $3F     A - $77     K - $7A     U - $1C     . - $80
2179   0CCA             ;   1 - $06     B - $7C     L - $38     V - $3E     Ñ - $55
2180   0CCA             ;   2 - $5B     C - $39     M - $37     W - $1D     : - $41
2181   0CCA             ;   3 - $4F     D - $5E     N - $54     X - $70     ; - $88
2182   0CCA             ;   4 - $66     E - $79     O - $3F     Y - $6E     _ - $08
2183   0CCA             ;   5 - $6D     F - $71     P - $73     Z - $49     ~ - $01
2184   0CCA             ;   6 - $7D     G - $6F     Q - $67                 ' - $20
2185   0CCA             ;   7 - $07     H - $76     R - $50     + - $46     
2186   0CCA             ;   8 - $7F     I - $06     S - $6D     , - $04     
2187   0CCA             ;   9 - $67     J - $1E     T - $78     - - $40     
2188   0CCA             
2189   0CCA             .end
tasm: Number of errors = 0
