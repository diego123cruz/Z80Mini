0001   0000             ; ---------------------------------------------------------
0002   0000             ;   Z80 Mini  -  inicio 01/2022
0003   0000             ;   Diego Cruz - github.com/diego123cruz
0004   0000             ;
0005   0000             ;   Hardware baseado em: http://www.sunrise-ev.com/z80.htm
0006   0000             ;   Software próprio - em construção
0007   0000             ; ---------------------------------------------------------
0008   0000             ;   Z80@4Mhz
0009   0000             ;   ROM 32k - 28C256
0010   0000             ;   RAM 32k - 65256
0011   0000             ;   Display 7 segmentos 8 digitos
0012   0000             ;   Teclado 16 teclas + Fn (Tecla de função? ou outra coisa?)
0013   0000             ;   Entrada 40h
0014   0000             ;   Saida 40h
0015   0000             ;
0016   0000             ;
0017   0000             ; ---------------------------------------------------------
0018   0000             ;   Display 7 Segmentos - In(Port40) AND 00000111b
0019   0000             ; ---------------------------------------------------------
0020   0000             ;
0021   0000             ;   ------------------------------------------------
0022   0000             ;   | 00h | 01h | 02h | 03h | 04h | 05h | 06h | 07h |
0023   0000             ;   ------------------------------------------------
0024   0000             ;
0025   0000             ;               A(0)
0026   0000             ;            ---------
0027   0000             ;           |         |
0028   0000             ;      F(5) |         | B(1)
0029   0000             ;           |   G(6)  |
0030   0000             ;            ---------
0031   0000             ;           |         |
0032   0000             ;      E(4) |         | C(2)
0033   0000             ;           |         |
0034   0000             ;            ---------         Ponto(7)
0035   0000             ;               D(3) 
0036   0000             ;
0037   0000             ;
0038   0000             ;
0039   0000             ;
0040   0000             ;
0041   0000             ; ---------------------------------------------------------
0042   0000             ; Teclado 
0043   0000             ; ---------------------------------------------------------
0044   0000             ;   
0045   0000             ;   Keys:        
0046   0000             ;       Fn - In(Port40) AND 00010000b - pulldown
0047   0000             ;       0 - In(Port40) AND 00000111b
0048   0000             ;
0049   0000             ;
0050   0000             ;
0051   0000             ;
0052   0000             
0053   0000             
0054   0000             ; ---------------------------------------------------------
0055   0000             ; Constantes
0056   0000             ; ---------------------------------------------------------
0057   0000             
0058   0000             Port40        .equ    $40
0059   0000             PortC0        .equ    $C0
0060   0000             START_RAM     .equ    $8000
0061   0000             STACK         .equ    $FF00  
0062   0000             CKEY_TIMEOUT  .equ    100  ; 100ms +-
0063   0000             
0064   0000             ; BAUD RATE CONSTANTS
0065   0000             B300:	.EQU	0220H	;300 BAUD
0066   0000             B1200:	.EQU	0080H	;1200 BAUD
0067   0000             B2400:	.EQU	003FH	;2400 BAUD
0068   0000             B4800:	.EQU	001BH	;4800 BAUD - Default
0069   0000             B9600:	.EQU	000BH	;9600 BAUD
0070   0000             
0071   0000             ; ---------------------------------------------------------
0072   0000             ; RAM MAP - Monitor | $FF00 - $FFFF
0073   0000             ; ---------------------------------------------------------
0074   0000             ; Cada digito fica em um ponto da memoria RAM
0075   0000             DIG_0       .equ    $FF00   ;(1) endereço do digito 0 na memoria RAM
0076   0000             DIG_1       .equ    $FF01   ;(1) endereço do digito 1 na memoria RAM
0077   0000             DIG_2       .equ    $FF02   ;(1) endereço do digito 2 na memoria RAM
0078   0000             DIG_3       .equ    $FF03   ;(1) endereço do digito 3 na memoria RAM
0079   0000             DIG_4       .equ    $FF04   ;(1) endereço do digito 4 na memoria RAM
0080   0000             DIG_5       .equ    $FF05   ;(1) endereço do digito 5 na memoria RAM
0081   0000             DIG_6       .equ    $FF06   ;(1) endereço do digito 6 na memoria RAM
0082   0000             DIG_7       .equ    $FF07   ;(1) endereço do digito 7 na memoria RAM
0083   0000             KEY_PRESS   .equ    $FF08   ;(1) key atual
0084   0000             INPUT       .equ    $FF09   ;(1) temp input from int
0085   0000             TMP_KEY     .equ    $FF0A   ;(1) tmp key
0086   0000             KEY_TIMEOUT .equ    $FF0B   ;(1) tempo para retornar a tecla, CKEY_TIMEOUT
0087   0000             SHOW_DIG    .equ    $FF0C   ;(1) Atual digito no display
0088   0000             PC_RAM      .equ    $FF0D   ;(2) save pc to user start $8000
0089   0000             
0090   0000             SYSMODE     .equ    $FF0F   ;(1) System mode. 
0091   0000                                         ; 0 - User Mode
0092   0000                                         ; 1 - Monitor
0093   0000                                         ; 2 - Examine Memoria
0094   0000                                         ; 3 - Change Data(Memory)
0095   0000                                         ; 4 - Show register PC
0096   0000                                         ; 5 - Show register SP
0097   0000                                         ; 6 - Show register AF
0098   0000                                         ; 7 - Show register BC
0099   0000                                         ; 8 - Show register DE
0100   0000                                         ; 9 - Show register HL
0101   0000                                         ; A - Show register IX
0102   0000                                         ; B - Show register IY
0103   0000                                         ; C - Show register AF'
0104   0000                                         ; D - Show register BC'
0105   0000                                         ; E - Show register DE'
0106   0000                                         ; F - Show register HL'
0107   0000                                         ; 80 - Modify Any
0108   0000                                         ; 76 - HALT
0109   0000             TicCounter  .equ    $FF10   ;(2) TicCounter inc 1ms
0110   0000             EXM_COUNT   .equ    $FF12   ;(1) Count digits Examine function, 4 digits
0111   0000             MDF_COUNT   .equ    $FF13   ;(1) Count digits moDify function, 2 digits
0112   0000             USR_PC      .equ    $FF14   ;(2) PC 
0113   0000             USR_SP      .equ    $FF16   ;(2) SP
0114   0000             USR_HL      .equ    $FF18   ;(2) HL
0115   0000             USR_BC      .equ    $FF1A   ;(2) BC
0116   0000             USR_DE      .equ    $FF1C   ;(2) DE
0117   0000             USR_AF      .equ    $FF1E   ;(2) AF
0118   0000             USR_IX      .equ    $FF20   ;(2) IX
0119   0000             USR_IY      .equ    $FF22   ;(2) IY
0120   0000             USR_AFA     .equ    $FF24   ;(2) AF' (Aux)
0121   0000             USR_BCA     .equ    $FF26   ;(2) BC' (Aux)
0122   0000             USR_DEA     .equ    $FF28   ;(2) DE' (Aux)
0123   0000             USR_HLA     .equ    $FF2A   ;(2) HL' (Aux)
0124   0000             ; SP Temp   .equ    $FF2C
0125   0000             CPU_FLAGS   .equ    $FF2C   ;(1) Flags atual (AF ou AF') SYSMODE
0126   0000             INT_VEC     .equ    $FF2D   ;(2) vector int38
0127   0000             
0128   0000             ; Serial intel hex loader
0129   0000             BAUD	    .equ	$FF30	;(2) BAUD RATE
0130   0000             PUTCH       .equ    $FF32   ;(2) OUTPUT A CHARACTER TO SERIAL
0131   0000             GETCH       .equ    $FF34   ;(2) WAIT FOR A CHARACTER FROM SERIAL
0132   0000             
0133   0000             
0134   0000             ; Copy USER_DISPx to DIG_x WHEN USER_MODE
0135   0000             USER_DISP0  .equ    $FFD0   ; Mode User - Display Dig 0  - 01234567
0136   0000             USER_DISP1  .equ    $FFD1   ; Mode User - Display Dig 1  - 01234567
0137   0000             USER_DISP2  .equ    $FFD2   ; Mode User - Display Dig 2  - 01234567
0138   0000             USER_DISP3  .equ    $FFD3   ; Mode User - Display Dig 3  - 01234567
0139   0000             USER_DISP4  .equ    $FFD4   ; Mode User - Display Dig 4  - 01234567
0140   0000             USER_DISP5  .equ    $FFD5   ; Mode User - Display Dig 5  - 01234567
0141   0000             USER_DISP6  .equ    $FFD6   ; Mode User - Display Dig 6  - 01234567
0142   0000             USER_DISP7  .equ    $FFD7   ; Mode User - Display Dig 7  - 01234567
0143   0000             
0144   0000             LAST_SYS    .equ    $FFD8   ; (1) Last SYSMODE
0145   0000             ISR_MD_HL   .equ    $FFDC   ; (2) endereço do registrador para alterar
0146   0000             ISR_MD_TMP  .equ    $FFDE   ; (2) data register temp
0147   0000             
0148   0000             
0149   0000             ; =========================================================
0150   0000             ; Start ROM
0151   0000             ; =========================================================
0152   0000             .org    $0000
0153   0000 21 66 00        LD  HL, INT38
0154   0003 22 2D FF        LD  (INT_VEC), HL
0155   0006 C3 01 0C        JP  START
0156   0009             
0157   0009             
0158   0009             ; =========================================================
0159   0009             ; Int 38h - Monitor 
0160   0009             ; =========================================================
0161   0038             .org    $38
0162   0038 F3              DI
0163   0039 22 18 FF        LD (USR_HL), HL          ; Save HL
0164   003C 2A 2D FF        LD HL, (INT_VEC)
0165   003F E9              JP (HL)
0166   0040             
0167   0040             INT_ERROR:
0168   0040 F3              DI
0169   0041 F5              PUSH AF
0170   0042 E5              PUSH HL
0171   0043             
0172   0043 21 66 00        LD  HL, INT38
0173   0046 22 2D FF        LD  (INT_VEC), HL
0174   0049             
0175   0049 3E 99           LD A, $99
0176   004B 32 0F FF        LD (SYSMODE), A
0177   004E             
0178   004E E1              POP HL
0179   004F F1              POP AF
0180   0050                 
0181   0050 C3 6B 0C        JP START_WARM
0182   0053             
0183   0053             INT_HALT:
0184   0053 F3              DI
0185   0054 F5              PUSH AF
0186   0055 E5              PUSH HL
0187   0056             
0188   0056 21 66 00        LD  HL, INT38
0189   0059 22 2D FF        LD  (INT_VEC), HL
0190   005C             
0191   005C 3E 76           LD A, $76
0192   005E 32 0F FF        LD (SYSMODE), A
0193   0061             
0194   0061 E1              POP HL
0195   0062 F1              POP AF
0196   0063                 
0197   0063 C3 6B 0C        JP START_WARM
0198   0066             
0199   0066             
0200   0066             INT38:
0201   0066 ED 73 16 FF     LD (USR_SP), SP          ; Save SP
0202   006A                 ;LD (USR_HL), HL          ; Save HL
0203   006A E1              POP  HL                  ; Recupera PC da stack
0204   006B 22 14 FF        LD (USR_PC), HL          ; Save PC
0205   006E E5              PUSH HL                  ;
0206   006F 21 2C FF        LD HL, $FF2C             ; Carrega Temp SP to HL
0207   0072 F9              LD SP, HL                ; Set temp HL
0208   0073 D9              EXX                      ; Inverte HL e HL', DE.... BC....
0209   0074 E5              PUSH  HL                 ; Save HL'
0210   0075 D5              PUSH  DE                 ; Save DE'                
0211   0076 C5              PUSH  BC                 ; Save BC'
0212   0077 08              EX    AF, AF'
0213   0078 F5              PUSH  AF                 ; Save AF'
0214   0079 08              EX    AF, AF'
0215   007A D9              EXX                      ; Troca HL' e HL,, DE... BC...
0216   007B FD E5           PUSH  IY                 ; Save IY
0217   007D DD E5           PUSH  IX                 ; Save IX
0218   007F F5              PUSH  AF                 ; Save AF
0219   0080 D5              PUSH  DE                 ; Save DE
0220   0081 C5              PUSH  BC                 ; Save BC
0221   0082 2A 16 FF        LD HL, (USR_SP)          ; Recupera SP
0222   0085 F9              LD SP, HL                ; Devolve SP original
0223   0086             
0224   0086                 ; check HALT
0225   0086 2A 16 FF        LD HL, (USR_SP)
0226   0089 CD 71 0C        CALL LD_HL_HL
0227   008C 2B              DEC HL
0228   008D 7E              LD  A, (HL)
0229   008E FE 76           CP  $76    ; halt code
0230   0090 CA 96 00        JP  Z, C_HALT
0231   0093 C3 CA 00        jp SKIP_CHK
0232   0096             
0233   0096             C_HALT:
0234   0096 21 53 00        LD HL, INT_HALT
0235   0099 22 2D FF        LD (INT_VEC), HL
0236   009C             
0237   009C 3E 76           LD A, $76
0238   009E 32 0F FF        LD  (SYSMODE), A
0239   00A1             
0240   00A1 E1              POP HL                   ; Troca o PC
0241   00A2 2A 14 FF        LD HL, (USR_PC)          ; Recupera PC
0242   00A5 E5              PUSH HL                  ; Devolve PC to stack
0243   00A6             
0244   00A6 2A 24 FF        LD HL, (USR_AFA)          ; Load AF' in HL
0245   00A9 E5              PUSH  HL                 ; Push AF'
0246   00AA F1              POP AF                   ; Recovery AF'
0247   00AB 08              EX AF, AF'
0248   00AC             
0249   00AC 2A 2A FF        LD HL, (USR_HLA)          ; Recovery HL'
0250   00AF ED 5B 28 FF     LD DE, (USR_DEA)          ; Recovery DE'
0251   00B3 ED 4B 26 FF     LD BC, (USR_BCA)          ; Recovery BC'
0252   00B7 D9              EXX
0253   00B8             
0254   00B8 2A 1E FF        LD HL, (USR_AF)          ; Load AF in HL
0255   00BB E5              PUSH  HL                 ; Push AF
0256   00BC F1              POP AF                   ; Recovery AF
0257   00BD             
0258   00BD 2A 18 FF        LD HL, (USR_HL)          ; Recovery HL
0259   00C0 ED 5B 1C FF     LD DE, (USR_DE)          ; Recovery DE
0260   00C4 ED 4B 1A FF     LD BC, (USR_BC)          ; Recovery BC
0261   00C8             
0262   00C8 FB              EI
0263   00C9 76              HALT                     ; aguarda proxima int
0264   00CA             
0265   00CA             SKIP_CHK:
0266   00CA                 ; TicCounter
0267   00CA 2A 10 FF        LD  HL, (TicCounter)     ; Increment 1ms, used to DELAY_A
0268   00CD 23              INC  HL
0269   00CE 22 10 FF        LD  (TicCounter), HL
0270   00D1             
0271   00D1                 ; Timeout Key
0272   00D1 3A 0B FF         LD A, (KEY_TIMEOUT)
0273   00D4 FE 00            CP 0
0274   00D6 CA DD 00         JP Z, ENTER_MAIN
0275   00D9 3D               DEC A
0276   00DA 32 0B FF         LD (KEY_TIMEOUT), A
0277   00DD             
0278   00DD                 ; Main
0279   00DD             ENTER_MAIN:
0280   00DD CD 20 01        CALL UPDATE_DISPLAYS
0281   00E0 CD 3C 01        CALL UPDATE_KEYS
0282   00E3 CD 8B 01        CALL UPDATE_FLAGS
0283   00E6             
0284   00E6                 ; Show atual digit
0285   00E6 3A 0C FF        LD  A, (SHOW_DIG)
0286   00E9 D3 40           OUT (Port40), A
0287   00EB             
0288   00EB                 ;CALL    TRATAMENTO_INT38H; Get key, update display   
0289   00EB C3 3B 02        JP      SYS_MAIN         ; Execute function monitor
0290   00EE             
0291   00EE             EXIT_SYS:
0292   00EE E1              POP HL                   ; Troca o PC
0293   00EF 2A 14 FF        LD HL, (USR_PC)          ; Recupera PC
0294   00F2 E5              PUSH HL                  ; Devolve PC to stack
0295   00F3             
0296   00F3 2A 24 FF        LD HL, (USR_AFA)          ; Load AF' in HL
0297   00F6 E5              PUSH  HL                 ; Push AF'
0298   00F7 F1              POP AF                   ; Recovery AF'
0299   00F8 08              EX AF, AF'
0300   00F9             
0301   00F9 2A 2A FF        LD HL, (USR_HLA)          ; Recovery HL'
0302   00FC ED 5B 28 FF     LD DE, (USR_DEA)          ; Recovery DE'
0303   0100 ED 4B 26 FF     LD BC, (USR_BCA)          ; Recovery BC'
0304   0104 D9              EXX
0305   0105             
0306   0105 DD 2A 20 FF     LD IX, (USR_IX)          ; Recovery IX
0307   0109 FD 2A 22 FF     LD IY, (USR_IY)          ; Recovery IY
0308   010D             
0309   010D 2A 1E FF        LD HL, (USR_AF)          ; Load AF in HL
0310   0110 E5              PUSH  HL                 ; Push AF
0311   0111 F1              POP AF                   ; Recovery AF
0312   0112             
0313   0112 2A 18 FF        LD HL, (USR_HL)          ; Recovery HL
0314   0115 ED 5B 1C FF     LD DE, (USR_DE)          ; Recovery DE
0315   0119 ED 4B 1A FF     LD BC, (USR_BC)          ; Recovery BC
0316   011D             
0317   011D FB              EI                       ; Enable interrupt
0318   011E ED 4D           RETI                     ; Return interrupt
0319   0120             
0320   0120             
0321   0120             ; =========================================================
0322   0120             ; Update display - Tratamento Int 38h
0323   0120             ; =========================================================
0324   0120             UPDATE_DISPLAYS:    
0325   0120 DB 40           IN    A, (Port40)
0326   0122 32 09 FF        LD    (INPUT), A
0327   0125 E6 07           AND   $07
0328   0127 FE 08           CP    $08
0329   0129 D2 3B 01        JP    NC, UPDATE_DISPLAYS_RET ; IF A > 7 RET
0330   012C 3C              INC   A
0331   012D FE 08           CP    $08
0332   012F C2 34 01        JP    NZ, UPDATE_DISPLAYS_OK
0333   0132 3E 00           LD    A, $00
0334   0134             UPDATE_DISPLAYS_OK:
0335   0134 26 FF           LD    H, $FF
0336   0136 6F              LD    L, A
0337   0137 7E              LD    A, (HL)
0338   0138 32 0C FF        LD   (SHOW_DIG), A
0339   013B             UPDATE_DISPLAYS_RET:
0340   013B C9              RET
0341   013C             
0342   013C             ; =========================================================
0343   013C             ; Update KEY - Tratamento Int 38h
0344   013C             ; =========================================================
0345   013C             UPDATE_KEYS:    
0346   013C DB 40           IN    A, (Port40)
0347   013E 32 09 FF        LD    (INPUT), A
0348   0141 E6 07           AND   $07
0349   0143 FE 08           CP    $08
0350   0145 D2 6E 01        JP    NC, UPDATE_KEY_RET ; IF A > 7 RET
0351   0148 3A 09 FF        LD  A,  (INPUT)
0352   014B CB 5F           BIT  3, A
0353   014D CA 6F 01        JP  Z, TRATAB3
0354   0150 3A 09 FF        LD  A,  (INPUT)
0355   0153 CB 67           BIT  4, A
0356   0155 CA 75 01        JP  Z, TRATAB4
0357   0158 C3 6E 01        JP  UPDATE_KEY_RET
0358   015B             UPDATE_KEY_GET:
0359   015B 32 09 FF        LD    (INPUT), A
0360   015E E6 07           AND   $07
0361   0160 01 00 00        LD    BC, 0
0362   0163 4F              LD    C, A
0363   0164 09              ADD   HL, BC
0364   0165 7E              LD    A, (HL)
0365   0166 32 08 FF        LD   (KEY_PRESS), A
0366   0169 3E 64           LD A, CKEY_TIMEOUT
0367   016B 32 0B FF        LD (KEY_TIMEOUT), A
0368   016E             UPDATE_KEY_RET:
0369   016E C9              RET
0370   016F             
0371   016F             TRATAB3:
0372   016F 21 7B 01        LD    HL, KEYSB3
0373   0172 C3 5B 01        JP  UPDATE_KEY_GET
0374   0175             
0375   0175             TRATAB4:
0376   0175 21 83 01        LD    HL, KEYSB4
0377   0178 C3 5B 01        JP  UPDATE_KEY_GET
0378   017B             
0379   017B 000104070F02KEYSB3 .db $00, $01, $04, $07, $0F, $02, $05, $08
0379   0181 0508
0380   0183 0E0306090D0CKEYSB4 .db $0E, $03, $06, $09, $0D, $0C, $0B, $0A
0380   0189 0B0A
0381   018B             
0382   018B             
0383   018B             ; =========================================================
0384   018B             ; Update Flags - Tratamento Int 38h
0385   018B             ; =========================================================
0386   018B             UPDATE_FLAGS:
0387   018B 3A 0F FF        LD    A, (SYSMODE)
0388   018E FE 06           CP    $06
0389   0190 CA 99 01        JP    Z, UPDATE_FLAGS_MAIN
0390   0193 FE 0C           CP    $0C
0391   0195 CA 99 01        JP    Z, UPDATE_FLAGS_MAIN
0392   0198             UPDATE_FLAGS_RET:
0393   0198 C9              RET
0394   0199             
0395   0199             UPDATE_FLAGS_MAIN:
0396   0199 3A 09 FF        LD    A, (INPUT)
0397   019C E6 07           AND   $07
0398   019E             
0399   019E FE 07           CP    $07
0400   01A0 CA C9 01        JP    Z, UPDATE_FLAG_S
0401   01A3 FE 00           CP    $00
0402   01A5 CA D5 01        JP    Z, UPDATE_FLAG_Z
0403   01A8 FE 01           CP    $01
0404   01AA CA E1 01        JP    Z, UPDATE_FLAG_X1
0405   01AD FE 02           CP    $02
0406   01AF CA ED 01        JP    Z, UPDATE_FLAG_H
0407   01B2 FE 03           CP    $03
0408   01B4 CA F9 01        JP    Z, UPDATE_FLAG_X2
0409   01B7 FE 04           CP    $04
0410   01B9 CA 05 02        JP    Z, UPDATE_FLAG_PV
0411   01BC FE 05           CP    $05
0412   01BE CA 11 02        JP    Z, UPDATE_FLAG_N
0413   01C1 FE 06           CP    $06
0414   01C3 CA 1D 02        JP    Z, UPDATE_FLAG_C
0415   01C6 C3 98 01        JP    UPDATE_FLAGS_RET
0416   01C9             
0417   01C9             UPDATE_FLAG_S:
0418   01C9 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0419   01CC 3A 2C FF        LD  A, (CPU_FLAGS)
0420   01CF CB 7F           BIT 7, A
0421   01D1 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0422   01D4 C9              RET
0423   01D5             
0424   01D5             UPDATE_FLAG_Z:
0425   01D5 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0426   01D8 3A 2C FF        LD  A, (CPU_FLAGS)
0427   01DB CB 77           BIT 6, A
0428   01DD CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0429   01E0 C9              RET
0430   01E1             
0431   01E1             UPDATE_FLAG_X1:
0432   01E1 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0433   01E4 3A 2C FF        LD  A, (CPU_FLAGS)
0434   01E7 CB 6F           BIT 5, A
0435   01E9 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0436   01EC C9              RET
0437   01ED             
0438   01ED             UPDATE_FLAG_H:
0439   01ED CD 29 02        CALL  SHOW_DIG_FLAG_ON
0440   01F0 3A 2C FF        LD  A, (CPU_FLAGS)
0441   01F3 CB 67           BIT 4, A
0442   01F5 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0443   01F8 C9              RET
0444   01F9             
0445   01F9             UPDATE_FLAG_X2:
0446   01F9 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0447   01FC 3A 2C FF        LD  A, (CPU_FLAGS)
0448   01FF CB 5F           BIT 3, A
0449   0201 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0450   0204 C9              RET
0451   0205             
0452   0205             UPDATE_FLAG_PV:
0453   0205 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0454   0208 3A 2C FF        LD  A, (CPU_FLAGS)
0455   020B CB 57           BIT 2, A
0456   020D CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0457   0210 C9              RET
0458   0211             
0459   0211             UPDATE_FLAG_N:
0460   0211 CD 29 02        CALL  SHOW_DIG_FLAG_ON
0461   0214 3A 2C FF        LD  A, (CPU_FLAGS)
0462   0217 CB 4F           BIT 1, A
0463   0219 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0464   021C C9              RET
0465   021D             
0466   021D             UPDATE_FLAG_C:
0467   021D CD 29 02        CALL  SHOW_DIG_FLAG_ON
0468   0220 3A 2C FF        LD  A, (CPU_FLAGS)
0469   0223 CB 47           BIT 0, A
0470   0225 CC 32 02        CALL Z, SHOW_DIG_FLAG_OFF
0471   0228 C9              RET
0472   0229             
0473   0229             SHOW_DIG_FLAG_ON:
0474   0229 3A 0C FF        LD  A, (SHOW_DIG)
0475   022C F6 80           OR  $80
0476   022E 32 0C FF        LD  (SHOW_DIG), A
0477   0231 C9              RET
0478   0232             
0479   0232             SHOW_DIG_FLAG_OFF:
0480   0232 3A 0C FF        LD  A, (SHOW_DIG)
0481   0235 E6 7F           AND  $7F
0482   0237 32 0C FF        LD  (SHOW_DIG), A 
0483   023A C9              RET
0484   023B             
0485   023B             ; =========================================================
0486   023B             ; SYS MAIN
0487   023B             ; =========================================================
0488   023B             SYS_MAIN:
0489   023B 3A 0F FF        LD  A, (SYSMODE)
0490   023E FE 00           CP  $00                  ; User mode can back to monitor
0491   0240 CA 4D 08        JP  Z, USER_MODE        
0492   0243             
0493   0243 3A 0F FF        LD  A, (SYSMODE)
0494   0246 FE 01           CP  $01                  ; monitor
0495   0248 CA 63 08        JP  Z, MONITOR_MODE
0496   024B             
0497   024B 3A 0F FF        LD  A,  (SYSMODE)
0498   024E FE 02           CP  $02                  ; Examine RAM
0499   0250 CA D6 02        JP  Z, EXAMINE_RAM
0500   0253             
0501   0253 3A 0F FF        LD  A, (SYSMODE)
0502   0256 FE 03           CP  $03                  ; Modify Data (Memory)
0503   0258 CA 6F 03        JP  Z,  MODIFY_RAM
0504   025B             
0505   025B 3A 0F FF        LD  A, (SYSMODE)
0506   025E FE 04           CP  $04                  ; Show register PC
0507   0260 CA BE 03        JP  Z,  SHOW_REG_PC
0508   0263             
0509   0263 3A 0F FF        LD  A, (SYSMODE)
0510   0266 FE 05           CP  $05                  ; Show register SP
0511   0268 CA 11 04        JP  Z,  SHOW_REG_SP
0512   026B             
0513   026B 3A 0F FF        LD  A, (SYSMODE)
0514   026E FE 06           CP  $06                  ; Show register AF
0515   0270 CA 5C 04        JP  Z,  SHOW_REG_AF
0516   0273             
0517   0273 3A 0F FF        LD  A, (SYSMODE)
0518   0276 FE 07           CP  $07                  ; Show register BC
0519   0278 CA B6 04        JP  Z,  SHOW_REG_BC
0520   027B             
0521   027B 3A 0F FF        LD  A, (SYSMODE)
0522   027E FE 08           CP  $08                  ; Show register DE
0523   0280 CA 0C 05        JP  Z,  SHOW_REG_DE
0524   0283             
0525   0283 3A 0F FF        LD  A, (SYSMODE)
0526   0286 FE 09           CP  $09                  ; Show register HL
0527   0288 CA 62 05        JP  Z,  SHOW_REG_HL
0528   028B             
0529   028B 3A 0F FF        LD  A, (SYSMODE)
0530   028E FE 0A           CP  $0A                  ; Show register IX
0531   0290 CA B8 05        JP  Z,  SHOW_REG_IX
0532   0293             
0533   0293 3A 0F FF        LD  A, (SYSMODE)
0534   0296 FE 0B           CP  $0B                  ; Show register IY
0535   0298 CA 0E 06        JP  Z,  SHOW_REG_IY
0536   029B             
0537   029B 3A 0F FF        LD  A, (SYSMODE)
0538   029E FE 0C           CP  $0C                  ; Show register AF'
0539   02A0 CA 64 06        JP  Z,  SHOW_REG_AFaux
0540   02A3             
0541   02A3 3A 0F FF        LD  A, (SYSMODE)
0542   02A6 FE 0D           CP  $0D                  ; Show register BC'
0543   02A8 CA C3 06        JP  Z,  SHOW_REG_BCaux
0544   02AB             
0545   02AB 3A 0F FF        LD  A, (SYSMODE)
0546   02AE FE 0E           CP  $0E                  ; Show register DE'
0547   02B0 CA 1E 07        JP  Z,  SHOW_REG_DEaux
0548   02B3             
0549   02B3 3A 0F FF        LD  A, (SYSMODE)
0550   02B6 FE 0F           CP  $0F                  ; Show register HL'
0551   02B8 CA 79 07        JP  Z,  SHOW_REG_HLaux
0552   02BB             
0553   02BB             
0554   02BB 3A 0F FF        LD  A, (SYSMODE)        ; Show HALT
0555   02BE FE 76           CP  $76
0556   02C0 CA D4 07        JP  Z, SHOW_HALT
0557   02C3             
0558   02C3 3A 0F FF        LD  A, (SYSMODE)        ; Modify Any
0559   02C6 FE 80           CP  $80
0560   02C8 CA 0D 0A        JP  Z, MD_HL
0561   02CB             
0562   02CB             
0563   02CB 3A 0F FF        LD  A, (SYSMODE)        ; Show ERROR
0564   02CE FE 99           CP  $99
0565   02D0 CA 03 08        JP  Z, SHOW_ERROR
0566   02D3             
0567   02D3 C3 EE 00        JP  EXIT_SYS
0568   02D6             
0569   02D6             
0570   02D6             ; =========================================================
0571   02D6             ; Examine RAM Mode
0572   02D6             ; =========================================================
0573   02D6             EXAMINE_RAM:
0574   02D6 CD 32 08        CALL GET_KEY_A
0575   02D9 FE FF           CP  $FF
0576   02DB CA EE 00        JP  Z, EXIT_SYS
0577   02DE             
0578   02DE F5              PUSH  AF
0579   02DF F5              PUSH  AF
0580   02E0 3A 12 FF        LD  A, (EXM_COUNT)
0581   02E3 FE 03           CP  3
0582   02E5 CA 03 03        JP  Z, EXAMINE_KEY_POS_3
0583   02E8             
0584   02E8 3A 12 FF        LD  A, (EXM_COUNT)
0585   02EB FE 02           CP  2
0586   02ED CA 21 03        JP  Z, EXAMINE_KEY_POS_2
0587   02F0             
0588   02F0 3A 12 FF        LD  A, (EXM_COUNT)
0589   02F3 FE 01           CP  1
0590   02F5 CA 3B 03        JP  Z, EXAMINE_KEY_POS_1
0591   02F8             
0592   02F8 3A 12 FF        LD  A, (EXM_COUNT)
0593   02FB FE 00           CP  0
0594   02FD CA 5C 03        JP  Z, EXAMINE_KEY_POS_0
0595   0300             
0596   0300 C3 EE 00        JP  EXIT_SYS
0597   0303             
0598   0303             EXAMINE_KEY_POS_3:
0599   0303 F1              POP  AF
0600   0304 CB 07           RLC  A
0601   0306 CB 07           RLC  A
0602   0308 CB 07           RLC  A
0603   030A CB 07           RLC  A
0604   030C 67              LD  H, A
0605   030D 22 0D FF        LD  (PC_RAM), HL
0606   0310 F1              POP  AF
0607   0311 CD F2 0A        CALL GET_NUM_FROM_LOW
0608   0314 32 00 FF        LD  (DIG_0), A
0609   0317 3A 12 FF        LD  A, (EXM_COUNT)
0610   031A 3D              DEC A
0611   031B 32 12 FF        LD  (EXM_COUNT), A
0612   031E C3 EE 00        JP  EXIT_SYS
0613   0321             
0614   0321             
0615   0321             EXAMINE_KEY_POS_2:
0616   0321 F1              POP  AF
0617   0322 2A 0D FF        LD  HL, (PC_RAM)
0618   0325 B4              OR  H
0619   0326 67              LD  H, A
0620   0327 22 0D FF        LD  (PC_RAM), HL
0621   032A F1              POP  AF
0622   032B CD F2 0A        CALL GET_NUM_FROM_LOW
0623   032E 32 01 FF        LD  (DIG_1), A
0624   0331 3A 12 FF        LD  A, (EXM_COUNT)
0625   0334 3D              DEC A
0626   0335 32 12 FF        LD  (EXM_COUNT), A
0627   0338 C3 EE 00        JP  EXIT_SYS
0628   033B             
0629   033B             EXAMINE_KEY_POS_1:
0630   033B F1              POP  AF
0631   033C 2A 0D FF        LD  HL, (PC_RAM)
0632   033F CB 07           RLC  A
0633   0341 CB 07           RLC  A
0634   0343 CB 07           RLC  A
0635   0345 CB 07           RLC  A
0636   0347 6F              LD  L, A
0637   0348 22 0D FF        LD  (PC_RAM), HL
0638   034B F1              POP  AF
0639   034C CD F2 0A        CALL GET_NUM_FROM_LOW
0640   034F 32 02 FF        LD  (DIG_2), A
0641   0352 3A 12 FF        LD  A, (EXM_COUNT)
0642   0355 3D              DEC A
0643   0356 32 12 FF        LD  (EXM_COUNT), A
0644   0359 C3 EE 00        JP  EXIT_SYS
0645   035C             
0646   035C             
0647   035C             EXAMINE_KEY_POS_0:
0648   035C F1              POP  AF
0649   035D 2A 0D FF        LD  HL, (PC_RAM)
0650   0360 B5              OR  L
0651   0361 6F              LD  L, A
0652   0362 22 0D FF        LD  (PC_RAM), HL
0653   0365 F1              POP  AF
0654   0366 CD F2 0A        CALL GET_NUM_FROM_LOW
0655   0369 32 03 FF        LD  (DIG_3), A
0656   036C C3 44 09        JP  GO_MONITOR
0657   036F             
0658   036F             ; =========================================================
0659   036F             ; MODIFY RAM Mode
0660   036F             ; =========================================================
0661   036F             MODIFY_RAM:
0662   036F             
0663   036F CD 32 08        CALL GET_KEY_A
0664   0372 FE FF           CP  $FF
0665   0374 CA EE 00        JP  Z, EXIT_SYS
0666   0377             
0667   0377 F5              PUSH  AF
0668   0378 F5              PUSH  AF
0669   0379 3A 13 FF        LD  A, (MDF_COUNT)
0670   037C FE 01           CP  1
0671   037E CA 8C 03        JP  Z, MODIFY_KEY_POS_1
0672   0381             
0673   0381 3A 13 FF        LD  A, (MDF_COUNT)
0674   0384 FE 00           CP  0
0675   0386 CA AA 03        JP  Z, MODIFY_KEY_POS_0
0676   0389             
0677   0389 C3 EE 00        JP  EXIT_SYS
0678   038C             
0679   038C             MODIFY_KEY_POS_1:
0680   038C F1              POP  AF
0681   038D CB 07           RLC  A
0682   038F CB 07           RLC  A
0683   0391 CB 07           RLC  A
0684   0393 CB 07           RLC  A
0685   0395 2A 0D FF        LD  HL, (PC_RAM)
0686   0398 77              LD  (HL), A
0687   0399             
0688   0399 F1              POP  AF
0689   039A CD F2 0A        CALL GET_NUM_FROM_LOW
0690   039D 32 06 FF        LD  (DIG_6), A
0691   03A0 3A 13 FF        LD  A, (MDF_COUNT)
0692   03A3 3D              DEC A
0693   03A4 32 13 FF        LD  (MDF_COUNT), A
0694   03A7 C3 EE 00        JP  EXIT_SYS
0695   03AA             
0696   03AA             MODIFY_KEY_POS_0:
0697   03AA F1              POP  AF
0698   03AB 2A 0D FF        LD  HL, (PC_RAM)
0699   03AE 46              LD  B, (HL)
0700   03AF B0              OR  B
0701   03B0 2A 0D FF        LD  HL, (PC_RAM)
0702   03B3 77              LD  (HL), A
0703   03B4             
0704   03B4 F1              POP  AF
0705   03B5 CD F2 0A        CALL GET_NUM_FROM_LOW
0706   03B8 32 07 FF        LD  (DIG_7), A
0707   03BB C3 44 09        JP  GO_MONITOR
0708   03BE                 
0709   03BE             
0710   03BE             SHOW_REG_PC:
0711   03BE CD 32 08        CALL  GET_KEY_A
0712   03C1 FE 00           CP  $00
0713   03C3 CA 44 09        JP Z, GO_MONITOR
0714   03C6 FE 01           CP  $01
0715   03C8 CA 4F 09        JP Z, GO_SHOW_REG_PC
0716   03CB FE 02           CP  $02
0717   03CD CA 5A 09        JP Z, GO_SHOW_REG_SP
0718   03D0 FE 03           CP  $03
0719   03D2 CA 65 09        JP Z, GO_SHOW_REG_AF
0720   03D5 FE 04           CP  $04
0721   03D7 CA 70 09        JP Z, GO_SHOW_REG_BC
0722   03DA FE 05           CP  $05
0723   03DC CA 7B 09        JP Z, GO_SHOW_REG_DE
0724   03DF FE 06           CP  $06
0725   03E1 CA 86 09        JP Z, GO_SHOW_REG_HL
0726   03E4 FE 07           CP  $07
0727   03E6 CA 91 09        JP Z, GO_SHOW_REG_IX
0728   03E9 FE 08           CP  $08
0729   03EB CA 9C 09        JP Z, GO_SHOW_REG_IY
0730   03EE             
0731   03EE                 ; RUN
0732   03EE FE 0F           CP  $0F
0733   03F0 CA D3 09        JP  Z,  FIRE
0734   03F3             
0735   03F3                 ; Modify
0736   03F3 FE 0D           CP  $0D
0737   03F5 CA DC 09        JP  Z,  MODIFY_ANY
0738   03F8             
0739   03F8 3E 73           LD  A, $73               ; P
0740   03FA 32 00 FF        LD  (DIG_0), A
0741   03FD             
0742   03FD 3E 39           LD  A, $39
0743   03FF 32 01 FF        LD  (DIG_1), A           ; C
0744   0402             
0745   0402 2A 14 FF        LD HL, (USR_PC)
0746   0405 CD A4 0B        CALL PRINT_END_HL
0747   0408             
0748   0408 21 14 FF        LD HL, USR_PC
0749   040B 22 DC FF        LD (ISR_MD_HL), HL
0750   040E             
0751   040E C3 EE 00        JP  EXIT_SYS
0752   0411             
0753   0411             
0754   0411             SHOW_REG_SP:
0755   0411 CD 32 08        CALL  GET_KEY_A
0756   0414 FE 00           CP  $00
0757   0416 CA 44 09        JP Z, GO_MONITOR
0758   0419 FE 01           CP  $01
0759   041B CA 4F 09        JP Z, GO_SHOW_REG_PC
0760   041E FE 02           CP  $02
0761   0420 CA 5A 09        JP Z, GO_SHOW_REG_SP
0762   0423 FE 03           CP  $03
0763   0425 CA 65 09        JP Z, GO_SHOW_REG_AF
0764   0428 FE 04           CP  $04
0765   042A CA 70 09        JP Z, GO_SHOW_REG_BC
0766   042D FE 05           CP  $05
0767   042F CA 7B 09        JP Z, GO_SHOW_REG_DE
0768   0432 FE 06           CP  $06
0769   0434 CA 86 09        JP Z, GO_SHOW_REG_HL
0770   0437 FE 07           CP  $07
0771   0439 CA 91 09        JP Z, GO_SHOW_REG_IX
0772   043C FE 08           CP  $08
0773   043E CA 9C 09        JP Z, GO_SHOW_REG_IY
0774   0441             
0775   0441                 ; RUN
0776   0441 FE 0F           CP  $0F
0777   0443 CA D3 09        JP  Z,  FIRE
0778   0446             
0779   0446 CD B8 0A        CALL  CLEAR_DISPLAY
0780   0449             
0781   0449 3E 6D           LD  A, $6D               ; S
0782   044B 32 00 FF        LD  (DIG_0), A
0783   044E             
0784   044E 3E 73           LD  A, $73               ; P
0785   0450 32 01 FF        LD  (DIG_1), A
0786   0453             
0787   0453 2A 16 FF        LD HL, (USR_SP)
0788   0456 CD A4 0B        CALL PRINT_END_HL
0789   0459 C3 EE 00        JP  EXIT_SYS
0790   045C             
0791   045C             
0792   045C             SHOW_REG_AF:
0793   045C CD 32 08        CALL  GET_KEY_A
0794   045F FE 00           CP  $00
0795   0461 CA 44 09        JP Z, GO_MONITOR
0796   0464 FE 01           CP  $01
0797   0466 CA 4F 09        JP Z, GO_SHOW_REG_PC
0798   0469 FE 02           CP  $02
0799   046B CA 5A 09        JP Z, GO_SHOW_REG_SP
0800   046E FE 03           CP  $03
0801   0470 CA A7 09        JP Z, GO_SHOW_REG_AFaux
0802   0473 FE 04           CP  $04
0803   0475 CA 70 09        JP Z, GO_SHOW_REG_BC
0804   0478 FE 05           CP  $05
0805   047A CA 7B 09        JP Z, GO_SHOW_REG_DE
0806   047D FE 06           CP  $06
0807   047F CA 86 09        JP Z, GO_SHOW_REG_HL
0808   0482 FE 07           CP  $07
0809   0484 CA 91 09        JP Z, GO_SHOW_REG_IX
0810   0487 FE 08           CP  $08
0811   0489 CA 9C 09        JP Z, GO_SHOW_REG_IY
0812   048C             
0813   048C                 ; RUN
0814   048C FE 0F           CP  $0F
0815   048E CA D3 09        JP  Z,  FIRE
0816   0491             
0817   0491                 ; Modify
0818   0491 FE 0D           CP  $0D
0819   0493 CA DC 09        JP  Z,  MODIFY_ANY
0820   0496             
0821   0496 CD B8 0A        CALL  CLEAR_DISPLAY
0822   0499             
0823   0499 3E 77           LD  A, $77               ; A
0824   049B 32 00 FF        LD  (DIG_0), A
0825   049E             
0826   049E 3E 71           LD  A, $71               ; F
0827   04A0 32 01 FF        LD  (DIG_1), A
0828   04A3             
0829   04A3 2A 1E FF        LD  HL, (USR_AF)
0830   04A6 7D              LD  A, L
0831   04A7 32 2C FF        LD (CPU_FLAGS), A
0832   04AA CD A4 0B        CALL PRINT_END_HL
0833   04AD             
0834   04AD 21 1E FF        LD HL, USR_AF
0835   04B0 22 DC FF        LD (ISR_MD_HL), HL
0836   04B3             
0837   04B3 C3 EE 00        JP  EXIT_SYS
0838   04B6             
0839   04B6             
0840   04B6             SHOW_REG_BC:
0841   04B6 CD 32 08        CALL  GET_KEY_A
0842   04B9 FE 00           CP  $00
0843   04BB CA 44 09        JP Z, GO_MONITOR
0844   04BE FE 01           CP  $01
0845   04C0 CA 4F 09        JP Z, GO_SHOW_REG_PC
0846   04C3 FE 02           CP  $02
0847   04C5 CA 5A 09        JP Z, GO_SHOW_REG_SP
0848   04C8 FE 03           CP  $03
0849   04CA CA 65 09        JP Z, GO_SHOW_REG_AF
0850   04CD FE 04           CP  $04
0851   04CF CA B2 09        JP Z, GO_SHOW_REG_BCaux
0852   04D2 FE 05           CP  $05
0853   04D4 CA 7B 09        JP Z, GO_SHOW_REG_DE
0854   04D7 FE 06           CP  $06
0855   04D9 CA 86 09        JP Z, GO_SHOW_REG_HL
0856   04DC FE 07           CP  $07
0857   04DE CA 91 09        JP Z, GO_SHOW_REG_IX
0858   04E1 FE 08           CP  $08
0859   04E3 CA 9C 09        JP Z, GO_SHOW_REG_IY
0860   04E6             
0861   04E6                 ; RUN
0862   04E6 FE 0F           CP  $0F
0863   04E8 CA D3 09        JP  Z,  FIRE
0864   04EB             
0865   04EB                 ; Modify
0866   04EB FE 0D           CP  $0D
0867   04ED CA DC 09        JP  Z,  MODIFY_ANY
0868   04F0             
0869   04F0             
0870   04F0             
0871   04F0 CD B8 0A        CALL  CLEAR_DISPLAY
0872   04F3             
0873   04F3 3E 7C           LD  A, $7C               ; B
0874   04F5 32 00 FF        LD  (DIG_0), A
0875   04F8             
0876   04F8 3E 39           LD  A, $39               ; C
0877   04FA 32 01 FF        LD  (DIG_1), A
0878   04FD             
0879   04FD 2A 1A FF        LD HL, (USR_BC)
0880   0500 CD A4 0B        CALL PRINT_END_HL
0881   0503             
0882   0503 21 1A FF        LD HL, USR_BC
0883   0506 22 DC FF        LD (ISR_MD_HL), HL
0884   0509             
0885   0509 C3 EE 00        JP  EXIT_SYS
0886   050C             
0887   050C             SHOW_REG_DE:
0888   050C CD 32 08        CALL  GET_KEY_A
0889   050F FE 00           CP  $00
0890   0511 CA 44 09        JP Z, GO_MONITOR
0891   0514 FE 01           CP  $01
0892   0516 CA 4F 09        JP Z, GO_SHOW_REG_PC
0893   0519 FE 02           CP  $02
0894   051B CA 5A 09        JP Z, GO_SHOW_REG_SP
0895   051E FE 03           CP  $03
0896   0520 CA 65 09        JP Z, GO_SHOW_REG_AF
0897   0523 FE 04           CP  $04
0898   0525 CA 70 09        JP Z, GO_SHOW_REG_BC
0899   0528 FE 05           CP  $05
0900   052A CA BD 09        JP Z, GO_SHOW_REG_DEaux
0901   052D FE 06           CP  $06
0902   052F CA 86 09        JP Z, GO_SHOW_REG_HL
0903   0532 FE 07           CP  $07
0904   0534 CA 91 09        JP Z, GO_SHOW_REG_IX
0905   0537 FE 08           CP  $08
0906   0539 CA 9C 09        JP Z, GO_SHOW_REG_IY
0907   053C             
0908   053C                 ; RUN
0909   053C FE 0F           CP  $0F
0910   053E CA D3 09        JP  Z,  FIRE
0911   0541             
0912   0541                 ; Modify
0913   0541 FE 0D           CP  $0D
0914   0543 CA DC 09        JP  Z,  MODIFY_ANY
0915   0546             
0916   0546 CD B8 0A        CALL  CLEAR_DISPLAY
0917   0549             
0918   0549 3E 5E           LD  A, $5E               ; D
0919   054B 32 00 FF        LD  (DIG_0), A
0920   054E             
0921   054E 3E 79           LD  A, $79               ; E
0922   0550 32 01 FF        LD  (DIG_1), A
0923   0553             
0924   0553 2A 1C FF        LD HL, (USR_DE)
0925   0556 CD A4 0B        CALL PRINT_END_HL
0926   0559             
0927   0559 21 1C FF        LD HL, USR_DE
0928   055C 22 DC FF        LD (ISR_MD_HL), HL
0929   055F             
0930   055F C3 EE 00        JP  EXIT_SYS
0931   0562             
0932   0562             SHOW_REG_HL:
0933   0562 CD 32 08        CALL  GET_KEY_A
0934   0565 FE 00           CP  $00
0935   0567 CA 44 09        JP Z, GO_MONITOR
0936   056A FE 01           CP  $01
0937   056C CA 4F 09        JP Z, GO_SHOW_REG_PC
0938   056F FE 02           CP  $02
0939   0571 CA 5A 09        JP Z, GO_SHOW_REG_SP
0940   0574 FE 03           CP  $03
0941   0576 CA 65 09        JP Z, GO_SHOW_REG_AF
0942   0579 FE 04           CP  $04
0943   057B CA 70 09        JP Z, GO_SHOW_REG_BC
0944   057E FE 05           CP  $05
0945   0580 CA 7B 09        JP Z, GO_SHOW_REG_DE
0946   0583 FE 06           CP  $06
0947   0585 CA C8 09        JP Z, GO_SHOW_REG_HLaux
0948   0588 FE 07           CP  $07
0949   058A CA 91 09        JP Z, GO_SHOW_REG_IX
0950   058D FE 08           CP  $08
0951   058F CA 9C 09        JP Z, GO_SHOW_REG_IY
0952   0592             
0953   0592                 ; RUN
0954   0592 FE 0F           CP  $0F
0955   0594 CA D3 09        JP  Z,  FIRE
0956   0597             
0957   0597                 ; Modify
0958   0597 FE 0D           CP  $0D
0959   0599 CA DC 09        JP  Z,  MODIFY_ANY
0960   059C             
0961   059C CD B8 0A        CALL  CLEAR_DISPLAY
0962   059F             
0963   059F 3E 76           LD  A, $76               ; H
0964   05A1 32 00 FF        LD  (DIG_0), A
0965   05A4             
0966   05A4 3E 38           LD  A, $38               ; L
0967   05A6 32 01 FF        LD  (DIG_1), A
0968   05A9             
0969   05A9 2A 18 FF        LD HL, (USR_HL)
0970   05AC CD A4 0B        CALL PRINT_END_HL
0971   05AF             
0972   05AF 21 18 FF        LD HL, USR_HL
0973   05B2 22 DC FF        LD (ISR_MD_HL), HL
0974   05B5             
0975   05B5 C3 EE 00        JP  EXIT_SYS
0976   05B8             
0977   05B8             SHOW_REG_IX:
0978   05B8 CD 32 08        CALL  GET_KEY_A
0979   05BB FE 00           CP  $00
0980   05BD CA 44 09        JP Z, GO_MONITOR
0981   05C0 FE 01           CP  $01
0982   05C2 CA 4F 09        JP Z, GO_SHOW_REG_PC
0983   05C5 FE 02           CP  $02
0984   05C7 CA 5A 09        JP Z, GO_SHOW_REG_SP
0985   05CA FE 03           CP  $03
0986   05CC CA 65 09        JP Z, GO_SHOW_REG_AF
0987   05CF FE 04           CP  $04
0988   05D1 CA 70 09        JP Z, GO_SHOW_REG_BC
0989   05D4 FE 05           CP  $05
0990   05D6 CA 7B 09        JP Z, GO_SHOW_REG_DE
0991   05D9 FE 06           CP  $06
0992   05DB CA 86 09        JP Z, GO_SHOW_REG_HL
0993   05DE FE 07           CP  $07
0994   05E0 CA 91 09        JP Z, GO_SHOW_REG_IX
0995   05E3 FE 08           CP  $08
0996   05E5 CA 9C 09        JP Z, GO_SHOW_REG_IY
0997   05E8             
0998   05E8                 ; RUN
0999   05E8 FE 0F           CP  $0F
1000   05EA CA D3 09        JP  Z,  FIRE
1001   05ED             
1002   05ED                 ; Modify
1003   05ED FE 0D           CP  $0D
1004   05EF CA DC 09        JP  Z,  MODIFY_ANY
1005   05F2             
1006   05F2 CD B8 0A        CALL  CLEAR_DISPLAY
1007   05F5             
1008   05F5 3E 06           LD  A, $06               ; I
1009   05F7 32 00 FF        LD  (DIG_0), A
1010   05FA             
1011   05FA 3E 70           LD  A, $70               ; X
1012   05FC 32 01 FF        LD  (DIG_1), A
1013   05FF             
1014   05FF 2A 20 FF        LD HL, (USR_IX)
1015   0602 CD A4 0B        CALL PRINT_END_HL
1016   0605             
1017   0605 21 20 FF        LD HL, USR_IX
1018   0608 22 DC FF        LD (ISR_MD_HL), HL
1019   060B             
1020   060B C3 EE 00        JP  EXIT_SYS
1021   060E             
1022   060E             SHOW_REG_IY:
1023   060E CD 32 08        CALL  GET_KEY_A
1024   0611 FE 00           CP  $00
1025   0613 CA 44 09        JP Z, GO_MONITOR
1026   0616 FE 01           CP  $01
1027   0618 CA 4F 09        JP Z, GO_SHOW_REG_PC
1028   061B FE 02           CP  $02
1029   061D CA 5A 09        JP Z, GO_SHOW_REG_SP
1030   0620 FE 03           CP  $03
1031   0622 CA 65 09        JP Z, GO_SHOW_REG_AF
1032   0625 FE 04           CP  $04
1033   0627 CA 70 09        JP Z, GO_SHOW_REG_BC
1034   062A FE 05           CP  $05
1035   062C CA 7B 09        JP Z, GO_SHOW_REG_DE
1036   062F FE 06           CP  $06
1037   0631 CA 86 09        JP Z, GO_SHOW_REG_HL
1038   0634 FE 07           CP  $07
1039   0636 CA 91 09        JP Z, GO_SHOW_REG_IX
1040   0639 FE 08           CP  $08
1041   063B CA 9C 09        JP Z, GO_SHOW_REG_IY
1042   063E             
1043   063E                 ; RUN
1044   063E FE 0F           CP  $0F
1045   0640 CA D3 09        JP  Z,  FIRE
1046   0643             
1047   0643                 ; Modify
1048   0643 FE 0D           CP  $0D
1049   0645 CA DC 09        JP  Z,  MODIFY_ANY
1050   0648             
1051   0648 CD B8 0A        CALL  CLEAR_DISPLAY
1052   064B             
1053   064B 3E 06           LD  A, $06               ; I
1054   064D 32 00 FF        LD  (DIG_0), A
1055   0650             
1056   0650 3E 6E           LD  A, $6E               ; Y
1057   0652 32 01 FF        LD  (DIG_1), A
1058   0655             
1059   0655 2A 22 FF        LD HL, (USR_IY)
1060   0658 CD A4 0B        CALL PRINT_END_HL
1061   065B             
1062   065B 21 22 FF        LD HL, USR_IY
1063   065E 22 DC FF        LD (ISR_MD_HL), HL
1064   0661             
1065   0661 C3 EE 00        JP  EXIT_SYS
1066   0664             
1067   0664             SHOW_REG_AFaux:
1068   0664 CD 32 08        CALL  GET_KEY_A
1069   0667 FE 00           CP  $00
1070   0669 CA 44 09        JP Z, GO_MONITOR
1071   066C FE 01           CP  $01
1072   066E CA 4F 09        JP Z, GO_SHOW_REG_PC
1073   0671 FE 02           CP  $02
1074   0673 CA 5A 09        JP Z, GO_SHOW_REG_SP
1075   0676 FE 03           CP  $03
1076   0678 CA 65 09        JP Z, GO_SHOW_REG_AF
1077   067B FE 04           CP  $04
1078   067D CA 70 09        JP Z, GO_SHOW_REG_BC
1079   0680 FE 05           CP  $05
1080   0682 CA 7B 09        JP Z, GO_SHOW_REG_DE
1081   0685 FE 06           CP  $06
1082   0687 CA 86 09        JP Z, GO_SHOW_REG_HL
1083   068A FE 07           CP  $07
1084   068C CA 91 09        JP Z, GO_SHOW_REG_IX
1085   068F FE 08           CP  $08
1086   0691 CA 9C 09        JP Z, GO_SHOW_REG_IY
1087   0694             
1088   0694                 ; RUN
1089   0694 FE 0F           CP  $0F
1090   0696 CA D3 09        JP  Z,  FIRE
1091   0699             
1092   0699                 ; Modify
1093   0699 FE 0D           CP  $0D
1094   069B CA DC 09        JP  Z,  MODIFY_ANY
1095   069E             
1096   069E CD B8 0A        CALL  CLEAR_DISPLAY
1097   06A1             
1098   06A1             
1099   06A1 3E 77           LD  A, $77               ; A
1100   06A3 32 00 FF        LD  (DIG_0), A
1101   06A6             
1102   06A6 3E 71           LD  A, $71               ; F
1103   06A8 32 01 FF        LD  (DIG_1), A
1104   06AB             
1105   06AB 3E 20           LD  A, $20               ; '
1106   06AD 32 02 FF        LD  (DIG_2), A
1107   06B0             
1108   06B0 2A 24 FF        LD HL, (USR_AFA)
1109   06B3 7D              LD  A, L
1110   06B4 32 2C FF        LD (CPU_FLAGS), A
1111   06B7 CD A4 0B        CALL PRINT_END_HL
1112   06BA             
1113   06BA 21 24 FF        LD HL, USR_AFA
1114   06BD 22 DC FF        LD (ISR_MD_HL), HL
1115   06C0             
1116   06C0 C3 EE 00        JP  EXIT_SYS
1117   06C3             
1118   06C3             
1119   06C3             SHOW_REG_BCaux:
1120   06C3 CD 32 08        CALL  GET_KEY_A
1121   06C6 FE 00           CP  $00
1122   06C8 CA 44 09        JP Z, GO_MONITOR
1123   06CB FE 01           CP  $01
1124   06CD CA 4F 09        JP Z, GO_SHOW_REG_PC
1125   06D0 FE 02           CP  $02
1126   06D2 CA 5A 09        JP Z, GO_SHOW_REG_SP
1127   06D5 FE 03           CP  $03
1128   06D7 CA 65 09        JP Z, GO_SHOW_REG_AF
1129   06DA FE 04           CP  $04
1130   06DC CA 70 09        JP Z, GO_SHOW_REG_BC
1131   06DF FE 05           CP  $05
1132   06E1 CA 7B 09        JP Z, GO_SHOW_REG_DE
1133   06E4 FE 06           CP  $06
1134   06E6 CA 86 09        JP Z, GO_SHOW_REG_HL
1135   06E9 FE 07           CP  $07
1136   06EB CA 91 09        JP Z, GO_SHOW_REG_IX
1137   06EE FE 08           CP  $08
1138   06F0 CA 9C 09        JP Z, GO_SHOW_REG_IY
1139   06F3             
1140   06F3                 ; RUN
1141   06F3 FE 0F           CP  $0F
1142   06F5 CA D3 09        JP  Z,  FIRE
1143   06F8             
1144   06F8                 ; Modify
1145   06F8 FE 0D           CP  $0D
1146   06FA CA DC 09        JP  Z,  MODIFY_ANY
1147   06FD             
1148   06FD CD B8 0A        CALL  CLEAR_DISPLAY
1149   0700             
1150   0700             
1151   0700 3E 7C           LD  A, $7C               ; B
1152   0702 32 00 FF        LD  (DIG_0), A
1153   0705             
1154   0705 3E 39           LD  A, $39               ; C
1155   0707 32 01 FF        LD  (DIG_1), A
1156   070A             
1157   070A 3E 20           LD  A, $20               ; '
1158   070C 32 02 FF        LD  (DIG_2), A
1159   070F             
1160   070F 2A 26 FF        LD HL, (USR_BCA)
1161   0712 CD A4 0B        CALL PRINT_END_HL
1162   0715             
1163   0715 21 26 FF        LD HL, USR_BCA
1164   0718 22 DC FF        LD (ISR_MD_HL), HL
1165   071B             
1166   071B C3 EE 00        JP  EXIT_SYS
1167   071E             
1168   071E             SHOW_REG_DEaux:
1169   071E CD 32 08        CALL  GET_KEY_A
1170   0721 FE 00           CP  $00
1171   0723 CA 44 09        JP Z, GO_MONITOR
1172   0726 FE 01           CP  $01
1173   0728 CA 4F 09        JP Z, GO_SHOW_REG_PC
1174   072B FE 02           CP  $02
1175   072D CA 5A 09        JP Z, GO_SHOW_REG_SP
1176   0730 FE 03           CP  $03
1177   0732 CA 65 09        JP Z, GO_SHOW_REG_AF
1178   0735 FE 04           CP  $04
1179   0737 CA 70 09        JP Z, GO_SHOW_REG_BC
1180   073A FE 05           CP  $05
1181   073C CA 7B 09        JP Z, GO_SHOW_REG_DE
1182   073F FE 06           CP  $06
1183   0741 CA 86 09        JP Z, GO_SHOW_REG_HL
1184   0744 FE 07           CP  $07
1185   0746 CA 91 09        JP Z, GO_SHOW_REG_IX
1186   0749 FE 08           CP  $08
1187   074B CA 9C 09        JP Z, GO_SHOW_REG_IY
1188   074E             
1189   074E                 ; RUN
1190   074E FE 0F           CP  $0F
1191   0750 CA D3 09        JP  Z,  FIRE
1192   0753             
1193   0753                 ; Modify
1194   0753 FE 0D           CP  $0D
1195   0755 CA DC 09        JP  Z,  MODIFY_ANY
1196   0758             
1197   0758 CD B8 0A        CALL  CLEAR_DISPLAY
1198   075B             
1199   075B 3E 5E           LD  A, $5E               ; D
1200   075D 32 00 FF        LD  (DIG_0), A
1201   0760             
1202   0760 3E 79           LD  A, $79               ; E
1203   0762 32 01 FF        LD  (DIG_1), A
1204   0765             
1205   0765 3E 20           LD  A, $20               ; '
1206   0767 32 02 FF        LD  (DIG_2), A
1207   076A             
1208   076A 2A 28 FF        LD HL, (USR_DEA)
1209   076D CD A4 0B        CALL PRINT_END_HL
1210   0770             
1211   0770 21 28 FF        LD HL, USR_DEA
1212   0773 22 DC FF        LD (ISR_MD_HL), HL
1213   0776             
1214   0776 C3 EE 00        JP  EXIT_SYS
1215   0779             
1216   0779             SHOW_REG_HLaux:
1217   0779 CD 32 08        CALL  GET_KEY_A
1218   077C FE 00           CP  $00
1219   077E CA 44 09        JP Z, GO_MONITOR
1220   0781 FE 01           CP  $01
1221   0783 CA 4F 09        JP Z, GO_SHOW_REG_PC
1222   0786 FE 02           CP  $02
1223   0788 CA 5A 09        JP Z, GO_SHOW_REG_SP
1224   078B FE 03           CP  $03
1225   078D CA 65 09        JP Z, GO_SHOW_REG_AF
1226   0790 FE 04           CP  $04
1227   0792 CA 70 09        JP Z, GO_SHOW_REG_BC
1228   0795 FE 05           CP  $05
1229   0797 CA 7B 09        JP Z, GO_SHOW_REG_DE
1230   079A FE 06           CP  $06
1231   079C CA 86 09        JP Z, GO_SHOW_REG_HL
1232   079F FE 07           CP  $07
1233   07A1 CA 91 09        JP Z, GO_SHOW_REG_IX
1234   07A4 FE 08           CP  $08
1235   07A6 CA 9C 09        JP Z, GO_SHOW_REG_IY
1236   07A9             
1237   07A9                 ; RUN
1238   07A9 FE 0F           CP  $0F
1239   07AB CA D3 09        JP  Z,  FIRE
1240   07AE             
1241   07AE                 ; Modify
1242   07AE FE 0D           CP  $0D
1243   07B0 CA DC 09        JP  Z,  MODIFY_ANY
1244   07B3             
1245   07B3 CD B8 0A        CALL  CLEAR_DISPLAY
1246   07B6             
1247   07B6 3E 76           LD  A, $76               ; H
1248   07B8 32 00 FF        LD  (DIG_0), A
1249   07BB             
1250   07BB 3E 38           LD  A, $38               ; L
1251   07BD 32 01 FF        LD  (DIG_1), A
1252   07C0             
1253   07C0 3E 20           LD  A, $20               ; '
1254   07C2 32 02 FF        LD  (DIG_2), A
1255   07C5             
1256   07C5 2A 2A FF        LD HL, (USR_HLA)
1257   07C8 CD A4 0B        CALL PRINT_END_HL
1258   07CB             
1259   07CB 21 2A FF        LD HL, USR_HLA
1260   07CE 22 DC FF        LD (ISR_MD_HL), HL
1261   07D1             
1262   07D1 C3 EE 00        JP  EXIT_SYS
1263   07D4             
1264   07D4             SHOW_HALT:
1265   07D4 3A 09 FF        LD  A, (INPUT)
1266   07D7 FE FB           CP  $FB
1267   07D9 CA 44 09        JP  Z, GO_MONITOR
1268   07DC             
1269   07DC 3E 40           LD  A, $40               ; -
1270   07DE 32 00 FF        LD  (DIG_0), A
1271   07E1 32 01 FF        LD  (DIG_1), A
1272   07E4             
1273   07E4 3E 76           LD  A, $76               ; H
1274   07E6 32 02 FF        LD  (DIG_2), A
1275   07E9             
1276   07E9 3E 77           LD  A, $77               ; A
1277   07EB 32 03 FF        LD  (DIG_3), A
1278   07EE             
1279   07EE 3E 38           LD  A, $38               ; L
1280   07F0 32 04 FF        LD  (DIG_4), A
1281   07F3             
1282   07F3 3E 78           LD  A, $78               ; T
1283   07F5 32 05 FF        LD  (DIG_5), A
1284   07F8             
1285   07F8 3E 40           LD  A, $40               ; -
1286   07FA 32 06 FF        LD  (DIG_6), A
1287   07FD 32 07 FF        LD  (DIG_7), A
1288   0800             
1289   0800 C3 EE 00        JP EXIT_SYS
1290   0803             
1291   0803             SHOW_ERROR:
1292   0803 3A 09 FF        LD  A, (INPUT)
1293   0806 FE FB           CP  $FB
1294   0808 CA 44 09        JP  Z, GO_MONITOR
1295   080B             
1296   080B 3E 79           LD  A, $79               ; E
1297   080D 32 00 FF        LD  (DIG_0), A
1298   0810             
1299   0810 3E 50           LD  A, $50               ; R
1300   0812 32 01 FF        LD  (DIG_1), A
1301   0815             
1302   0815 3E 50           LD  A, $50               ; R
1303   0817 32 02 FF        LD  (DIG_2), A
1304   081A             
1305   081A 3E 3F           LD  A, $3F               ; O
1306   081C 32 03 FF        LD  (DIG_3), A
1307   081F             
1308   081F 3E 50           LD  A, $50               ; R
1309   0821 32 04 FF        LD  (DIG_4), A
1310   0824             
1311   0824 3E 00           LD  A, $0               ; ''
1312   0826 32 05 FF        LD  (DIG_5), A           
1313   0829 32 06 FF        LD  (DIG_6), A
1314   082C 32 07 FF        LD  (DIG_7), A
1315   082F             
1316   082F C3 EE 00        JP EXIT_SYS
1317   0832             
1318   0832             ; =========================================================
1319   0832             ; GET KEY IN A, IF A == FFh then no KEY
1320   0832             ; =========================================================
1321   0832             GET_KEY_A:
1322   0832 3A 0B FF        LD  A, (KEY_TIMEOUT)
1323   0835 FE 00           CP  0
1324   0837 CA 3D 08        JP  Z, RET_KEY
1325   083A 3E FF           LD  A, $FF
1326   083C C9              RET
1327   083D             
1328   083D             RET_KEY:
1329   083D 3E 64           LD A, CKEY_TIMEOUT
1330   083F 32 0B FF        LD (KEY_TIMEOUT), A
1331   0842             
1332   0842 3A 08 FF        LD  A, (KEY_PRESS)
1333   0845 F5              PUSH  AF
1334   0846 3E FF           LD  A, $FF
1335   0848 32 08 FF        LD  (KEY_PRESS), A
1336   084B F1              POP  AF
1337   084C C9              RET
1338   084D             
1339   084D             
1340   084D             ; =========================================================
1341   084D             ; MONITOR Mode
1342   084D             ; =========================================================
1343   084D             USER_MODE:
1344   084D 3A 09 FF        LD  A, (INPUT)
1345   0850 FE FB           CP  $FB
1346   0852 CA 44 09        JP  Z, GO_MONITOR
1347   0855                 
1348   0855                 ; Copy USER_DISPx to DIG_x
1349   0855 21 D0 FF        LD	HL, USER_DISP0
1350   0858 11 00 FF    	LD	DE, DIG_0
1351   085B 01 08 00    	LD	BC, $0008
1352   085E ED B0       	LDIR
1353   0860             
1354   0860 C3 EE 00        JP  EXIT_SYS
1355   0863             
1356   0863             MONITOR_MODE:
1357   0863                 ; Mostra o endereço
1358   0863 2A 0D FF        LD  HL, (PC_RAM)
1359   0866 CD 47 0B        CALL PRINT_HL
1360   0869             
1361   0869                 ; Limpa digitos
1362   0869 3E 00           LD  A, 0
1363   086B 32 04 FF        LD  (DIG_4), A
1364   086E 32 05 FF        LD  (DIG_5), A
1365   0871             
1366   0871                 ; Mostra os dados no endereço
1367   0871 2A 0D FF        LD  HL, (PC_RAM)
1368   0874 7E              LD  A, (HL)
1369   0875 CD 1A 0B        CALL  PRINT_A
1370   0878             
1371   0878             
1372   0878 CD 32 08        CALL  GET_KEY_A
1373   087B             
1374   087B                 ; Incrementa endereço
1375   087B 32 0A FF        LD (TMP_KEY), A
1376   087E FE 0A           CP  $0A
1377   0880 CA 00 09        JP  Z,  PC_RAM_INC
1378   0883             
1379   0883                 ; Decrementa endereço
1380   0883 3A 0A FF        LD  A, (TMP_KEY)
1381   0886 FE 0B           CP  $0B
1382   0888 CA F6 08        JP  Z,  PC_RAM_DEC
1383   088B             
1384   088B                 ; Examina memoria
1385   088B 3A 0A FF        LD  A, (TMP_KEY)
1386   088E FE 0E           CP  $0E
1387   0890 CA 0A 09        JP  Z,  GO_EXAMINE
1388   0893             
1389   0893                 ; + moDify Memory
1390   0893 3A 0A FF        LD  A, (TMP_KEY)
1391   0896 FE 0C           CP  $0C
1392   0898 CA 25 09        JP  Z,  GO_ADD_MODIFY
1393   089B             
1394   089B                 ; moDify Memory
1395   089B 3A 0A FF        LD  A, (TMP_KEY)
1396   089E FE 0D           CP  $0D
1397   08A0 CA 2F 09        JP  Z,  GO_MODIFY
1398   08A3             
1399   08A3                 ; RUN
1400   08A3 3A 0A FF        LD  A, (TMP_KEY)
1401   08A6 FE 0F           CP  $0F
1402   08A8 CA D3 09        JP  Z,  FIRE
1403   08AB             
1404   08AB                 ; Show register PC
1405   08AB 3A 0A FF        LD  A, (TMP_KEY)
1406   08AE FE 01           CP  $01
1407   08B0 CA 4F 09        JP  Z, GO_SHOW_REG_PC
1408   08B3             
1409   08B3                 ; Show register SP
1410   08B3 3A 0A FF        LD  A, (TMP_KEY)
1411   08B6 FE 02           CP  $02
1412   08B8 CA 5A 09        JP  Z, GO_SHOW_REG_SP
1413   08BB             
1414   08BB                 ; Show register AF
1415   08BB 3A 0A FF        LD  A, (TMP_KEY)
1416   08BE FE 03           CP  $03
1417   08C0 CA 65 09        JP  Z, GO_SHOW_REG_AF
1418   08C3             
1419   08C3                 ; Show register BC
1420   08C3 3A 0A FF        LD  A, (TMP_KEY)
1421   08C6 FE 04           CP  $04
1422   08C8 CA 70 09        JP  Z, GO_SHOW_REG_BC
1423   08CB             
1424   08CB                 ; Show register DE
1425   08CB 3A 0A FF        LD  A, (TMP_KEY)
1426   08CE FE 05           CP  $05
1427   08D0 CA 7B 09        JP  Z, GO_SHOW_REG_DE
1428   08D3             
1429   08D3                 ; Show register HL
1430   08D3 3A 0A FF        LD  A, (TMP_KEY)
1431   08D6 FE 06           CP  $06
1432   08D8 CA 86 09        JP  Z, GO_SHOW_REG_HL
1433   08DB             
1434   08DB                 ; Show register IX
1435   08DB 3A 0A FF        LD  A, (TMP_KEY)
1436   08DE FE 07           CP  $07
1437   08E0 CA 91 09        JP  Z, GO_SHOW_REG_IX
1438   08E3             
1439   08E3                 ; Show register iY
1440   08E3 3A 0A FF        LD  A, (TMP_KEY)
1441   08E6 FE 08           CP  $08
1442   08E8 CA 9C 09        JP  Z, GO_SHOW_REG_IY
1443   08EB             
1444   08EB                 ; Back to user mode
1445   08EB 3A 0A FF        LD  A, (TMP_KEY)
1446   08EE FE 09           CP  $09
1447   08F0 CA 05 0A        JP  Z, GO_USER_MODE
1448   08F3             
1449   08F3 C3 EE 00        JP  EXIT_SYS
1450   08F6                 
1451   08F6             
1452   08F6             PC_RAM_DEC:
1453   08F6 2A 0D FF        LD  HL, (PC_RAM)
1454   08F9 2B              DEC  HL
1455   08FA 22 0D FF        LD  (PC_RAM), HL
1456   08FD C3 EE 00        JP  EXIT_SYS
1457   0900             
1458   0900             PC_RAM_INC:
1459   0900 2A 0D FF        LD  HL, (PC_RAM)
1460   0903 23              INC  HL
1461   0904 22 0D FF        LD  (PC_RAM), HL
1462   0907 C3 EE 00        JP  EXIT_SYS
1463   090A             
1464   090A             GO_EXAMINE:
1465   090A 3E 03           LD  A, $03
1466   090C 32 12 FF        LD (EXM_COUNT), A        ; Set count 4 digits, position display
1467   090F 3E 02           LD  A, $02
1468   0911 32 0F FF        LD (SYSMODE), A          ; Examine mode
1469   0914 3E 40           LD A, 01000000b
1470   0916 32 00 FF        LD (DIG_0), A
1471   0919 32 01 FF        LD (DIG_1), A
1472   091C 32 02 FF        LD (DIG_2), A
1473   091F 32 03 FF        LD (DIG_3), A
1474   0922 C3 EE 00        JP  EXIT_SYS
1475   0925             
1476   0925             GO_ADD_MODIFY:
1477   0925 2A 0D FF        LD  HL, (PC_RAM)
1478   0928 23              INC HL
1479   0929 22 0D FF        LD  (PC_RAM), HL
1480   092C CD 47 0B        CALL  PRINT_HL
1481   092F             GO_MODIFY:
1482   092F 3E 01           LD  A, $01                  ; Set count 2 digits, position display
1483   0931 32 13 FF        LD  (MDF_COUNT), A
1484   0934 3E 03           LD  A, $03                  ; moDify mode (Memory)
1485   0936 32 0F FF        LD  (SYSMODE), A
1486   0939 3E 40           LD  A, 01000000b
1487   093B 32 06 FF        LD  (DIG_6), A
1488   093E 32 07 FF        LD  (DIG_7), A
1489   0941 C3 EE 00        JP  EXIT_SYS
1490   0944             
1491   0944             GO_MONITOR:
1492   0944 CD B8 0A        CALL  CLEAR_DISPLAY
1493   0947 3E 01           LD  A, $01
1494   0949 32 0F FF        LD  (SYSMODE), A
1495   094C C3 EE 00        JP  EXIT_SYS
1496   094F             
1497   094F             GO_SHOW_REG_PC:
1498   094F CD B8 0A        CALL CLEAR_DISPLAY
1499   0952 3E 04           LD  A, $04
1500   0954 32 0F FF        LD  (SYSMODE), A
1501   0957 C3 EE 00        JP  EXIT_SYS
1502   095A             
1503   095A             GO_SHOW_REG_SP:
1504   095A CD B8 0A        CALL CLEAR_DISPLAY
1505   095D 3E 05           LD  A, $05
1506   095F 32 0F FF        LD  (SYSMODE), A
1507   0962 C3 EE 00        JP  EXIT_SYS
1508   0965             
1509   0965             GO_SHOW_REG_AF:
1510   0965 CD B8 0A        CALL CLEAR_DISPLAY
1511   0968 3E 06           LD  A, $06
1512   096A 32 0F FF        LD  (SYSMODE), A
1513   096D C3 EE 00        JP  EXIT_SYS
1514   0970             
1515   0970             GO_SHOW_REG_BC:
1516   0970 CD B8 0A        CALL CLEAR_DISPLAY
1517   0973 3E 07           LD  A, $07
1518   0975 32 0F FF        LD  (SYSMODE), A
1519   0978 C3 EE 00        JP  EXIT_SYS
1520   097B             
1521   097B             GO_SHOW_REG_DE:
1522   097B CD B8 0A        CALL CLEAR_DISPLAY
1523   097E 3E 08           LD  A, $08
1524   0980 32 0F FF        LD  (SYSMODE), A
1525   0983 C3 EE 00        JP  EXIT_SYS
1526   0986             
1527   0986             GO_SHOW_REG_HL:
1528   0986 CD B8 0A        CALL CLEAR_DISPLAY
1529   0989 3E 09           LD  A, $09
1530   098B 32 0F FF        LD  (SYSMODE), A
1531   098E C3 EE 00        JP  EXIT_SYS
1532   0991             
1533   0991             GO_SHOW_REG_IX:
1534   0991 CD B8 0A        CALL CLEAR_DISPLAY
1535   0994 3E 0A           LD  A, $0A
1536   0996 32 0F FF        LD  (SYSMODE), A
1537   0999 C3 EE 00        JP  EXIT_SYS
1538   099C             
1539   099C             GO_SHOW_REG_IY:
1540   099C CD B8 0A        CALL CLEAR_DISPLAY
1541   099F 3E 0B           LD  A, $0B
1542   09A1 32 0F FF        LD  (SYSMODE), A
1543   09A4 C3 EE 00        JP  EXIT_SYS
1544   09A7             
1545   09A7             GO_SHOW_REG_AFaux:
1546   09A7 CD B8 0A        CALL CLEAR_DISPLAY
1547   09AA 3E 0C           LD  A, $0C
1548   09AC 32 0F FF        LD  (SYSMODE), A
1549   09AF C3 EE 00        JP  EXIT_SYS
1550   09B2             
1551   09B2             GO_SHOW_REG_BCaux:
1552   09B2 CD B8 0A        CALL CLEAR_DISPLAY
1553   09B5 3E 0D           LD  A, $0D
1554   09B7 32 0F FF        LD  (SYSMODE), A
1555   09BA C3 EE 00        JP  EXIT_SYS
1556   09BD             
1557   09BD             GO_SHOW_REG_DEaux:
1558   09BD CD B8 0A        CALL CLEAR_DISPLAY
1559   09C0 3E 0E           LD  A, $0E
1560   09C2 32 0F FF        LD  (SYSMODE), A
1561   09C5 C3 EE 00        JP  EXIT_SYS
1562   09C8             
1563   09C8             GO_SHOW_REG_HLaux:
1564   09C8 CD B8 0A        CALL CLEAR_DISPLAY
1565   09CB 3E 0F           LD  A, $0F
1566   09CD 32 0F FF        LD  (SYSMODE), A
1567   09D0 C3 EE 00        JP  EXIT_SYS
1568   09D3             
1569   09D3             
1570   09D3             FIRE:
1571   09D3                 ;LD  A, 1
1572   09D3                 ;LD (SYSMODE), A          ; Monitor mode
1573   09D3 2A 0D FF        LD  HL, (PC_RAM)
1574   09D6 22 14 FF        LD  (USR_PC), HL
1575   09D9 C3 EE 00        JP  EXIT_SYS
1576   09DC             
1577   09DC             MODIFY_ANY:
1578   09DC                 ;;CALL CLEAR_DISPLAY
1579   09DC             
1580   09DC 3E 03           LD  A, $03
1581   09DE 32 12 FF        LD (EXM_COUNT), A        ; Set count 4 digits, position display
1582   09E1             
1583   09E1 3E 00           LD A, 00000000b
1584   09E3 32 02 FF        LD (DIG_2), A
1585   09E6 32 03 FF        LD (DIG_3), A
1586   09E9 3E 40           LD A, 01000000b
1587   09EB 32 04 FF        LD (DIG_4), A
1588   09EE 32 05 FF        LD (DIG_5), A
1589   09F1 32 06 FF        LD (DIG_6), A
1590   09F4 32 07 FF        LD (DIG_7), A
1591   09F7             
1592   09F7 3A 0F FF        LD  A, (SYSMODE)
1593   09FA 32 D8 FF        LD (LAST_SYS), A
1594   09FD             
1595   09FD 3E 80           LD  A, $80
1596   09FF 32 0F FF        LD  (SYSMODE), A
1597   0A02 C3 EE 00        JP EXIT_SYS
1598   0A05             
1599   0A05             
1600   0A05             
1601   0A05             GO_USER_MODE:
1602   0A05 3E 00           LD  A, 0
1603   0A07 32 0F FF        LD  (SYSMODE), A
1604   0A0A C3 EE 00        JP  EXIT_SYS
1605   0A0D             
1606   0A0D             
1607   0A0D             ; =========================================================
1608   0A0D             ; Modify (HL)
1609   0A0D             ; =========================================================
1610   0A0D             MD_HL:
1611   0A0D CD 32 08        CALL GET_KEY_A
1612   0A10 FE FF           CP  $FF
1613   0A12 CA EE 00        JP  Z, EXIT_SYS
1614   0A15             
1615   0A15 F5              PUSH  AF
1616   0A16 F5              PUSH  AF
1617   0A17 3A 12 FF        LD  A, (EXM_COUNT)
1618   0A1A FE 03           CP  3
1619   0A1C CA 3A 0A        JP  Z, MD_HL_KEY_POS_3
1620   0A1F             
1621   0A1F 3A 12 FF        LD  A, (EXM_COUNT)
1622   0A22 FE 02           CP  2
1623   0A24 CA 58 0A        JP  Z, MD_HL_KEY_POS_2
1624   0A27             
1625   0A27 3A 12 FF        LD  A, (EXM_COUNT)
1626   0A2A FE 01           CP  1
1627   0A2C CA 72 0A        JP  Z, MD_HL_KEY_POS_1
1628   0A2F             
1629   0A2F 3A 12 FF        LD  A, (EXM_COUNT)
1630   0A32 FE 00           CP  0
1631   0A34 CA 93 0A        JP  Z, MD_HL_KEY_POS_0
1632   0A37             
1633   0A37 C3 EE 00        JP  EXIT_SYS
1634   0A3A             
1635   0A3A             MD_HL_KEY_POS_3:
1636   0A3A F1              POP  AF
1637   0A3B CB 07           RLC  A
1638   0A3D CB 07           RLC  A
1639   0A3F CB 07           RLC  A
1640   0A41 CB 07           RLC  A
1641   0A43 67              LD  H, A
1642   0A44 22 DE FF        LD  (ISR_MD_TMP), HL
1643   0A47 F1              POP  AF
1644   0A48 CD F2 0A        CALL GET_NUM_FROM_LOW
1645   0A4B 32 04 FF        LD  (DIG_4), A
1646   0A4E 3A 12 FF        LD  A, (EXM_COUNT)
1647   0A51 3D              DEC A
1648   0A52 32 12 FF        LD  (EXM_COUNT), A
1649   0A55 C3 EE 00        JP  EXIT_SYS
1650   0A58             
1651   0A58             
1652   0A58             MD_HL_KEY_POS_2:
1653   0A58 F1              POP  AF
1654   0A59 2A DE FF        LD  HL, (ISR_MD_TMP)
1655   0A5C B4              OR  H
1656   0A5D 67              LD  H, A
1657   0A5E 22 DE FF        LD  (ISR_MD_TMP), HL
1658   0A61 F1              POP  AF
1659   0A62 CD F2 0A        CALL GET_NUM_FROM_LOW
1660   0A65 32 05 FF        LD  (DIG_5), A
1661   0A68 3A 12 FF        LD  A, (EXM_COUNT)
1662   0A6B 3D              DEC A
1663   0A6C 32 12 FF        LD  (EXM_COUNT), A
1664   0A6F C3 EE 00        JP  EXIT_SYS
1665   0A72             
1666   0A72             MD_HL_KEY_POS_1:
1667   0A72 F1              POP  AF
1668   0A73 2A DE FF        LD  HL, (ISR_MD_TMP)
1669   0A76 CB 07           RLC  A
1670   0A78 CB 07           RLC  A
1671   0A7A CB 07           RLC  A
1672   0A7C CB 07           RLC  A
1673   0A7E 6F              LD  L, A
1674   0A7F 22 DE FF        LD  (ISR_MD_TMP), HL
1675   0A82 F1              POP  AF
1676   0A83 CD F2 0A        CALL GET_NUM_FROM_LOW
1677   0A86 32 06 FF        LD  (DIG_6), A
1678   0A89 3A 12 FF        LD  A, (EXM_COUNT)
1679   0A8C 3D              DEC A
1680   0A8D 32 12 FF        LD  (EXM_COUNT), A
1681   0A90 C3 EE 00        JP  EXIT_SYS
1682   0A93             
1683   0A93             
1684   0A93             MD_HL_KEY_POS_0:
1685   0A93 F1              POP  AF
1686   0A94 2A DE FF        LD  HL, (ISR_MD_TMP)
1687   0A97 B5              OR  L
1688   0A98 6F              LD  L, A
1689   0A99 22 DE FF        LD  (ISR_MD_TMP), HL
1690   0A9C F1              POP  AF
1691   0A9D CD F2 0A        CALL GET_NUM_FROM_LOW
1692   0AA0 32 07 FF        LD  (DIG_7), A
1693   0AA3             
1694   0AA3             
1695   0AA3 ED 5B DC FF     LD DE, (ISR_MD_HL) ; endereço de memoria do registrador
1696   0AA7 2A DE FF        LD HL, (ISR_MD_TMP) ; dados
1697   0AAA             
1698   0AAA 7D              LD A, L
1699   0AAB 12              LD (DE), A
1700   0AAC 13              INC DE
1701   0AAD 7C              LD A, H
1702   0AAE 12              LD (DE), A
1703   0AAF             
1704   0AAF 3A D8 FF        LD  A, (LAST_SYS)
1705   0AB2 32 0F FF        LD  (SYSMODE), A
1706   0AB5 C3 EE 00        JP  EXIT_SYS
1707   0AB8             
1708   0AB8             
1709   0AB8             ; =========================================================
1710   0AB8             ; LIMPA DISPLAY
1711   0AB8             ; =========================================================
1712   0AB8             CLEAR_DISPLAY:
1713   0AB8 F5              PUSH  AF
1714   0AB9 3E 00           LD  A, 0
1715   0ABB 32 00 FF        LD  (DIG_0), A
1716   0ABE 32 01 FF        LD  (DIG_1), A
1717   0AC1 32 02 FF        LD  (DIG_2), A
1718   0AC4 32 03 FF        LD  (DIG_3), A
1719   0AC7 32 04 FF        LD  (DIG_4), A
1720   0ACA 32 05 FF        LD  (DIG_5), A
1721   0ACD 32 06 FF        LD  (DIG_6), A
1722   0AD0 32 07 FF        LD  (DIG_7), A
1723   0AD3 F1              POP  AF
1724   0AD4 C9              RET
1725   0AD5             
1726   0AD5             ; =========================================================
1727   0AD5             ; LIMPA USER DISPLAY
1728   0AD5             ; =========================================================
1729   0AD5             CLEAR_USER_DISPLAY:
1730   0AD5 F5              PUSH  AF
1731   0AD6 3E 00           LD  A, 0
1732   0AD8 32 D0 FF        LD  (USER_DISP0), A
1733   0ADB 32 D1 FF        LD  (USER_DISP1), A
1734   0ADE 32 D2 FF        LD  (USER_DISP2), A
1735   0AE1 32 D3 FF        LD  (USER_DISP3), A
1736   0AE4 32 D4 FF        LD  (USER_DISP4), A
1737   0AE7 32 D5 FF        LD  (USER_DISP5), A
1738   0AEA 32 D6 FF        LD  (USER_DISP6), A
1739   0AED 32 D7 FF        LD  (USER_DISP7), A
1740   0AF0 F1              POP  AF
1741   0AF1 C9              RET
1742   0AF2             
1743   0AF2             
1744   0AF2             ; =========================================================
1745   0AF2             ; PEGA LOW NUM EM A E RETORNA CHAR 7SEG EM A
1746   0AF2             ; =========================================================
1747   0AF2             GET_NUM_FROM_LOW:
1748   0AF2 E5              PUSH    HL
1749   0AF3 C5              PUSH    BC
1750   0AF4 21 A0 0C        LD      HL, LED_FONT
1751   0AF7 E6 0F           AND     $0F
1752   0AF9 01 00 00        LD      BC, 0
1753   0AFC 4F              LD      C, A
1754   0AFD 09              ADD     HL, BC
1755   0AFE 7E              LD      A, (HL)
1756   0AFF C1              POP     BC
1757   0B00 E1              POP     HL
1758   0B01 C9              RET
1759   0B02             
1760   0B02             ; =========================================================
1761   0B02             ; PEGA HIGH NUM EM A E RETORNA CHAR 7SEG EM A
1762   0B02             ; =========================================================
1763   0B02             GET_NUM_FROM_HIGH:
1764   0B02 E5              PUSH    HL
1765   0B03 C5              PUSH    BC
1766   0B04 21 A0 0C        LD      HL, LED_FONT
1767   0B07 E6 F0           AND     $F0
1768   0B09 CB 0F           RRC     A
1769   0B0B CB 0F           RRC     A
1770   0B0D CB 0F           RRC     A
1771   0B0F CB 0F           RRC     A
1772   0B11 01 00 00        LD      BC, 0
1773   0B14 4F              LD      C, A
1774   0B15 09              ADD     HL, BC
1775   0B16 7E              LD      A, (HL)
1776   0B17 C1              POP     BC
1777   0B18 E1              POP     HL
1778   0B19 C9              RET
1779   0B1A             
1780   0B1A             ; =========================================================
1781   0B1A             ; Mostra o que esta em A nos digitos 6 e 7
1782   0B1A             ; =========================================================
1783   0B1A             PRINT_A:
1784   0B1A E5              PUSH    HL
1785   0B1B C5              PUSH    BC
1786   0B1C F5              PUSH    AF
1787   0B1D F5              PUSH    AF
1788   0B1E             
1789   0B1E 21 A0 0C        LD	HL, LED_FONT
1790   0B21 E6 0F           AND $0F
1791   0B23 01 00 00        LD      BC, 0
1792   0B26 4F              LD      C, A
1793   0B27 09              ADD HL, BC
1794   0B28 7E              LD  A, (HL)
1795   0B29 32 07 FF        LD  (DIG_7), A
1796   0B2C             
1797   0B2C F1              POP    AF
1798   0B2D 21 A0 0C        LD	HL, LED_FONT
1799   0B30 E6 F0           AND  $F0
1800   0B32 CB 0F           RRC  A
1801   0B34 CB 0F           RRC  A
1802   0B36 CB 0F           RRC  A
1803   0B38 CB 0F           RRC  A
1804   0B3A 01 00 00        LD      BC, 0
1805   0B3D 4F              LD      C, A
1806   0B3E 09              ADD HL, BC
1807   0B3F 7E              LD  A, (HL)
1808   0B40 32 06 FF        LD  (DIG_6), A
1809   0B43             
1810   0B43 F1              POP     AF
1811   0B44 C1              POP     BC
1812   0B45 E1              POP     HL
1813   0B46 C9              RET
1814   0B47             
1815   0B47             ; =========================================================
1816   0B47             ; Mostra o que esta em HL - Display(HHLLXXXX)
1817   0B47             ; =========================================================
1818   0B47             PRINT_HL:
1819   0B47 F5              PUSH  AF
1820   0B48 E5              PUSH  HL
1821   0B49 C5              PUSH  BC
1822   0B4A             
1823   0B4A E5              PUSH  HL
1824   0B4B E5              PUSH  HL
1825   0B4C E5              PUSH  HL
1826   0B4D             
1827   0B4D 7D              LD  A, L
1828   0B4E 21 A0 0C        LD	HL, LED_FONT
1829   0B51 E6 0F           AND $0F
1830   0B53 01 00 00        LD      BC, 0
1831   0B56 4F              LD      C, A
1832   0B57 09              ADD HL, BC
1833   0B58 7E              LD  A, (HL)
1834   0B59 21 03 FF        LD  HL, DIG_3
1835   0B5C 77              LD  (HL), A
1836   0B5D             
1837   0B5D E1              POP  HL
1838   0B5E 7D              LD  A, L
1839   0B5F 21 A0 0C        LD	HL, LED_FONT
1840   0B62 E6 F0           AND  $F0
1841   0B64 CB 0F           RRC  A
1842   0B66 CB 0F           RRC  A
1843   0B68 CB 0F           RRC  A
1844   0B6A CB 0F           RRC  A
1845   0B6C 01 00 00        LD      BC, 0
1846   0B6F 4F              LD      C, A
1847   0B70 09              ADD HL, BC
1848   0B71 7E              LD  A, (HL)
1849   0B72 21 02 FF        LD  HL, DIG_2
1850   0B75 77              LD  (HL), A
1851   0B76             
1852   0B76 E1              POP  HL
1853   0B77 7C              LD  A, H
1854   0B78 21 A0 0C        LD	HL, LED_FONT
1855   0B7B E6 0F           AND $0F
1856   0B7D 01 00 00        LD      BC, 0
1857   0B80 4F              LD      C, A
1858   0B81 09              ADD HL, BC
1859   0B82 7E              LD  A, (HL)
1860   0B83 21 01 FF        LD  HL, DIG_1
1861   0B86 77              LD  (HL), A
1862   0B87             
1863   0B87 E1              POP  HL
1864   0B88 7C              LD  A, H
1865   0B89 21 A0 0C        LD	HL, LED_FONT
1866   0B8C E6 F0           AND  $F0
1867   0B8E CB 0F           RRC  A
1868   0B90 CB 0F           RRC  A
1869   0B92 CB 0F           RRC  A
1870   0B94 CB 0F           RRC  A
1871   0B96 01 00 00        LD      BC, 0
1872   0B99 4F              LD      C, A
1873   0B9A 09              ADD HL, BC
1874   0B9B 7E              LD  A, (HL)
1875   0B9C 21 00 FF        LD  HL, DIG_0
1876   0B9F 77              LD  (HL), A
1877   0BA0             
1878   0BA0 C1              POP  BC
1879   0BA1 E1              POP  HL
1880   0BA2 F1              POP  AF
1881   0BA3             
1882   0BA3 C9              RET
1883   0BA4             
1884   0BA4             ; =========================================================
1885   0BA4             ; Mostra o que esta em HL - Display(XXXXHHLL)
1886   0BA4             ; =========================================================
1887   0BA4             PRINT_END_HL:
1888   0BA4 F5              PUSH  AF
1889   0BA5 E5              PUSH  HL
1890   0BA6 C5              PUSH  BC
1891   0BA7             
1892   0BA7 E5              PUSH  HL
1893   0BA8 E5              PUSH  HL
1894   0BA9 E5              PUSH  HL
1895   0BAA             
1896   0BAA 7D              LD  A, L
1897   0BAB 21 A0 0C        LD	HL, LED_FONT
1898   0BAE E6 0F           AND $0F
1899   0BB0 01 00 00        LD      BC, 0
1900   0BB3 4F              LD      C, A
1901   0BB4 09              ADD HL, BC
1902   0BB5 7E              LD  A, (HL)
1903   0BB6 21 07 FF        LD  HL, DIG_7
1904   0BB9 77              LD  (HL), A
1905   0BBA             
1906   0BBA E1              POP  HL
1907   0BBB 7D              LD  A, L
1908   0BBC 21 A0 0C        LD	HL, LED_FONT
1909   0BBF E6 F0           AND  $F0
1910   0BC1 CB 0F           RRC  A
1911   0BC3 CB 0F           RRC  A
1912   0BC5 CB 0F           RRC  A
1913   0BC7 CB 0F           RRC  A
1914   0BC9 01 00 00        LD      BC, 0
1915   0BCC 4F              LD      C, A
1916   0BCD 09              ADD HL, BC
1917   0BCE 7E              LD  A, (HL)
1918   0BCF 21 06 FF        LD  HL, DIG_6
1919   0BD2 77              LD  (HL), A
1920   0BD3             
1921   0BD3 E1              POP  HL
1922   0BD4 7C              LD  A, H
1923   0BD5 21 A0 0C        LD	HL, LED_FONT
1924   0BD8 E6 0F           AND $0F
1925   0BDA 01 00 00        LD      BC, 0
1926   0BDD 4F              LD      C, A
1927   0BDE 09              ADD HL, BC
1928   0BDF 7E              LD  A, (HL)
1929   0BE0 21 05 FF        LD  HL, DIG_5
1930   0BE3 77              LD  (HL), A
1931   0BE4             
1932   0BE4 E1              POP  HL
1933   0BE5 7C              LD  A, H
1934   0BE6 21 A0 0C        LD	HL, LED_FONT
1935   0BE9 E6 F0           AND  $F0
1936   0BEB CB 0F           RRC  A
1937   0BED CB 0F           RRC  A
1938   0BEF CB 0F           RRC  A
1939   0BF1 CB 0F           RRC  A
1940   0BF3 01 00 00        LD      BC, 0
1941   0BF6 4F              LD      C, A
1942   0BF7 09              ADD HL, BC
1943   0BF8 7E              LD  A, (HL)
1944   0BF9 21 04 FF        LD  HL, DIG_4
1945   0BFC 77              LD  (HL), A
1946   0BFD             
1947   0BFD C1              POP  BC
1948   0BFE E1              POP  HL
1949   0BFF F1              POP  AF
1950   0C00             
1951   0C00 C9              RET
1952   0C01             
1953   0C01             ; =========================================================
1954   0C01             ; Start Sistem ?
1955   0C01             ; =========================================================
1956   0C01             START:
1957   0C01 31 00 FF        LD  SP, STACK
1958   0C04             
1959   0C04                 ; if Moni Back(Reset + Press), then Loader Intel Hex
1960   0C04 DB 40           IN A, (Port40)
1961   0C06 CB 6F           BIT 5, A
1962   0C08 C4 B0 0C        CALL NZ, START_INTEL
1963   0C0B             
1964   0C0B             
1965   0C0B 3E 01           LD  A, 1                 ; Monitor mode
1966   0C0D 32 0F FF        LD  (SYSMODE), A
1967   0C10             
1968   0C10             
1969   0C10             
1970   0C10             
1971   0C10             
1972   0C10             
1973   0C10             
1974   0C10             ;LOOP:
1975   0C10             ;   INC A
1976   0C10             ;   JP NZ, LOOP
1977   0C10             ;   INC BC
1978   0C10             ;   JP LOOP
1979   0C10             
1980   0C10 3E 3C           LD A, $3C
1981   0C12 32 00 80        LD ($8000), A
1982   0C15             
1983   0C15 3E C2           LD A, $C2
1984   0C17 32 01 80        LD ($8001), A
1985   0C1A             
1986   0C1A 3E 00           LD A, $00
1987   0C1C 32 02 80        LD ($8002), A
1988   0C1F             
1989   0C1F 3E 80           LD A, $80
1990   0C21 32 03 80        LD ($8003), A
1991   0C24             
1992   0C24 3E 03           LD A, $03
1993   0C26 32 04 80        LD ($8004), A
1994   0C29             
1995   0C29 3E C3           LD A, $C3
1996   0C2B 32 05 80        LD ($8005), A
1997   0C2E             
1998   0C2E 3E 00           LD A, $00
1999   0C30 32 06 80        LD ($8006), A
2000   0C33             
2001   0C33 3E 80           LD A, $80
2002   0C35 32 07 80        LD ($8007), A
2003   0C38             
2004   0C38             
2005   0C38             
2006   0C38             
2007   0C38             
2008   0C38             
2009   0C38             
2010   0C38             
2011   0C38             
2012   0C38             START_COM:
2013   0C38 21 00 80        LD  HL, START_RAM
2014   0C3B 22 0D FF        LD  (PC_RAM), HL
2015   0C3E             
2016   0C3E                 ; start vars
2017   0C3E 3E 64           LD  A, CKEY_TIMEOUT
2018   0C40 32 0B FF        LD  (KEY_TIMEOUT), A
2019   0C43             
2020   0C43 3E FF           LD A, $FF
2021   0C45 32 08 FF        LD (KEY_PRESS), A
2022   0C48             
2023   0C48 3E 00           LD  A, $00
2024   0C4A 32 00 FF        LD  (DIG_0), A
2025   0C4D 32 01 FF        LD  (DIG_1), A
2026   0C50 32 02 FF        LD  (DIG_2), A
2027   0C53 32 03 FF        LD  (DIG_3), A
2028   0C56 32 04 FF        LD  (DIG_4), A
2029   0C59 32 05 FF        LD  (DIG_5), A
2030   0C5C 32 06 FF        LD  (DIG_6), A
2031   0C5F 32 07 FF        LD  (DIG_7), A
2032   0C62             
2033   0C62 ED 56           IM  1
2034   0C64 FB              EI
2035   0C65             
2036   0C65 AF              XOR A
2037   0C66 D3 40           OUT (Port40), A
2038   0C68             
2039   0C68             START_LOOP:
2040   0C68 C3 68 0C        JP START_LOOP
2041   0C6B             
2042   0C6B             START_WARM:
2043   0C6B 31 00 FF        LD  SP, STACK
2044   0C6E             
2045   0C6E C3 38 0C        JP START_COM
2046   0C71             
2047   0C71             
2048   0C71             ; =========================================================
2049   0C71             ; HL = (HL)
2050   0C71             ; =========================================================
2051   0C71             LD_HL_HL:
2052   0C71 7E          	LD      A,(HL)		;7
2053   0C72 23          	INC     HL		;6
2054   0C73 66          	LD      H,(HL)		;7
2055   0C74 6F          	LD      L,A		;4
2056   0C75 C9          	RET			;10
2057   0C76             
2058   0C76             ; =========================================================
2059   0C76             ; Delay
2060   0C76             ; =========================================================
2061   0C76             delay:
2062   0C76 C5          	push bc                       ; 2.75 us
2063   0C77 06 FF           ld b, 255                     ; 1.75 us
2064   0C79             delay_loop_b:
2065   0C79 0E FF       	ld c, 255                     ; 1.75 us
2066   0C7B             delay_loop:
2067   0C7B 0D          	dec c                         ; 1 us
2068   0C7C C2 7B 0C        jp nz, delay_loop             ; true = 3 us, false 1.75 us
2069   0C7F 05              dec b                         ; 1 us
2070   0C80 C2 79 0C        jp nz, delay_loop_b           ; true = 3 us, false 1.75 us
2071   0C83 C1              pop bc                        ; 2.50 us
2072   0C84 C9              ret                           ; 2.50 us
2073   0C85             
2074   0C85             
2075   0C85             ;============================================================================
2076   0C85             ;	Subroutine	Delay_A
2077   0C85             ;
2078   0C85             ;	Entry:	A = Millisecond count
2079   0C85             ;============================================================================
2080   0C85 E5          DELAY_A:	PUSH	HL			; Save count
2081   0C86 21 10 FF    		LD	HL,TicCounter
2082   0C89 86          		ADD	A,(HL)			; A = cycle count
2083   0C8A BE          DlyLp		CP	(HL)			; Wait required TicCounter times
2084   0C8B C2 8A 0C    		JP	NZ,DlyLp		;  loop if not done
2085   0C8E E1          		POP	HL
2086   0C8F C9          		RET
2087   0C90             
2088   0C90             
2089   0C90 0E 01       DELAY_100mS	LD	C,1
2090   0C92 C5          DELAY_C		PUSH	BC
2091   0C93 06 00       		LD	B,0
2092   0C95 C5          DELAY_LP	PUSH	BC
2093   0C96 10 FE       		DJNZ	$		;13   * 256 / 4 = 832uSec
2094   0C98 C1          		POP	BC
2095   0C99 10 FA       		DJNZ	DELAY_LP	;~100mSEC
2096   0C9B 0D          		DEC	C
2097   0C9C 20 F7       		JR  NZ,	DELAY_LP	;*4 ~= 7mSec
2098   0C9E C1          		POP	BC
2099   0C9F C9          		RET
2100   0CA0             
2101   0CA0             ; Mapa char to display 0-F
2102   0CA0 3F065B4F666DLED_FONT .db $3F, $06, $5B, $4F, $66, $6D, $7D, $07, $7F, $67 ; 0-9
2102   0CA6 7D077F67
2103   0CAA 777C395E7971         .DB $77, $7C, $39, $5E, $79, $71                     ; A-F
2104   0CB0             
2105   0CB0             
2106   0CB0             
2107   0CB0             
2108   0CB0             ; ---------------------------------------------------------
2109   0CB0             ;   FFFFFFFF      I     MM           MM
2110   0CB0             ;   F             I     M  M       M  M
2111   0CB0             ;   F             I     M    M   M    M
2112   0CB0             ;   FFFFFFF       I     M      M      M
2113   0CB0             ;   F             I     M             M
2114   0CB0             ;   F             I     M             M
2115   0CB0             ;   F             I     M             M
2116   0CB0             ;
2117   0CB0             ; ---------------------------------------------------------
2118   0CB0             
2119   0CB0             
2120   0CB0             ; ---------------------------------------------------------
2121   0CB0             ;
2122   0CB0             ;   SERIAL INTEL HEX LOADDER
2123   0CB0             ;
2124   0CB0             ;   Serial 4800-N-8-1
2125   0CB0             ;
2126   0CB0             ; ---------------------------------------------------------
2127   0CB0             START_INTEL:
2128   0CB0 F3              DI
2129   0CB1             
2130   0CB1 21 1B 00        LD	HL, B4800
2131   0CB4 22 30 FF    	LD	(BAUD),HL	;DEFAULT SERIAL=4800 BAUD
2132   0CB7             
2133   0CB7 21 AE 0D        LD    HL,TXDATA
2134   0CBA 22 32 FF        LD    (PUTCH),HL ;USE THE BITBANG SERIAL TRANSMIT
2135   0CBD 21 D7 0D        LD    HL,RXDATA
2136   0CC0 22 34 FF        LD    (GETCH),HL  ;USE THE BITBANG SERIAL RECEIVE
2137   0CC3             
2138   0CC3 21 3C 0E        LD    HL,INITSZ  ;VT100 TERMINAL COMMANDS FOR CLEAR SCREEN,CURSOR HOME
2139   0CC6 CD 8A 0D        CALL  SNDMSG     ;INITIALISE THE TERMINAL
2140   0CC9                 
2141   0CC9 21 13 0E        LD    HL,SIGNON
2142   0CCC CD 8A 0D        CALL  SNDMSG     ;SEND THE SIGNON
2143   0CCF             
2144   0CCF CD F3 0C        CALL INTELFN
2145   0CD2 C9              RET
2146   0CD3             
2147   0CD3             INTEL_ERROR:
2148   0CD3 21 40 00        LD HL, INT_ERROR
2149   0CD6 22 2D FF        LD (INT_VEC), HL
2150   0CD9 ED 56           IM 1
2151   0CDB FB              EI
2152   0CDC             
2153   0CDC             INTEL_ERROR_LOOP:
2154   0CDC 3E 00           LD A, $0
2155   0CDE D3 40           OUT (Port40), a
2156   0CE0 C3 DC 0C        JP INTEL_ERROR_LOOP
2157   0CE3             
2158   0CE3             INTEL_SUCCESS:
2159   0CE3 ED 56           IM 1
2160   0CE5 FB              EI
2161   0CE6 C9              RET
2162   0CE7             
2163   0CE7             ;-----------------------------------
2164   0CE7             ; OUTPUT A CHARACTER TO THE TERMINAL
2165   0CE7             ;-----------------------------------       
2166   0CE7 DD 2A 32 FF OUTCH:  LD   IX,(PUTCH)
2167   0CEB DD E9              JP   (IX)
2168   0CED             ;------------------------------------
2169   0CED             ; INPUT A CHARACTER FROM THE TERMINAL
2170   0CED             ;------------------------------------
2171   0CED DD 2A 34 FF INCH:  LD   IX,(GETCH)
2172   0CF1 DD E9             JP   (IX)
2173   0CF3             
2174   0CF3             ;------------
2175   0CF3             ; ASCII CODES
2176   0CF3             ;------------
2177   0CF3             ESC:    .EQU   1BH
2178   0CF3             CR:     .EQU   0DH
2179   0CF3             LF:     .EQU   0AH
2180   0CF3             
2181   0CF3             
2182   0CF3             ;-=========================== INTEL
2183   0CF3             
2184   0CF3             ;------------------------------------
2185   0CF3             ; FUNCTION 1 RECEIVE INTEL HEX FORMAT
2186   0CF3             ;------------------------------------
2187   0CF3             INTELFN:
2188   0CF3 CD 02 0D        CALL  INTELH
2189   0CF6 C2 D3 0C        JP    NZ, INTEL_ERROR      ;SHOW THE ERROR 
2190   0CF9             
2191   0CF9 21 29 0E        LD    HL,SUCCESS
2192   0CFC CD 8A 0D        CALL  SNDMSG     ;SEND THE SUCCESS
2193   0CFF             
2194   0CFF C3 E3 0C        JP    INTEL_SUCCESS        ;JUST RETURN IF ALL OK
2195   0D02             ;-----------------------
2196   0D02             ; RECEIVE INTEL HEX FILE
2197   0D02             ;-----------------------
2198   0D02 DD 21 00 FF INTELH:	LD	IX,STACK	;POINT TO SYSTEM VARIABLES
2199   0D06             ;
2200   0D06             ; WAIT FOR RECORD MARK
2201   0D06             ;
2202   0D06 AF          INTEL1:	XOR	A
2203   0D07 DD 77 03    	LD	(IX+3),A	;CLEAR CHECKSUM
2204   0D0A CD D7 0D    	CALL	RXDATA	;WAIT FOR THE RECORD MARK
2205   0D0D FE 3A       	CP	':'	;TO BE TRANSMITTED
2206   0D0F 20 F5       	JR	NZ,INTEL1	;NOT RECORD MARK
2207   0D11             
2208   0D11             ;
2209   0D11             ; GET RECORD LENGTH
2210   0D11             ;
2211   0D11 CD 5E 0D    	CALL	GETBYT
2212   0D14 DD 77 00    	LD	(IX+0),A	;NUMBER OF DATA BYTES
2213   0D17             ;
2214   0D17             ; GET ADDRESS FIELD
2215   0D17             ;
2216   0D17 CD 5E 0D    	CALL	GETBYT
2217   0D1A DD 77 02    	LD	(IX+2),A	;LOAD ADDRESS HIGH BYTE
2218   0D1D CD 5E 0D    	CALL	GETBYT
2219   0D20 DD 77 01    	LD	(IX+1),A	;LOAD ADDRESS LOW BYTE
2220   0D23             ;
2221   0D23             ; GET RECORD TYPE
2222   0D23             ;
2223   0D23 CD 5E 0D    	CALL	GETBYT
2224   0D26 20 24       	JR	NZ,INTEL4	;END OF FILE RECORD
2225   0D28             ;
2226   0D28             ; READ IN THE DATA
2227   0D28             ;
2228   0D28 DD 46 00    	LD	B,(IX+0)	;NUMBER OF DATA BYTES
2229   0D2B DD 66 02    	LD	H,(IX+2)	;LOAD ADDRESS HIGH BYTE
2230   0D2E DD 6E 01    	LD	L,(IX+1)	;LOAD ADDRESS LOW BYTE
2231   0D31             
2232   0D31 CD 5E 0D    INTEL2:	CALL	GETBYT	;GET DATA BYTE
2233   0D34 77          	LD	(HL),A	;STORE DATA BYTE
2234   0D35 23          	INC	HL
2235   0D36 10 F9       	DJNZ	INTEL2	;LOAD MORE BYTES
2236   0D38             ;
2237   0D38             ; GET CHECKSUM AND COMPARE
2238   0D38             ;
2239   0D38 DD 7E 03    	LD	A,(IX+3)	;CONVERT CHECKSUM TO
2240   0D3B ED 44       	NEG		;TWO'S COMPLEMENT
2241   0D3D DD 77 04    	LD	(IX+4),A	;SAVE COMPUTED CHECKSUM
2242   0D40 CD 5E 0D    	CALL	GETBYT
2243   0D43 DD 77 03    	LD	(IX+3),A	;SAVE RECORD CHECKSUM
2244   0D46 DD BE 04    	CP	(IX+4)	;COMPARE CHECKSUM
2245   0D49 28 BB       	JR	Z,INTEL1	;CHECKSUM OK,NEXT RECORD
2246   0D4B C9              RET             ;NZ=CHECKSUM ERROR
2247   0D4C             ;
2248   0D4C             ; END OF FILE RECORD
2249   0D4C             ;
2250   0D4C DD 7E 03    INTEL4:	LD	A,(IX+3)	;CONVERT CHECKSUM TO
2251   0D4F ED 44       	NEG		;TWO'S COMPLEMENT
2252   0D51 DD 77 04    	LD	(IX+4),A	;SAVE COMPUTED CHECKSUM
2253   0D54 CD 5E 0D    	CALL	GETBYT
2254   0D57 DD 77 03    	LD	(IX+3),A	;SAVE EOF CHECKSUM
2255   0D5A DD BE 04    	CP	(IX+4)	;COMPARE CHECKSUM
2256   0D5D C9          	RET  	    ;NZ=CHECKSUM ERROR
2257   0D5E             
2258   0D5E             ;--------------------------
2259   0D5E             ; GET BYTE FROM SERIAL PORT
2260   0D5E             ;--------------------------
2261   0D5E C5          GETBYT:	PUSH	BC
2262   0D5F CD D7 0D    	CALL	RXDATA
2263   0D62 CB 77       	BIT	6,A
2264   0D64 28 02       	JR	Z,GETBT1
2265   0D66 C6 09       	ADD	A,09H
2266   0D68 E6 0F       GETBT1:	AND	0FH
2267   0D6A CB 27       	SLA 	A
2268   0D6C CB 27       	SLA	A
2269   0D6E CB 27       	SLA	A
2270   0D70 CB 27       	SLA	A
2271   0D72 4F          	LD	C,A
2272   0D73             ;
2273   0D73             ; GET LOW NYBBLE
2274   0D73             ;
2275   0D73 CD D7 0D    	CALL	RXDATA
2276   0D76 CB 77       	BIT	6,A
2277   0D78 28 02       	JR	Z,GETBT2
2278   0D7A C6 09       	ADD	A,09H
2279   0D7C E6 0F       GETBT2:	AND	0FH
2280   0D7E B1          	OR	C
2281   0D7F 47          	LD	B,A
2282   0D80 DD 86 03    	ADD	A,(IX+3)
2283   0D83 DD 77 03    	LD	(IX+3),A	;ADD TO CHECKSUM
2284   0D86 78          	LD	A,B
2285   0D87 A7          	AND	A	;CLEAR CARRY
2286   0D88 C1              POP	BC
2287   0D89 C9          	RET
2288   0D8A             
2289   0D8A             ;=========================== INTEL FIM
2290   0D8A             
2291   0D8A             
2292   0D8A             ;-----------------------------------------
2293   0D8A             ; SEND AN ASCII STRING OUT THE SERIAL PORT
2294   0D8A             ;-----------------------------------------
2295   0D8A             ; 
2296   0D8A             ; SENDS A ZERO TERMINATED STRING OR 
2297   0D8A             ; 128 CHARACTERS MAX. OUT THE SERIAL PORT
2298   0D8A             ;
2299   0D8A             ;      ENTRY : HL = POINTER TO 00H TERMINATED STRING
2300   0D8A             ;      EXIT  : NONE
2301   0D8A             ;
2302   0D8A             ;       MODIFIES : A,B,C
2303   0D8A             ;          
2304   0D8A 06 80       SNDMSG: LD    B,128         ;128 CHARS MAX
2305   0D8C 7E          SDMSG1: LD    A,(HL)        ;GET THE CHAR
2306   0D8D FE 00              CP    00H          ;ZERO TERMINATOR?
2307   0D8F 28 06              JR    Z,SDMSG2      ;FOUND A ZERO TERMINATOR, EXIT  
2308   0D91 CD E7 0C           CALL  OUTCH         ;TRANSMIT THE CHAR
2309   0D94 23                 INC   HL
2310   0D95 10 F5              DJNZ  SDMSG1        ;128 CHARS MAX!    
2311   0D97 C9          SDMSG2: RET
2312   0D98             
2313   0D98             ;-----------------
2314   0D98             ; ONE SECOND DELAY
2315   0D98             ;-----------------
2316   0D98             ;
2317   0D98             ; ENTRY : NONE
2318   0D98             ; EXIT : FLAG REGISTER MODIFIED
2319   0D98             ;
2320   0D98 C5          DELONE:	PUSH	BC
2321   0D99 D5          	PUSH	DE
2322   0D9A E5          	PUSH	HL
2323   0D9B 11 01 00    	LD	DE,0001H
2324   0D9E 21 70 08    	LD	HL,0870H
2325   0DA1 06 92       DELON1:	LD	B,92H
2326   0DA3 10 FE       DELON2:	DJNZ	DELON2	;INNER LOOP
2327   0DA5 ED 52       	SBC	HL,DE
2328   0DA7 D2 A1 0D    	JP	NC,DELON1	;OUTER LOOP
2329   0DAA E1          	POP	HL
2330   0DAB D1          	POP	DE
2331   0DAC C1          	POP	BC
2332   0DAD C9          	RET
2333   0DAE             
2334   0DAE             ;------------------------
2335   0DAE             ; SERIAL TRANSMIT ROUTINE
2336   0DAE             ;------------------------
2337   0DAE             ;TRANSMIT BYTE SERIALLY ON DOUT
2338   0DAE             ;
2339   0DAE             ; ENTRY : A = BYTE TO TRANSMIT
2340   0DAE             ;  EXIT : NO REGISTERS MODIFIED
2341   0DAE             ;
2342   0DAE F5          TXDATA:	PUSH	AF
2343   0DAF C5          	PUSH	BC
2344   0DB0 E5          	PUSH	HL
2345   0DB1 2A 30 FF    	LD	HL,(BAUD)
2346   0DB4 4F          	LD	C,A
2347   0DB5             ;
2348   0DB5             ; TRANSMIT START BIT
2349   0DB5             ;
2350   0DB5 AF          	XOR	A
2351   0DB6 D3 40       	OUT	(Port40),A
2352   0DB8 CD 06 0E    	CALL	BITIME
2353   0DBB             ;
2354   0DBB             ; TRANSMIT DATA
2355   0DBB             ;
2356   0DBB 06 08       	LD	B,08H
2357   0DBD             	;RRC	C
2358   0DBD CB 09       NXTBIT:	RRC	C	;SHIFT BITS TO D6,
2359   0DBF 79          	LD	A,C	;LSB FIRST AND OUTPUT
2360   0DC0 E6 80       	AND	80H	;THEM FOR ONE BIT TIME.
2361   0DC2 D3 40       	OUT	(Port40),A
2362   0DC4 CD 06 0E    	CALL	BITIME
2363   0DC7 10 F4       	DJNZ	NXTBIT
2364   0DC9             ;
2365   0DC9             ; SEND STOP BITS
2366   0DC9             ;
2367   0DC9 3E 80       	LD	A,80H
2368   0DCB D3 40       	OUT	(Port40),A
2369   0DCD CD 06 0E    	CALL	BITIME
2370   0DD0 CD 06 0E    	CALL	BITIME
2371   0DD3 E1          	POP	HL
2372   0DD4 C1          	POP	BC
2373   0DD5 F1          	POP	AF
2374   0DD6 C9          	RET
2375   0DD7             
2376   0DD7             ;-----------------------
2377   0DD7             ; SERIAL RECEIVE ROUTINE
2378   0DD7             ;-----------------------
2379   0DD7             ;RECEIVE SERIAL BYTE FROM DIN
2380   0DD7             ;
2381   0DD7             ; ENTRY : NONE
2382   0DD7             ;  EXIT : A= RECEIVED BYTE IF CARRY CLEAR
2383   0DD7             ;
2384   0DD7             ; REGISTERS MODIFIED A AND F
2385   0DD7             ;
2386   0DD7 C5          RXDATA:	PUSH	BC
2387   0DD8 E5          	PUSH	HL
2388   0DD9             ;
2389   0DD9             ; WAIT FOR START BIT 
2390   0DD9             ;
2391   0DD9 DB 40       RXDAT1: IN	A,(Port40)
2392   0DDB             ;        IN	A,(KEYBUF)
2393   0DDB CB 77       	    BIT	6,A
2394   0DDD 20 FA       	    JR	NZ,RXDAT1	;NO START BIT
2395   0DDF             ;
2396   0DDF             ; DETECTED START BIT
2397   0DDF             ;
2398   0DDF 2A 30 FF    	LD	HL,(BAUD)
2399   0DE2 CB 3C       	SRL	H
2400   0DE4 CB 1D       	RR	L 	;DELAY FOR HALF BIT TIME
2401   0DE6 CD 06 0E    	CALL 	BITIME
2402   0DE9 DB 40       	IN	A,(Port40)
2403   0DEB             ;    IN	A,(KEYBUF)
2404   0DEB CB 77       	BIT	6,A
2405   0DED 20 EA       	JR	NZ,RXDAT1	;START BIT NOT VALID
2406   0DEF             ;
2407   0DEF             ; DETECTED VALID START BIT,READ IN DATA
2408   0DEF             ;
2409   0DEF 06 08       	LD	B,08H
2410   0DF1 2A 30 FF    RXDAT2:	LD	HL,(BAUD)
2411   0DF4 CD 06 0E    	CALL	BITIME	;DELAY ONE BIT TIME
2412   0DF7 DB 40       	IN	A,(Port40)
2413   0DF9             ;    IN	A,(KEYBUF)
2414   0DF9 CB 17       	RL	A
2415   0DFB CB 17           RL	A
2416   0DFD CB 19       	RR	C	;SHIFT BIT INTO DATA REG
2417   0DFF 10 F0       	DJNZ	RXDAT2
2418   0E01 79          	LD	A,C
2419   0E02 B7          	OR	A	;CLEAR CARRY FLAG
2420   0E03 E1              POP	HL
2421   0E04 C1          	POP	BC
2422   0E05 C9          	RET
2423   0E06             ;---------------
2424   0E06             ; BIT TIME DELAY
2425   0E06             ;---------------
2426   0E06             ;DELAY FOR ONE SERIAL BIT TIME
2427   0E06             ;ENTRY : HL = DELAY TIME
2428   0E06             ; NO REGISTERS MODIFIED
2429   0E06             ;
2430   0E06 E5          BITIME:	PUSH	HL
2431   0E07 D5          	PUSH	DE
2432   0E08 11 01 00    	LD	DE,0001H
2433   0E0B ED 52       BITIM1:	SBC	HL,DE
2434   0E0D D2 0B 0E    	JP	NC,BITIM1
2435   0E10 D1          	POP	DE
2436   0E11 E1          	POP	HL
2437   0E12 C9          	RET
2438   0E13             
2439   0E13             
2440   0E13 0D0A4C6F6164SIGNON:      .DB     CR,LF,"Load intel hex...",CR,LF,00H
2440   0E19 20696E74656C206865782E2E2E0D0A00
2441   0E29 4C6F61642073SUCCESS:      .DB    "Load success... ",CR,LF,00H
2441   0E2F 7563636573732E2E2E200D0A00
2442   0E3C 1B5B481B5B32INITSZ:      .DB     27,"[H",27,"[2J",00H
2442   0E42 4A00
2443   0E44             
2444   0E44             ; =========================================================
2445   0E44             ; Tabela display
2446   0E44             ; =========================================================
2447   0E44             ; 
2448   0E44             ;   0 - $3F     A - $77     K - $7A     U - $1C     . - $80
2449   0E44             ;   1 - $06     B - $7C     L - $38     V - $3E     Ñ - $55
2450   0E44             ;   2 - $5B     C - $39     M - $37     W - $1D     : - $41
2451   0E44             ;   3 - $4F     D - $5E     N - $54     X - $70     ; - $88
2452   0E44             ;   4 - $66     E - $79     O - $3F     Y - $6E     _ - $08
2453   0E44             ;   5 - $6D     F - $71     P - $73     Z - $49     ~ - $01
2454   0E44             ;   6 - $7D     G - $6F     Q - $67                 ' - $20
2455   0E44             ;   7 - $07     H - $76     R - $50     + - $46     
2456   0E44             ;   8 - $7F     I - $06     S - $6D     , - $04     
2457   0E44             ;   9 - $67     J - $1E     T - $78     - - $40     
2458   0E44             
2459   0E44             .end
tasm: Number of errors = 0
