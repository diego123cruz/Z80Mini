0001   0000             ; Teste Step
0002   0000             
0003   0000             
0004   0000             ;   .org $8000
0005   0000             ;
0006   0000             ;	   LD A, 1          ; 1.75
0007   0000             ;   LOOP:
0008   0000             ;      OUT($C0), A      ; 2.75  -> $C0 Leds Test
0009   0000             ;	   XOR $1           ; 1.75
0010   0000             ;      JP LOOP          ; 2.50
0011   0000             
0012   0000             ; 3E 01 D3 C0 EE 01 C3 02 80
0013   0000             
0014   0000             ; Constants
0015   0000             Port40          .equ    $40   ; Displays 7seg
0016   0000             StackRamTop     .equ    $EE00 ; Stack
0017   0000             StartRAM        .equ    $8000 ; Start RAM
0018   0000             
0019   0000             
0020   0000             
0021   0000             ; RAM Map
0022   0000             INT_VEC .equ    $EF00 ;(2)
0023   0000             RAM_PC  .equ    $EF02 ;(2)
0024   0000             RAM_AF  .equ    $EF04 ;(2)
0025   0000             RAM_HL  .equ    $EF06 ;(2)
0026   0000             LAST_IN .equ    $EE08 ;(1)
0027   0000             
0028   0000             ;============================
0029   0000             ; $0000
0030   0000             ;============================
0031   0000             .org $0
0032   0000 C3 3F 00        JP START
0033   0003             
0034   0003             
0035   0003             ;============================
0036   0003             ; $0038  INT
0037   0003             ;============================
0038   0038             .org $38
0039   0038 22 06 EF        LD (RAM_HL), HL
0040   003B 2A 00 EF        LD HL, (INT_VEC)
0041   003E E9              JP (HL)
0042   003F             
0043   003F             
0044   003F             ;============================
0045   003F             ; START
0046   003F             ; Load Program test in RAM $8000
0047   003F             ;============================
0048   003F             START:
0049   003F 31 00 EE        LD SP, StackRamTop
0050   0042 21 00 80        LD HL, StartRAM
0051   0045 22 02 EF        LD (RAM_PC), HL
0052   0048             
0053   0048                 ; define int null
0054   0048 21 A2 00        LD HL, INT_MONITOR
0055   004B 22 00 EF        LD (INT_VEC), HL
0056   004E             
0057   004E                 ; Coloca codigo teste na ram
0058   004E 3E 3E           LD A, $3E
0059   0050 32 00 80        LD ($8000), A ; LD A, $01
0060   0053             
0061   0053 3E 01           LD A, $01
0062   0055 32 01 80        LD ($8001), A 
0063   0058             
0064   0058 3E D3           LD A, $D3
0065   005A 32 02 80        LD ($8002), A ; OUT ($C0), A
0066   005D             
0067   005D 3E C0           LD A, $C0
0068   005F 32 03 80        LD ($8003), A 
0069   0062             
0070   0062 3E EE           LD A, $EE
0071   0064 32 04 80        LD ($8004), A ; XOR $01
0072   0067             
0073   0067 3E 01           LD A, $01
0074   0069 32 05 80        LD ($8005), A 
0075   006C             
0076   006C 3E C3           LD A, $C3
0077   006E 32 06 80        LD ($8006), A ; JP 8000
0078   0071             
0079   0071 3E 02           LD A, $02
0080   0073 32 07 80        LD ($8007), A 
0081   0076             
0082   0076 3E 80           LD A, $80
0083   0078 32 08 80        LD ($8008), A
0084   007B             
0085   007B                 ; Codigo OK $8000
0086   007B             
0087   007B ED 56           IM 1
0088   007D FB              EI
0089   007E             
0090   007E 3E 01           LD A, $01
0091   0080 D3 40           OUT (Port40), A
0092   0082             
0093   0082             ;============================
0094   0082             ; MAIN LOOP
0095   0082             ;============================
0096   0082             LOOP:
0097   0082                 ; Button Step...
0098   0082 DB 40           IN A, (Port40)
0099   0084 CB 6F           BIT 5, A
0100   0086 C2 8C 00        JP NZ, INI_STEP
0101   0089             
0102   0089 C3 82 00        JP LOOP
0103   008C             
0104   008C             INI_STEP:
0105   008C F3              DI
0106   008D                 ; Delay for button not repeat (test)
0107   008D CD 87 01        CALL DELAY_100mS
0108   0090 CD 87 01        CALL DELAY_100mS
0109   0093 CD 87 01        CALL DELAY_100mS
0110   0096 CD 87 01        CALL DELAY_100mS
0111   0099 CD 87 01        CALL DELAY_100mS
0112   009C                 
0113   009C D3 40           OUT (Port40), A
0114   009E             
0115   009E FB              EI
0116   009F                 
0117   009F C3 40 01        JP STEP1
0118   00A2             
0119   00A2             
0120   00A2             ;============================
0121   00A2             ; MONITOR TEST
0122   00A2             ;============================
0123   00A2             INT_MONITOR:
0124   00A2 F3              DI
0125   00A3 F5              PUSH AF
0126   00A4             
0127   00A4 DB 40           IN A, (Port40)
0128   00A6 E6 07           AND 7
0129   00A8 32 08 EE        LD (LAST_IN), A
0130   00AB                 
0131   00AB FE 00           CP 0
0132   00AD CA 08 01        JP Z, SHOW1
0133   00B0             
0134   00B0 3A 08 EE        LD A, (LAST_IN)
0135   00B3 FE 01           CP 1
0136   00B5 CA 16 01        JP Z, SHOW2
0137   00B8             
0138   00B8 3A 08 EE        LD A, (LAST_IN)
0139   00BB FE 02           CP 2
0140   00BD CA 24 01        JP Z, SHOW3
0141   00C0             
0142   00C0 3A 08 EE        LD A, (LAST_IN)
0143   00C3 FE 03           CP 3
0144   00C5 CA 32 01        JP Z, SHOW4
0145   00C8             
0146   00C8             
0147   00C8 3E 00           LD A, $00
0148   00CA D3 40           OUT (Port40), A
0149   00CC             
0150   00CC             EXIT_INT_MONITOR
0151   00CC F1              POP AF
0152   00CD FB              EI
0153   00CE ED 4D           RETI
0154   00D0             
0155   00D0             
0156   00D0             
0157   00D0             ; =========================================================
0158   00D0             ; PEGA LOW NUM EM A E RETORNA CHAR 7SEG EM A
0159   00D0             ; =========================================================
0160   00D0             GET_NUM_FROM_LOW:
0161   00D0 E5              PUSH    HL
0162   00D1 C5              PUSH    BC
0163   00D2 21 F8 00        LD      HL, LED_FONT
0164   00D5 E6 0F           AND     $0F
0165   00D7 01 00 00        LD      BC, 0
0166   00DA 4F              LD      C, A
0167   00DB 09              ADD     HL, BC
0168   00DC 7E              LD      A, (HL)
0169   00DD C1              POP     BC
0170   00DE E1              POP     HL
0171   00DF C9              RET
0172   00E0             
0173   00E0             ; =========================================================
0174   00E0             ; PEGA HIGH NUM EM A E RETORNA CHAR 7SEG EM A
0175   00E0             ; =========================================================
0176   00E0             GET_NUM_FROM_HIGH:
0177   00E0 E5              PUSH    HL
0178   00E1 C5              PUSH    BC
0179   00E2 21 F8 00        LD      HL, LED_FONT
0180   00E5 E6 F0           AND     $F0
0181   00E7 CB 0F           RRC     A
0182   00E9 CB 0F           RRC     A
0183   00EB CB 0F           RRC     A
0184   00ED CB 0F           RRC     A
0185   00EF 01 00 00        LD      BC, 0
0186   00F2 4F              LD      C, A
0187   00F3 09              ADD     HL, BC
0188   00F4 7E              LD      A, (HL)
0189   00F5 C1              POP     BC
0190   00F6 E1              POP     HL
0191   00F7 C9              RET
0192   00F8             
0193   00F8             ; Mapa char to display 0-F
0194   00F8 3F065B4F666DLED_FONT .db $3F, $06, $5B, $4F, $66, $6D, $7D, $07, $7F, $67 ; 0-9
0194   00FE 7D077F67
0195   0102 777C395E7971         .DB $77, $7C, $39, $5E, $79, $71                     ; A-F
0196   0108             
0197   0108             ; =========================================================
0198   0108             ; Tabela display
0199   0108             ; =========================================================
0200   0108             ; 
0201   0108             ;   0 - $3F     A - $77     K - $7A     U - $1C     . - $80
0202   0108             ;   1 - $06     B - $7C     L - $38     V - $3E     Ã‘ - $55
0203   0108             ;   2 - $5B     C - $39     M - $37     W - $1D     : - $41
0204   0108             ;   3 - $4F     D - $5E     N - $54     X - $70     ; - $88
0205   0108             ;   4 - $66     E - $79     O - $3F     Y - $6E     _ - $08
0206   0108             ;   5 - $6D     F - $71     P - $73     Z - $49     ~ - $01
0207   0108             ;   6 - $7D     G - $6F     Q - $67                 ' - $20
0208   0108             ;   7 - $07     H - $76     R - $50     + - $46     
0209   0108             ;   8 - $7F     I - $06     S - $6D     , - $04     
0210   0108             ;   9 - $67     J - $1E     T - $78     - - $40   
0211   0108             
0212   0108             SHOW1:
0213   0108 E5              PUSH HL
0214   0109 2A 02 EF        LD HL, (RAM_PC)
0215   010C 7C              LD A, H
0216   010D CD E0 00        CALL GET_NUM_FROM_HIGH
0217   0110 D3 40           OUT (Port40), A
0218   0112 E1              POP HL
0219   0113 C3 CC 00        JP EXIT_INT_MONITOR
0220   0116             
0221   0116             SHOW2:
0222   0116 E5              PUSH HL
0223   0117 2A 02 EF        LD HL, (RAM_PC)
0224   011A 7C              LD A, H
0225   011B CD D0 00        CALL GET_NUM_FROM_LOW
0226   011E D3 40           OUT (Port40), A
0227   0120 E1              POP HL
0228   0121 C3 CC 00        JP EXIT_INT_MONITOR
0229   0124             
0230   0124             SHOW3:
0231   0124 E5              PUSH HL
0232   0125 2A 02 EF        LD HL, (RAM_PC)
0233   0128 7D              LD A, L
0234   0129 CD E0 00        CALL GET_NUM_FROM_HIGH
0235   012C D3 40           OUT (Port40), A
0236   012E E1              POP HL
0237   012F C3 CC 00        JP EXIT_INT_MONITOR
0238   0132             
0239   0132             SHOW4:
0240   0132 E5              PUSH HL
0241   0133 2A 02 EF        LD HL, (RAM_PC)
0242   0136 7D              LD A, L
0243   0137 CD D0 00        CALL GET_NUM_FROM_LOW
0244   013A D3 40           OUT (Port40), A
0245   013C E1              POP HL
0246   013D C3 CC 00        JP EXIT_INT_MONITOR
0247   0140             
0248   0140             ; ===============================================
0249   0140             ; ===============================================
0250   0140             ; ===============================================
0251   0140             
0252   0140             
0253   0140             
0254   0140             ;============================
0255   0140             ; PART 1
0256   0140             ;============================
0257   0140             STEP1:
0258   0140 F3              DI
0259   0141 21 4B 01        LD HL, STEP2
0260   0144 22 00 EF        LD (INT_VEC), HL
0261   0147 D3 40           OUT (Port40), A
0262   0149 FB              EI
0263   014A 76              HALT
0264   014B             
0265   014B             
0266   014B             
0267   014B             ; Somar todos os clocks 1024us
0268   014B             ;============================
0269   014B             ; PART 2
0270   014B             ;============================
0271   014B             STEP2:
0272   014B 21 69 01        LD HL, STEP3 ;(1.75)
0273   014E 22 00 EF        LD (INT_VEC), HL ; (4.00)
0274   0151             
0275   0151             
0276   0151 F5              PUSH AF ; (2.75)
0277   0152 AF              XOR A ; (1.00)
0278   0153 D3 40           OUT (Port40), A ; (2.75)
0279   0155 F1              POP AF ; (2.50)
0280   0156             
0281   0156                 ; delay
0282   0156 C5              PUSH BC ; (2.75)
0283   0157 06 E5           LD B, $E5 ;(1.75)  ----->  DEC(230) = $E6
0284   0159             loop_step2:
0285   0159 00              NOP     ;(1)
0286   015A 10 FD           DJNZ loop_step2 ;if B!=0 (3.25), if B=0 (2)
0287   015C C1              POP BC ; (2.50)
0288   015D                 ; delay end
0289   015D             
0290   015D                 ;OUT (Port40), A ;(2.75)
0291   015D 00              NOP ; (1)
0292   015E 00              NOP ; (1)
0293   015F 00              NOP ; (1)
0294   0160             
0295   0160 2A 02 EF        LD HL, (RAM_PC) ; (4.00)
0296   0163 E5              PUSH HL ;(2.75)
0297   0164 08              EX AF, AF' ; (1)'
0298   0165 D9              EXX   ;(1)
0299   0166 FB              EI ;(1)
0300   0167 ED 4D           RETI ;(2.50)
0301   0169             
0302   0169             ; 1024 = 36 + (4.25 x T) - 4
0303   0169             ; T = (1024 - 36 - 4) / 4.25
0304   0169             ; T = 230 DEC
0305   0169             
0306   0169             ;============================
0307   0169             ; PART 3
0308   0169             ;============================
0309   0169             STEP3:
0310   0169 F3              DI
0311   016A 08              EX AF, AF' ;'
0312   016B D9              EXX
0313   016C F5              PUSH AF
0314   016D AF              XOR A
0315   016E D3 40           OUT (Port40), A
0316   0170 F1              POP AF
0317   0171             
0318   0171                 
0319   0171 E1              POP HL ; PC
0320   0172 22 02 EF        LD (RAM_PC), HL
0321   0175             
0322   0175                 ; save AF
0323   0175 F5              PUSH AF
0324   0176 E1              POP HL
0325   0177 22 04 EF        LD (RAM_AF), HL
0326   017A             
0327   017A 21 A2 00        LD HL, INT_MONITOR
0328   017D 22 00 EF        LD (INT_VEC), HL
0329   0180             
0330   0180 21 82 00        LD HL, LOOP
0331   0183 E5              PUSH HL
0332   0184 FB              EI
0333   0185 ED 4D           RETI
0334   0187             
0335   0187             
0336   0187             ;============================
0337   0187             ; DELAY 1000mS
0338   0187             ;============================
0339   0187 0E 01       DELAY_100mS	LD	C,1
0340   0189 C5          DELAY_C		PUSH	BC
0341   018A 06 00       		LD	B,0
0342   018C C5          DELAY_LP	PUSH	BC
0343   018D 10 FE       		DJNZ	$		;13   * 256 / 4 = 832uSec
0344   018F C1          		POP	BC
0345   0190 10 FA       		DJNZ	DELAY_LP	;~100mSEC
0346   0192 0D          		DEC	C
0347   0193 20 F7       		JR  NZ,	DELAY_LP	;*4 ~= 7mSec
0348   0195 C1          		POP	BC
0349   0196 C9          		RET
0350   0197             
0351   0197             
0352   0197             .end
tasm: Number of errors = 0
